{"version":3,"sources":["serviceWorker.js","components/GlobalStyles.js","mixins/chartjs.js","theme/index.js","theme/shadows.js","theme/typography.js","_actions/types.js","_services/auth-header.js","_helpers/index.js","_services/auth.service.js","_actions/auth.js","layouts/DashboardLayout/NavBar/NavItem.js","layouts/DashboardLayout/NavBar/index.js","components/Logo.js","layouts/DashboardLayout/TopBar.js","layouts/DashboardLayout/index.js","layouts/MainLayout/TopBar.js","layouts/MainLayout/index.js","components/Page.js","views/account/AccountView/Profile.js","views/account/AccountView/ProfileDetails.js","views/account/AccountView/index.js","views/customer/CustomerListView/Results.js","utils/getInitials.js","views/customer/CustomerListView/Toolbar.js","views/customer/CustomerListView/data.js","views/customer/CustomerListView/index.js","views/reports/DashboardView/buttons/QuoteReview.js","views/reports/DashboardView/buttons/ManageEmployees.js","views/reports/DashboardView/buttons/OrderTracking.js","views/reports/DashboardView/buttons/AccountSettings.js","views/reports/DashboardView/buttons/RequestForQuotation.js","views/reports/DashboardView/cards/QuotationCard.js","views/reports/DashboardView/overviews/quotations/AwaitingComputation.js","views/reports/DashboardView/overviews/quotations/AwaitingApproval.js","views/jobOrders/JobOrderCard.js","views/reports/DashboardView/overviews/jobOrders/InProduction.js","views/reports/DashboardView/overviews/jobOrders/OutForDelivery.js","_services/quotation.service.js","_actions/quotation.js","_services/jobOrder.service.js","_actions/jobOrder.js","views/reports/DashboardView/index.js","views/auth/LoginView.js","views/errors/NotFoundView.js","views/quotations/QuotationCardComputed.js","views/tracking_cus/ProductListView/ProductCard.js","views/tracking_cus/ProductListView/ProductCardDelivery.js","views/tracking_cus/ProductListView/ProductCardProd.js","views/tracking_cus/ProductListView/data.js","_helpers/hooks.js","views/tracking_cus/ProductListView/index.js","views/auth/RegisterView.js","views/settings/SettingsView/Profile.js","views/settings/SettingsView/ProfileDetails.js","views/settings/SettingsView/Password.js","views/settings/SettingsView/index.js","views/quotations/QuotationCard.js","views/quotations/QuoteReviewListView/index.js","views/quotations/QuotationItem.js","views/quotations/QuoteReviewDetailView/ProjectSettings.js","views/quotations/QuoteReviewDetailView/Finishing.js","views/quotations/QuoteReviewDetailView/PlatesRunningPaper.js","views/quotations/QuoteReviewDetailView/ExtraCosts.js","views/quotations/QuoteReviewDetailView/ProjectSummaryDialog.js","views/quotations/QuoteReviewDetailView/index.js","views/quotations/RequestForQuotationView/index.js","views/product/ProductListView/ProductCards.js","views/product/ProductListView/data.js","views/product/ProductListView/index.js","views/employee/EmployeeListView/EmployeeCard.js","_services/users.service.js","_actions/users.js","views/employee/EmployeeListView/AddEmployeeDialog.js","views/employee/EmployeeListView/index.js","views/employee/EmployeeListView/data.js","routes.js","App.js","_reducers/auth.js","_reducers/message.js","_reducers/quotation.js","_reducers/jobOrder.js","_reducers/users.js","_reducers/index.js","store.js","index.js"],"names":["Boolean","window","location","hostname","match","useStyles","makeStyles","createStyles","boxSizing","margin","padding","html","height","width","body","backgroundColor","a","textDecoration","GlobalStyles","Chart","helpers","extend","elements","Rectangle","prototype","draw","left","right","top","bottom","signX","signY","borderSkipped","radius","ctx","this","_chart","vm","_view","borderWidth","cornerRadius","config","options","horizontal","base","x","y","barSize","Math","min","abs","halfStroke","borderLeft","borderRight","borderTop","borderBottom","beginPath","fillStyle","strokeStyle","borderColor","lineWidth","corners","startCorner","indexOf","cornerAt","index","corner","moveTo","i","nextCornerId","floor","xTl","xTr","yTl","yTr","xBl","xBr","yBl","yBr","lineTo","quadraticCurveTo","fill","stroke","theme","createMuiTheme","palette","background","dark","default","colors","common","white","paper","primary","main","grey","secondary","text","shadows","typography","h1","fontWeight","fontSize","letterSpacing","h2","h3","h4","h5","h6","overline","REGISTER_SUCCESS","REGISTER_FAIL","LOGIN_SUCCESS","LOGIN_FAIL","LOGOUT","PROFILE_FOUND","PROFILE_NOT_FOUND","PRODUCTION_EMPLOYEES_FOUND","PRODUCTION_EMPLOYEES_NOT_FOUND","DRIVER_EMPLOYEES_FOUND","DRIVER_EMPLOYEES_NOT_FOUND","ACCOUNT_MANAGER_EMPLOYEES_FOUND","ACCOUNT_MANAGER_EMPLOYEES_NOT_FOUND","OWNER_EMPLOYEES_FOUND","OWNER_EMPLOYEES_NOT_FOUND","SET_MESSAGE","CLEAR_MESSAGE","CREATE_QUOTATION_SUCCESS","CREATE_QUOTATION_FAIL","RETRIEVE_QUOTATION_SUCCESS","RETRIEVE_QUOTATION_FAIL","UPDATE_QUOTATION_SUCCESS","UPDATE_QUOTATION_FAIL","RETRIEVE_ALL_QUOTATIONS_SUCCESS","RETRIEVE_ALL_QUOTATIONS_FAIL","RETRIEVE_COMPUTED_QUOTATIONS_SUCCESS","RETRIEVE_COMPUTED_QUOTATIONS_FAIL","RETRIEVE_IN_PROGRESS_QUOTATIONS_SUCCESS","RETRIEVE_IN_PROGRESS_QUOTATIONS_FAIL","RETRIEVE_APPROVED_QUOTATIONS_SUCCESS","RETRIEVE_APPROVED_QUOTATIONS_FAIL","CREATE_JOB_ORDER_SUCCESS","CREATE_JOB_ORDER_FAIL","RETRIEVE_PENDING_JOB_ORDERS_SUCCESS","RETRIEVE_PENDING_JOB_ORDERS_FAIL","RETRIEVE_IN_PROGRESS_JOB_ORDERS_SUCCESS","RETRIEVE_IN_PROGRESS_JOB_ORDERS_FAIL","RETRIEVE_OUT_FOR_DELIVERY_JOB_ORDERS_SUCCESS","RETRIEVE_OUT_FOR_DELIVERY_JOB_ORDERS_FAIL","RETRIEVE_FINISHED_JOB_ORDERS_SUCCESS","RETRIEVE_FINISHED_JOB_ORDERS_FAIL","authHeader","user","JSON","parse","localStorage","getItem","access","getResultURL","baseURL","urlParams","requestURL","foundFirstParam","key","concat","toString","getFilteredObject","rawObject","allowedFields","Array","isArray","filteredObjects","item","filteredObject","Object","keys","filter","includes","reduce","object","push","length","getJobPosition","job_position","limitVisibility","element","roles","exclude","newAccount","account","id","axios","post","then","response","put","username","password","data","setItem","stringify","removeItem","Promise","resolve","get","headers","catch","error","console","log","getProfile","dispatch","AuthService","type","payload","profile","reject","logout","display","paddingTop","paddingBottom","button","color","fontWeightMedium","justifyContent","textTransform","icon","marginRight","spacing","title","active","NavItem","className","href","Icon","rest","classes","ListItem","clsx","disableGutters","uniqueId","Button","activeClassName","component","RouterLink","to","size","mobileDrawer","desktopDrawer","avatar","cursor","NavBar","onMobileClose","openMobile","useDispatch","currentUserProfile","useSelector","state","auth","newUser","name","full_name","jobTitle","setUserProfile","items","BarChartIcon","handleClick","restrict_to","UsersIcon","ShoppingBagIcon","ClipboardIcon","UserIcon","SettingsIcon","LogOutIcon","useLocation","useEffect","pathname","content","Box","flexDirection","alignItems","p","Avatar","src","ml","Typography","variant","Divider","List","map","onClick","Hidden","lgUp","Drawer","anchor","onClose","open","mdDown","defaultProps","Logo","props","alt","root","TopBar","onMobileNavOpen","useState","notifications","AppBar","elevation","flexGrow","IconButton","Badge","badgeContent","overflow","wrapper","flex","breakpoints","up","paddingLeft","contentContainer","DashboardLayout","isMobileNavOpen","setMobileNavOpen","toolbar","MainLayout","Page","forwardRef","ref","children","Helmet","Profile","Card","CardContent","gutterBottom","dateText","moment","format","CardActions","fullWidth","states","value","label","ProfileDetails","firstName","lastName","email","phone","country","values","setValues","handleChange","event","target","autoComplete","noValidate","CardHeader","subheader","Grid","container","md","xs","TextField","helperText","onChange","required","select","SelectProps","native","option","minHeight","Account","Container","maxWidth","lg","Results","customers","selectedCustomerIds","setSelectedCustomerIds","limit","setLimit","page","setPage","minWidth","Table","TableHead","TableRow","TableCell","Checkbox","checked","indeterminate","newSelectedCustomerIds","customer","TableBody","slice","hover","selected","selectedIndex","handleSelectOne","avatarUrl","replace","split","v","toUpperCase","join","getInitials","address","city","createdAt","TablePagination","count","onChangePage","newPage","onChangeRowsPerPage","rowsPerPage","rowsPerPageOptions","importButton","exportButton","Toolbar","mt","InputProps","startAdornment","InputAdornment","position","SvgIcon","placeholder","uuid","street","CustomerListView","media","QuotationReview","justify","align","ManageEmployees","OrderTracking","AccountSettings","RequestForQuotation","statsItem","statsIcon","QuotationCard","quotation","navigate","useNavigate","mb","project_name","client","product_type","product_name","Date","created_date","toLocaleDateString","approval_status","getApprovalStatus","AwaitingComputation","sm","style","maxHeight","in_progress","AwaitingApproval","computed","JobOrderCard","jobOrder","Number","page_length","toFixed","page_width","paper_types","lamination_types","binding_types","production_status","getProductionStatus","InProduction","in_production","OutForDelivery","out_for_delivery","filteredQuotationData","filteredQuotationItemsData","updateResult","quotationsListResult","approveQuotation","QuotationService","quotationToUpdate","getQuotationById","getComputedQuotations","quotations","getInProgressQuotations","getApprovedQuotations","manager","newJobOrder","jobOrdersListResult","getPendingJobOrders","JobOrderService","jobOrders","getInProductionJobOrders","Dashboard","computedQuotations","inProgressQuotations","inProgressJobOrders","outForDeliveryJobOrders","finishedJobOrders","direction","xl","QuoteReview","my","LoginView","isLoggedIn","initialValues","validationSchema","Yup","shape","max","onSubmit","actions","toast","setSubmitting","errors","handleBlur","handleSubmit","isSubmitting","touched","onBlur","disabled","Link","image","marginTop","NotFoundView","textAlign","QuotationCardComputed","currentQuotation","isUserClient","quantity","raw_total_costs","toLocaleString","currency","markup_costs","final_total_costs","final_unit_costs","createJobOrder","totalPrice","orderID","orderPrice","unitCost","status","customerName","customerAddress","totalPages","numberColors","useInterval","callback","delay","savedCallback","React","useRef","current","setInterval","clearInterval","ProductList","pendingJobOrders","initialFetchDataFinished","setInitialFetchDataFinished","fetchData","initialFetchData","reFetchData","productCard","RegisterView","first_name","middle_name","last_name","policy","matches","oneOf","underline","FormHelperText","Password","confirm","SettingsView","quotationCard","QuotationReviewList","approved","approvedQuotations","QuotationItem","quotationItem","remove","item_type","MenuItem","no_colors","lamination","laminationTypes","laminationType","lamination_type","binding","bindingTypes","bindingType","binding_type","paperTypes","paperType","paper_type","ProjectSettings","inputProps","readOnly","now","InputLabelProps","shrink","markup_percentage","margin_of_error","spread_length","spread_width","Finishing","total_lamination_costs","total_binding_costs","total_folds","total_folding_costs","total_gathering_costs","PlatesRunningPaper","pages_can_fit","total_no_plates","total_plate_costs","total_running_costs","total_no_sheets","total_pages","total_paper_costs","ExtraCosts","cutting_costs","packaging_costs","transport_costs","ProjectSummaryDialog","Dialog","openDialog","handleCloseDialog","DialogTitle","DialogContent","raw_unit_costs","handleGoBack","finishComputing","e","QuoteReviewDetail","setOpenDialog","quoteDetails","setPaperTypes","setLaminationTypes","setBindingTypes","handleUpdateQuotation","updateQuotation","enableReinitialize","success","handleCreateQuotation","createQuotation","ProductCard","product","productName","productStartPrice","productDescription","products","ProductCards","EmployeeCard","employee","jobPosition","resultURL","getProductionEmployees","UsersService","userAccounts","getDriverEmployees","getOwnerEmployees","getAccountManagerEmployees","AddEmployeeDialog","openAddEmployeeDialog","handleCloseAddEmployeeDialog","employeeType","mobile_number","setOpenAddEmployeeDialog","employeeCard","EmployeeList","accountManagers","users","owners","productionEmployees","driverEmployees","handleFetchData","setEmployeeType","Routes","fetchProfileFinished","fetchProfile","initialFetchProfile","limitRouteAccess","routes","path","AccountView","DashboardView","useRoutes","App","ThemeProvider","closeOnClick","hideProgressBar","autoClose","draggable","initialState","allQuotations","currentJobOrder","allUsers","rootReducer","combineReducers","action","message","prouctionEmployees","middleware","thunk","store","createStore","applyMiddleware","defaults","xsrfCookieName","xsrfHeaderName","ReactDOM","render","document","getElementById","navigator","serviceWorker","ready","registration","unregister"],"mappings":"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","file":"static/js/main.418012cf.chunk.js","sourcesContent":["/* eslint-disable */\r\n// This optional code is used to register a service worker.\r\n// register() is not called by default.\r\n\r\n// This lets the app load faster on subsequent visits in production, and gives\r\n// it offline capabilities. However, it also means that developers (and users)\r\n// will only see deployed updates on subsequent visits to a page, after all the\r\n// existing tabs open on the page have been closed, since previously cached\r\n// resources are updated in the background.\r\n\r\n// To learn more about the benefits of this model and instructions on how to\r\n// opt-in, read http://bit.ly/CRA-PWA\r\n\r\nconst isLocalhost = Boolean(\r\n  window.location.hostname === 'localhost' ||\r\n  // [::1] is the IPv6 localhost address.\r\n  window.location.hostname === '[::1]' ||\r\n  // 127.0.0.1/8 is considered localhost for IPv4.\r\n  window.location.hostname.match(\r\n    /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\r\n  )\r\n);\r\n\r\nexport function register(config) {\r\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\r\n    // The URL constructor is available in all browsers that support SW.\r\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\r\n    if (publicUrl.origin !== window.location.origin) {\r\n      // Our service worker won't work if PUBLIC_URL is on a different origin\r\n      // from what our page is served on. This might happen if a CDN is used to\r\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\r\n      return;\r\n    }\r\n\r\n    window.addEventListener('load', () => {\r\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\r\n\r\n      if (isLocalhost) {\r\n        // This is running on localhost. Let's check if a service worker still exists or not.\r\n        checkValidServiceWorker(swUrl, config);\r\n\r\n        // Add some additional logging to localhost, pointing developers to the\r\n        // service worker/PWA documentation.\r\n        navigator.serviceWorker.ready.then(() => {\r\n          console.log(\r\n            'This web app is being served cache-first by a service ' +\r\n            'worker. To learn more, visit http://bit.ly/CRA-PWA'\r\n          );\r\n        });\r\n      } else {\r\n        // Is not localhost. Just register service worker\r\n        registerValidSW(swUrl, config);\r\n      }\r\n    });\r\n  }\r\n}\r\n\r\nfunction registerValidSW(swUrl, config) {\r\n  navigator.serviceWorker\r\n    .register(swUrl)\r\n    .then(registration => {\r\n      registration.onupdatefound = () => {\r\n        const installingWorker = registration.installing;\r\n        if (installingWorker == null) {\r\n          return;\r\n        }\r\n        installingWorker.onstatechange = () => {\r\n          if (installingWorker.state === 'installed') {\r\n            if (navigator.serviceWorker.controller) {\r\n              // At this point, the updated precached content has been fetched,\r\n              // but the previous service worker will still serve the older\r\n              // content until all client tabs are closed.\r\n              console.log(\r\n                'New content is available and will be used when all ' +\r\n                'tabs for this page are closed. See http://bit.ly/CRA-PWA.'\r\n              );\r\n\r\n              // Execute callback\r\n              if (config && config.onUpdate) {\r\n                config.onUpdate(registration);\r\n              }\r\n            } else {\r\n              // At this point, everything has been precached.\r\n              // It's the perfect time to display a\r\n              // \"Content is cached for offline use.\" message.\r\n              console.log('Content is cached for offline use.');\r\n\r\n              // Execute callback\r\n              if (config && config.onSuccess) {\r\n                config.onSuccess(registration);\r\n              }\r\n            }\r\n          }\r\n        };\r\n      };\r\n    })\r\n    .catch(error => {\r\n      console.error('Error during service worker registration:', error);\r\n    });\r\n}\r\n\r\nfunction checkValidServiceWorker(swUrl, config) {\r\n  // Check if the service worker can be found. If it can't reload the page.\r\n  fetch(swUrl)\r\n    .then(response => {\r\n      // Ensure service worker exists, and that we really are getting a JS file.\r\n      const contentType = response.headers.get('content-type');\r\n      if (\r\n        response.status === 404 ||\r\n        (contentType != null && contentType.indexOf('javascript') === -1)\r\n      ) {\r\n        // No service worker found. Probably a different app. Reload the page.\r\n        navigator.serviceWorker.ready.then(registration => {\r\n          registration.unregister().then(() => {\r\n            window.location.reload();\r\n          });\r\n        });\r\n      } else {\r\n        // Service worker found. Proceed as normal.\r\n        registerValidSW(swUrl, config);\r\n      }\r\n    })\r\n    .catch(() => {\r\n      console.log(\r\n        'No internet connection found. App is running in offline mode.'\r\n      );\r\n    });\r\n}\r\n\r\nexport function unregister() {\r\n  if ('serviceWorker' in navigator) {\r\n    navigator.serviceWorker.ready.then(registration => {\r\n      registration.unregister();\r\n    });\r\n  }\r\n}\r\n","import { createStyles, makeStyles } from '@material-ui/core';\r\n\r\nconst useStyles = makeStyles(() => createStyles({\r\n  '@global': {\r\n    '*': {\r\n      boxSizing: 'border-box',\r\n      margin: 0,\r\n      padding: 0,\r\n    },\r\n    html: {\r\n      '-webkit-font-smoothing': 'antialiased',\r\n      '-moz-osx-font-smoothing': 'grayscale',\r\n      height: '100%',\r\n      width: '100%'\r\n    },\r\n    body: {\r\n      backgroundColor: '#f4f6f8',\r\n      height: '100%',\r\n      width: '100%'\r\n    },\r\n    a: {\r\n      textDecoration: 'none'\r\n    },\r\n    '#root': {\r\n      height: '100%',\r\n      width: '100%'\r\n    }\r\n  }\r\n}));\r\n\r\nconst GlobalStyles = () => {\r\n  useStyles();\r\n\r\n  return null;\r\n};\r\n\r\nexport default GlobalStyles;\r\n","import { Chart } from 'react-chartjs-2';\r\n\r\n// ChartJS extension rounded bar chart\r\n// https://codepen.io/jedtrow/full/ygRYgo\r\nfunction draw() {\r\n  const { ctx } = this._chart;\r\n  const vm = this._view;\r\n  let { borderWidth } = vm;\r\n\r\n  let left;\r\n  let right;\r\n  let top;\r\n  let bottom;\r\n  let signX;\r\n  let signY;\r\n  let borderSkipped;\r\n  let radius;\r\n\r\n  // If radius is less than 0 or is large enough to cause drawing errors a max\r\n  //      radius is imposed. If cornerRadius is not defined set it to 0.\r\n  let { cornerRadius } = this._chart.config.options;\r\n  if (cornerRadius < 0) {\r\n    cornerRadius = 0;\r\n  }\r\n\r\n  if (typeof cornerRadius === 'undefined') {\r\n    cornerRadius = 0;\r\n  }\r\n\r\n  if (!vm.horizontal) {\r\n    // bar\r\n    left = vm.x - vm.width / 2;\r\n    right = vm.x + vm.width / 2;\r\n    top = vm.y;\r\n    bottom = vm.base;\r\n    signX = 1;\r\n    signY = bottom > top ? 1 : -1;\r\n    borderSkipped = vm.borderSkipped || 'bottom';\r\n  } else {\r\n    // horizontal bar\r\n    left = vm.base;\r\n    right = vm.x;\r\n    top = vm.y - vm.height / 2;\r\n    bottom = vm.y + vm.height / 2;\r\n    signX = right > left ? 1 : -1;\r\n    signY = 1;\r\n    borderSkipped = vm.borderSkipped || 'left';\r\n  }\r\n\r\n  // Canvas doesn't allow us to stroke inside the width so we can\r\n  // adjust the sizes to fit if we're setting a stroke on the line\r\n  if (borderWidth) {\r\n    // borderWidth shold be less than bar width and bar height.\r\n    const barSize = Math.min(Math.abs(left - right), Math.abs(top - bottom));\r\n    borderWidth = borderWidth > barSize ? barSize : borderWidth;\r\n    const halfStroke = borderWidth / 2;\r\n    // Adjust borderWidth when bar top position is near vm.base(zero).\r\n    const borderLeft = left + (borderSkipped !== 'left' ? halfStroke * signX : 0);\r\n    const borderRight = right + (borderSkipped !== 'right' ? -halfStroke * signX : 0);\r\n    const borderTop = top + (borderSkipped !== 'top' ? halfStroke * signY : 0);\r\n    const borderBottom = bottom + (borderSkipped !== 'bottom' ? -halfStroke * signY : 0);\r\n    // not become a vertical line?\r\n    if (borderLeft !== borderRight) {\r\n      top = borderTop;\r\n      bottom = borderBottom;\r\n    }\r\n    // not become a horizontal line?\r\n    if (borderTop !== borderBottom) {\r\n      left = borderLeft;\r\n      right = borderRight;\r\n    }\r\n  }\r\n\r\n  ctx.beginPath();\r\n  ctx.fillStyle = vm.backgroundColor;\r\n  ctx.strokeStyle = vm.borderColor;\r\n  ctx.lineWidth = borderWidth;\r\n\r\n  // Corner points, from bottom-left to bottom-right clockwise\r\n  // | 1 2 |\r\n  // | 0 3 |\r\n  const corners = [[left, bottom], [left, top], [right, top], [right, bottom]];\r\n\r\n  // Find first (starting) corner with fallback to 'bottom'\r\n  const borders = ['bottom', 'left', 'top', 'right'];\r\n  let startCorner = borders.indexOf(borderSkipped, 0);\r\n  if (startCorner === -1) {\r\n    startCorner = 0;\r\n  }\r\n\r\n  function cornerAt(index) {\r\n    return corners[(startCorner + index) % 4];\r\n  }\r\n\r\n  // Draw rectangle from 'startCorner'\r\n  let corner = cornerAt(0);\r\n  ctx.moveTo(corner[0], corner[1]);\r\n\r\n  for (let i = 1; i < 4; i += 1) {\r\n    corner = cornerAt(i);\r\n    let nextCornerId = i + 1;\r\n    if (nextCornerId === 4) {\r\n      nextCornerId = 0;\r\n    }\r\n\r\n    const width = corners[2][0] - corners[1][0];\r\n    const height = corners[0][1] - corners[1][1];\r\n    const x = corners[1][0];\r\n    const y = corners[1][1];\r\n\r\n    radius = cornerRadius;\r\n    // Fix radius being too large\r\n    if (radius > Math.abs(height) / 2) {\r\n      radius = Math.floor(Math.abs(height) / 2);\r\n    }\r\n    if (radius > Math.abs(width) / 2) {\r\n      radius = Math.floor(Math.abs(width) / 2);\r\n    }\r\n\r\n    if (height < 0) {\r\n      // Negative values in a standard bar chart\r\n      const xTl = x;\r\n      const xTr = x + width;\r\n      const yTl = y + height;\r\n      const yTr = y + height;\r\n\r\n      const xBl = x;\r\n      const xBr = x + width;\r\n      const yBl = y;\r\n      const yBr = y;\r\n\r\n      // Draw\r\n      ctx.moveTo(xBl + radius, yBl);\r\n      ctx.lineTo(xBr - radius, yBr);\r\n      ctx.quadraticCurveTo(xBr, yBr, xBr, yBr - radius);\r\n      ctx.lineTo(xTr, yTr + radius);\r\n      ctx.quadraticCurveTo(xTr, yTr, xTr - radius, yTr);\r\n      ctx.lineTo(xTl + radius, yTl);\r\n      ctx.quadraticCurveTo(xTl, yTl, xTl, yTl + radius);\r\n      ctx.lineTo(xBl, yBl - radius);\r\n      ctx.quadraticCurveTo(xBl, yBl, xBl + radius, yBl);\r\n    } else if (width < 0) {\r\n      // Negative values in a horizontal bar chart\r\n      const xTl = x + width;\r\n      const xTr = x;\r\n      const yTl = y;\r\n      const yTr = y;\r\n\r\n      const xBl = x + width;\r\n      const xBr = x;\r\n      const yBl = y + height;\r\n      const yBr = y + height;\r\n\r\n      // Draw\r\n      ctx.moveTo(xBl + radius, yBl);\r\n      ctx.lineTo(xBr - radius, yBr);\r\n      ctx.quadraticCurveTo(xBr, yBr, xBr, yBr - radius);\r\n      ctx.lineTo(xTr, yTr + radius);\r\n      ctx.quadraticCurveTo(xTr, yTr, xTr - radius, yTr);\r\n      ctx.lineTo(xTl + radius, yTl);\r\n      ctx.quadraticCurveTo(xTl, yTl, xTl, yTl + radius);\r\n      ctx.lineTo(xBl, yBl - radius);\r\n      ctx.quadraticCurveTo(xBl, yBl, xBl + radius, yBl);\r\n    } else {\r\n      // Positive Value\r\n      ctx.moveTo(x + radius, y);\r\n      ctx.lineTo(x + width - radius, y);\r\n      ctx.quadraticCurveTo(x + width, y, x + width, y + radius);\r\n      ctx.lineTo(x + width, y + height - radius);\r\n      ctx.quadraticCurveTo(\r\n        x + width,\r\n        y + height,\r\n        x + width - radius,\r\n        y + height\r\n      );\r\n      ctx.lineTo(x + radius, y + height);\r\n      ctx.quadraticCurveTo(x, y + height, x, y + height - radius);\r\n      ctx.lineTo(x, y + radius);\r\n      ctx.quadraticCurveTo(x, y, x + radius, y);\r\n    }\r\n  }\r\n\r\n  ctx.fill();\r\n  if (borderWidth) {\r\n    ctx.stroke();\r\n  }\r\n}\r\n\r\nChart.helpers.extend(Chart.elements.Rectangle.prototype, {\r\n  draw\r\n});\r\n","import { createMuiTheme, colors } from '@material-ui/core';\r\nimport shadows from './shadows';\r\nimport typography from './typography';\r\n\r\nconst theme = createMuiTheme({\r\n  palette: {\r\n    background: {\r\n      dark: '#F4F6F8',\r\n      default: colors.common.white,\r\n      paper: colors.common.white\r\n    },\r\n    primary: {\r\n      main: colors.grey[900]\r\n    },\r\n    secondary: {\r\n      main: colors.grey[900]\r\n    },\r\n    text: {\r\n      primary: colors.grey[900],\r\n      secondary: colors.grey[700]\r\n    }\r\n  },\r\n  shadows,\r\n  typography\r\n});\r\n\r\nexport default theme;\r\n","export default [\r\n  'none',\r\n  '0 0 0 1px rgba(63,63,68,0.05), 0 1px 2px 0 rgba(63,63,68,0.15)',\r\n  '0 0 1px 0 rgba(0,0,0,0.31), 0 2px 2px -2px rgba(0,0,0,0.25)',\r\n  '0 0 1px 0 rgba(0,0,0,0.31), 0 3px 4px -2px rgba(0,0,0,0.25)',\r\n  '0 0 1px 0 rgba(0,0,0,0.31), 0 3px 4px -2px rgba(0,0,0,0.25)',\r\n  '0 0 1px 0 rgba(0,0,0,0.31), 0 4px 6px -2px rgba(0,0,0,0.25)',\r\n  '0 0 1px 0 rgba(0,0,0,0.31), 0 4px 6px -2px rgba(0,0,0,0.25)',\r\n  '0 0 1px 0 rgba(0,0,0,0.31), 0 4px 8px -2px rgba(0,0,0,0.25)',\r\n  '0 0 1px 0 rgba(0,0,0,0.31), 0 5px 8px -2px rgba(0,0,0,0.25)',\r\n  '0 0 1px 0 rgba(0,0,0,0.31), 0 6px 12px -4px rgba(0,0,0,0.25)',\r\n  '0 0 1px 0 rgba(0,0,0,0.31), 0 7px 12px -4px rgba(0,0,0,0.25)',\r\n  '0 0 1px 0 rgba(0,0,0,0.31), 0 6px 16px -4px rgba(0,0,0,0.25)',\r\n  '0 0 1px 0 rgba(0,0,0,0.31), 0 7px 16px -4px rgba(0,0,0,0.25)',\r\n  '0 0 1px 0 rgba(0,0,0,0.31), 0 8px 18px -8px rgba(0,0,0,0.25)',\r\n  '0 0 1px 0 rgba(0,0,0,0.31), 0 9px 18px -8px rgba(0,0,0,0.25)',\r\n  '0 0 1px 0 rgba(0,0,0,0.31), 0 10px 20px -8px rgba(0,0,0,0.25)',\r\n  '0 0 1px 0 rgba(0,0,0,0.31), 0 11px 20px -8px rgba(0,0,0,0.25)',\r\n  '0 0 1px 0 rgba(0,0,0,0.31), 0 12px 22px -8px rgba(0,0,0,0.25)',\r\n  '0 0 1px 0 rgba(0,0,0,0.31), 0 13px 22px -8px rgba(0,0,0,0.25)',\r\n  '0 0 1px 0 rgba(0,0,0,0.31), 0 14px 24px -8px rgba(0,0,0,0.25)',\r\n  '0 0 1px 0 rgba(0,0,0,0.31), 0 16px 28px -8px rgba(0,0,0,0.25)',\r\n  '0 0 1px 0 rgba(0,0,0,0.31), 0 18px 30px -8px rgba(0,0,0,0.25)',\r\n  '0 0 1px 0 rgba(0,0,0,0.31), 0 20px 32px -8px rgba(0,0,0,0.25)',\r\n  '0 0 1px 0 rgba(0,0,0,0.31), 0 22px 34px -8px rgba(0,0,0,0.25)',\r\n  '0 0 1px 0 rgba(0,0,0,0.31), 0 24px 36px -8px rgba(0,0,0,0.25)'\r\n];\r\n","export default {\r\n  h1: {\r\n    fontWeight: 500,\r\n    fontSize: 35,\r\n    letterSpacing: '-0.24px'\r\n  },\r\n  h2: {\r\n    fontWeight: 500,\r\n    fontSize: 29,\r\n    letterSpacing: '-0.24px'\r\n  },\r\n  h3: {\r\n    fontWeight: 500,\r\n    fontSize: 24,\r\n    letterSpacing: '-0.06px'\r\n  },\r\n  h4: {\r\n    fontWeight: 500,\r\n    fontSize: 20,\r\n    letterSpacing: '-0.06px'\r\n  },\r\n  h5: {\r\n    fontWeight: 500,\r\n    fontSize: 16,\r\n    letterSpacing: '-0.05px'\r\n  },\r\n  h6: {\r\n    fontWeight: 500,\r\n    fontSize: 14,\r\n    letterSpacing: '-0.05px'\r\n  },\r\n  overline: {\r\n    fontWeight: 500\r\n  }\r\n};\r\n","export const REGISTER_SUCCESS = \"REGISTER_SUCCESS\";\r\nexport const REGISTER_FAIL = \"REGISTER_FAIL\";\r\nexport const LOGIN_SUCCESS = \"LOGIN_SUCCESS\";\r\nexport const LOGIN_FAIL = \"LOGIN_FAIL\";\r\nexport const LOGOUT = \"LOGOUT\";\r\n\r\n// USER PROFILES\r\nexport const PROFILE_FOUND = \"PROFILE_FOUND\";\r\nexport const PROFILE_NOT_FOUND = \"PROFILE_NOT_FOUND\";\r\nexport const PROFILE_UPDATE_SUCCESS = \"PROFILE_UPDATE_SUCCESS\";\r\nexport const PROFILE_UPDATE_FAIL = \"PROFILE_UPDATE_FAIL\";\r\nexport const ALL_ACCOUNTS_FOUND = \"ALL_ACCOUNTS_FOUND\";\r\nexport const ALL_ACCOUNTS_NOT_FOUND = \"ALL_ACCOUNTS_NOT_FOUND\";\r\n\r\n// CLIENT ACCOUNTS\r\nexport const CLIENTS_FOUND = \"CLIENTS_FOUND\";\r\nexport const CLIENTS_NOT_FOUND = \"CLIENTS_NOT_FOUND\";\r\n\r\n// EMPLOYEE ACCOUNTS\r\nexport const PRODUCTION_EMPLOYEES_FOUND = \"PRODUCTION_EMPLOYEES_FOUND\";\r\nexport const PRODUCTION_EMPLOYEES_NOT_FOUND = \"PRODUCTION_EMPLOYEES_NOT_FOUND\";\r\nexport const DRIVER_EMPLOYEES_FOUND = \"DELIVERYMAN_EMPLOYEES_FOUND\";\r\nexport const DRIVER_EMPLOYEES_NOT_FOUND = \"DELIVERYMAN_EMPLOYEES_NOT_FOUND\";\r\nexport const ACCOUNT_MANAGER_EMPLOYEES_FOUND = \"ACCOUNT_MANAGER_EMPLOYEES_FOUND\";\r\nexport const ACCOUNT_MANAGER_EMPLOYEES_NOT_FOUND = \"ACCOUNT_MANAGER_EMPLOYEES_NOT_FOUND\";\r\nexport const OWNER_EMPLOYEES_FOUND = \"OWNER_EMPLOYEES_FOUND\";\r\nexport const OWNER_EMPLOYEES_NOT_FOUND = \"OWNER_EMPLOYEES_NOT_FOUND\";\r\n\r\n// TODO: Remove unnecessary action types\r\nexport const SET_MESSAGE = \"SET_MESSAGE\";\r\nexport const CLEAR_MESSAGE = \"CLEAR_MESSAGE\";\r\n\r\n// QUOTATIONS\r\nexport const CREATE_QUOTATION_SUCCESS = \"CREATE_QUOTATION_SUCCESS\";\r\nexport const CREATE_QUOTATION_FAIL = \"CREATE_QUOTATION_FAIL\";\r\nexport const RETRIEVE_QUOTATION_SUCCESS = \"RETRIEVE_QUOTATION_SUCCESS\";\r\nexport const RETRIEVE_QUOTATION_FAIL = \"RETRIEVE_QUOTATION_FAIL\";\r\nexport const UPDATE_QUOTATION_SUCCESS = \"UPDATE_QUOTATION_SUCCESS\";\r\nexport const UPDATE_QUOTATION_FAIL = \"UPDATE_QUOTATION_FAIL\";\r\nexport const DELETE_QUOTATION_SUCCESS = \"DELETE_QUOTATION_SUCCESS\";\r\nexport const DELETE_QUOTATION_FAIL = \"DELETE_QUOTATION_FAIL\";\r\n\r\nexport const RETRIEVE_ALL_QUOTATIONS_SUCCESS = \"RETRIEVE_ALL_QUOTATIONS_SUCCESS\";\r\nexport const RETRIEVE_ALL_QUOTATIONS_FAIL = \"RETRIEVE_ALL_QUOTATIONS_FAIL\";\r\n\r\nexport const RETRIEVE_COMPUTED_QUOTATIONS_SUCCESS = \"RETRIEVE_COMPUTED_QUOTATIONS_SUCCESS\";\r\nexport const RETRIEVE_COMPUTED_QUOTATIONS_FAIL = \"RETRIEVE_COMPUTED_QUOTATIONS_FAIL\";\r\n\r\nexport const RETRIEVE_IN_PROGRESS_QUOTATIONS_SUCCESS = \"RETRIEVE_IN_PROGRESS_QUOTATIONS_SUCCESS\";\r\nexport const RETRIEVE_IN_PROGRESS_QUOTATIONS_FAIL = \"RETRIEVE_IN_PROGRESS_QUOTATIONS_FAIL\";\r\n\r\nexport const RETRIEVE_APPROVED_QUOTATIONS_SUCCESS = \"RETRIEVE_APPROVED_QUOTATIONS_SUCCESS\";\r\nexport const RETRIEVE_APPROVED_QUOTATIONS_FAIL = \"RETRIEVE_APPROVED_QUOTATIONS_FAIL\";\r\n\r\n// JOB ORDERS\r\nexport const CREATE_JOB_ORDER_SUCCESS=\"CREATE_JOB_ORDER_SUCCESS\"\r\nexport const CREATE_JOB_ORDER_FAIL=\"CREATE_JOB_ORDER_FAIL\"\r\n\r\nexport const RETRIEVE_PENDING_JOB_ORDERS_SUCCESS=\"RETRIEVE_PENDING_JOB_ORDERS_SUCCESS\"\r\nexport const RETRIEVE_PENDING_JOB_ORDERS_FAIL=\"RETRIEVE_PENDING_JOB_ORDERS_FAIL\"\r\n\r\nexport const RETRIEVE_IN_PROGRESS_JOB_ORDERS_SUCCESS=\"RETRIEVE_IN_PROGRESS_JOB_ORDERS_SUCCESS\"\r\nexport const RETRIEVE_IN_PROGRESS_JOB_ORDERS_FAIL=\"RETRIEVE_IN_PROGRESS_JOB_ORDERS_FAIL\"\r\n\r\nexport const RETRIEVE_OUT_FOR_DELIVERY_JOB_ORDERS_SUCCESS= \"RETRIEVE_OUT_FOR_DELIVERY_JOB_ORDERS_SUCCESS\"\r\nexport const RETRIEVE_OUT_FOR_DELIVERY_JOB_ORDERS_FAIL= \"RETRIEVE_OUT_FOR_DELIVERY_JOB_ORDERS_FAIL\"\r\n\r\nexport const RETRIEVE_FINISHED_JOB_ORDERS_SUCCESS= \"RETRIEVE_FINISHED_JOB_ORDERS_SUCCESS\"\r\nexport const RETRIEVE_FINISHED_JOB_ORDERS_FAIL= \"RETRIEVE_FINISHED_JOB_ORDERS_FAIL\"\r\n\r\nexport const START_JOB_ORDER_SUCCESS=\"START_JOB_ORDER_SUCCESS\"\r\nexport const START_JOB_ORDER_FAIL=\"START_JOB_ORDER_FAIL\"\r\n\r\nexport const DELIVER_JOB_ORDER_SUCCESS=\"DELIVER_JOB_ORDER_SUCCESS\"\r\nexport const DELIVER_JOB_ORDER_FAIL=\"DELIVER_JOB_ORDER_FAIL\"\r\n\r\nexport const FINISH_JOB_ORDER_SUCCESS=\"FINISH_JOB_ORDER_SUCCESS\"\r\nexport const FINISH_JOB_ORDER_FAIL=\"FINISH_JOB_ORDER_FAIL\"","export default function authHeader() {\r\n    // return authorization header with jwt token\r\n    let user = JSON.parse(localStorage.getItem(\"user\"));\r\n\r\n    if (user && user.access) {\r\n        return { 'Authorization': 'Bearer ' + user.access };\r\n    } else {\r\n        return {};\r\n    }\r\n}\r\n// eslint-disable-next-line\r\n// export default { authHeader };","import React from 'react';\r\n\r\nexport const getResultURL = (baseURL=\"api/\",urlParams = {}) => {\r\n    let requestURL = baseURL;\r\n    let foundFirstParam = false;\r\n    let i = 0;\r\n    for(let key in urlParams)\r\n    {\r\n        if(urlParams[key])\r\n        {\r\n            if(!foundFirstParam)\r\n            {\r\n                requestURL = requestURL.concat(\"?\")\r\n                foundFirstParam = true;\r\n            }\r\n            requestURL = requestURL.concat(`${key.toString()}=${urlParams[key]}`)\r\n            requestURL = requestURL.concat(\"&\")\r\n        }\r\n        i++;\r\n    }\r\n    return requestURL;\r\n}\r\n\r\nexport const getFilteredObject = (rawObject={}, allowedFields=[]) => {\r\n    if(Array.isArray(rawObject))\r\n    {\r\n        let filteredObjects = []\r\n        for(let i = 0; i < rawObject.length; i++)\r\n        {\r\n            let item = rawObject[i]\r\n            let filteredObject = Object.keys(item)\r\n            .filter(key=>allowedFields.includes(key))\r\n            .reduce((object,key)=>{\r\n                object[key] = item[key]\r\n                return object;\r\n            },{});\r\n            filteredObjects.push(filteredObject);\r\n        }\r\n        return filteredObjects;\r\n    }\r\n    else\r\n    {\r\n        const filteredObject = Object.keys(rawObject)\r\n            .filter(key => allowedFields.includes(key))\r\n            .reduce((object,key)=>{\r\n                object[key] = rawObject[key]\r\n                return object\r\n            }, {});\r\n        return filteredObject\r\n    }\r\n}\r\n\r\nexport const getJobPosition = (job_position) => {\r\n    switch(job_position)\r\n    {\r\n        case 'O':\r\n            return \"Owner\"\r\n        case 'AM':\r\n            return \"Account Manager\"\r\n        case 'D':\r\n            return \"Deliveryman\"\r\n        case 'P':\r\n            return \"Production Employee\"\r\n        case 'C':\r\n            return 'Client'\r\n        default:\r\n            return \"Client\"\r\n    }\r\n}\r\n\r\nexport const limitVisibility = (element, roles, job_position, exclude=false) => {\r\n    if(job_position === null || job_position === \"\")\r\n    {\r\n        job_position = 'C';\r\n    }\r\n    if(exclude===false)\r\n    {\r\n      if(roles.includes(job_position) || roles.length === 0)\r\n      {\r\n        // console.log(\"YEAH\", element);\r\n        return element;\r\n      }\r\n    }\r\n    else\r\n    {\r\n      if(!(roles.includes(job_position)))\r\n      {\r\n        // console.log(\"YEAH NO\", element);\r\n        return element;\r\n      }\r\n    }\r\n    // console.log(\"WTF happened?\", roles, job_position, exclude);\r\n    return <></>\r\n  }","import axios from \"axios\";\r\nimport authHeader from \"./auth-header\";\r\nimport {getFilteredObject} from \"../_helpers/\";\r\n\r\nconst register = (newAccount) => {\r\n  let user = getFilteredObject(newAccount,[\r\n    \"username\",\r\n    \"email\",\r\n    \"password\",\r\n    \"first_name\",\r\n    \"last_name\"\r\n  ])\r\n  let account = getFilteredObject(newAccount,[\r\n    \"middle_name\",\r\n    \"job_position\",\r\n    \"plate_number\",\r\n    \"shipping_address\",\r\n    \"mobile_number\",\r\n  ])\r\n  account.user = user.id;\r\n  // console.log(\"RESULTING OBJECTS: \", account, \", \\n\", user)\r\n  // console.log(\"RESULTING QUERY: \", JSON.stringify(account))\r\n  let result = axios.post(\"auth/users/\", user)\r\n  .then((response) => {\r\n    axios.put(`api/accounts/${user.username}/`,account)\r\n  });\r\n  return result;\r\n};\r\n\r\nconst login = (username, password) => {\r\n  return axios\r\n    .post(\"auth/jwt/create\", {\r\n      username,\r\n      password,\r\n    })\r\n    .then((response) => {\r\n      if (response.data.access) {\r\n        localStorage.setItem(\"user\", JSON.stringify(response.data));\r\n        // console.log(response.data);\r\n      }\r\n    });\r\n};\r\n\r\nconst getProfile = () => {\r\n  return axios\r\n    .get(\"auth/users/me/\", { headers: authHeader() })\r\n    .then((response) => {\r\n      \r\n      const result = axios\r\n        .get(`api/accounts/${response.data.username}/`, { headers: authHeader() })\r\n        .then((response)=>{\r\n          // console.log(response.data);\r\n          return response.data;\r\n        })\r\n        .catch((error) => {\r\n          console.log(error);\r\n          return error;\r\n        })\r\n      \r\n      return result;\r\n      // return response.data;\r\n    })\r\n}\r\n\r\nconst updateProfile = (username, account) => {\r\n  return axios.put(`api/accounts/${username}`, account);\r\n}\r\n\r\nconst verifyLoggedIn = () => {\r\n  const user = JSON.parse(localStorage.getItem(\"user\"));\r\n  return axios.post('/auth/jwt/verify',user.access)\r\n      .then((response)=>{\r\n        return user;\r\n      })\r\n      .catch((error)=>{\r\n        return error;\r\n      });\r\n}\r\n\r\nconst logout = () => {\r\n  localStorage.removeItem(\"user\");\r\n  return Promise.resolve();\r\n};\r\n\r\n// eslint-disable-next-line\r\nexport default {\r\n  register,\r\n  login,\r\n  logout,\r\n  getProfile,\r\n  updateProfile,\r\n  verifyLoggedIn,\r\n};\r\n","import {\r\n    REGISTER_SUCCESS,\r\n    REGISTER_FAIL,\r\n    LOGIN_SUCCESS,\r\n    LOGIN_FAIL,\r\n    LOGOUT,\r\n    PROFILE_FOUND,\r\n    PROFILE_NOT_FOUND,\r\n  } from \"./types\";\r\n  \r\nimport AuthService from \"../_services/auth.service\";\r\n  \r\nexport const register = (account) => (dispatch) => {\r\n  return AuthService.register(account)\r\n    .then(\r\n      (response) => {\r\n          dispatch({\r\n              type: REGISTER_SUCCESS,\r\n          });\r\n          return Promise.resolve();\r\n      },\r\n      (error) => {\r\n          dispatch({\r\n              type: REGISTER_FAIL,\r\n          });\r\n          return Promise.reject();\r\n      }\r\n    );\r\n};\r\n  \r\nexport const login = (username, password) => (dispatch) => {\r\n    return AuthService.login(username, password).then(\r\n      (data) => {\r\n        dispatch({\r\n          type: LOGIN_SUCCESS,\r\n          payload: { user: data },\r\n        });\r\n\r\n        return Promise.resolve();\r\n      },\r\n      (error) => {\r\n        dispatch({\r\n          type: LOGIN_FAIL,\r\n        });\r\n        dispatch({\r\n          type: PROFILE_NOT_FOUND,\r\n        });\r\n        return Promise.reject();\r\n      }\r\n    );\r\n}\r\n\r\nexport const getProfile = () => (dispatch) => {\r\n  return AuthService.getProfile()\r\n    .then(\r\n      (data)=>{\r\n        dispatch({\r\n          type: PROFILE_FOUND,\r\n          payload: { profile: data },\r\n        });\r\n        return Promise.resolve()\r\n      },\r\n      (error) => {\r\n        dispatch({\r\n          type: PROFILE_NOT_FOUND,\r\n        });\r\n        return Promise.reject()\r\n      }\r\n    );\r\n}\r\n  \r\nexport const logout = () => (dispatch) => {\r\n  return AuthService.logout()\r\n    .then((response)=>{\r\n      dispatch({\r\n        type: LOGOUT,\r\n      });\r\n      return Promise.resolve();\r\n    })\r\n    .catch((error)=>{\r\n      return Promise.reject();\r\n    })\r\n}\r\n","import React from 'react';\r\nimport { NavLink as RouterLink } from 'react-router-dom';\r\nimport clsx from 'clsx';\r\nimport PropTypes from 'prop-types';\r\nimport {\r\n  Button,\r\n  ListItem,\r\n  makeStyles\r\n} from '@material-ui/core';\r\n\r\nimport {uniqueId} from 'lodash';\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n  item: {\r\n    display: 'flex',\r\n    paddingTop: 0,\r\n    paddingBottom: 0\r\n  },\r\n  button: {\r\n    color: theme.palette.text.secondary,\r\n    fontWeight: theme.typography.fontWeightMedium,\r\n    justifyContent: 'flex-start',\r\n    letterSpacing: 0,\r\n    padding: '10px 8px',\r\n    textTransform: 'none',\r\n    width: '100%'\r\n  },\r\n  icon: {\r\n    marginRight: theme.spacing(1)\r\n  },\r\n  title: {\r\n    marginRight: 'auto'\r\n  },\r\n  active: {\r\n    color: theme.palette.primary.main,\r\n    '& $title': {\r\n      fontWeight: theme.typography.fontWeightMedium\r\n    },\r\n    '& $icon': {\r\n      color: theme.palette.primary.main\r\n    }\r\n  }\r\n}));\r\n\r\nconst NavItem = ({\r\n  className,\r\n  href,\r\n  icon: Icon,\r\n  title,\r\n  ...rest\r\n}) => {\r\n  const classes = useStyles();\r\n\r\n  return (\r\n    <ListItem\r\n      className={clsx(classes.item, className)}\r\n      disableGutters\r\n      {...rest}\r\n      key={uniqueId(\"navbar-item-\")}\r\n    >\r\n      <Button\r\n        activeClassName={classes.active}\r\n        className={classes.button}\r\n        component={RouterLink}\r\n        to={href}\r\n      >\r\n        {Icon && (\r\n          <Icon\r\n            className={classes.icon}\r\n            size=\"20\"\r\n          />\r\n        )}\r\n        <span className={classes.title}>\r\n          {title}\r\n        </span>\r\n      </Button>\r\n    </ListItem>\r\n  );\r\n};\r\n\r\nNavItem.propTypes = {\r\n  className: PropTypes.string,\r\n  href: PropTypes.string,\r\n  icon: PropTypes.elementType,\r\n  title: PropTypes.string\r\n};\r\n\r\nexport default NavItem;\r\n","import React, { useEffect } from 'react';\r\nimport { Link as RouterLink, useLocation } from 'react-router-dom';\r\nimport PropTypes from 'prop-types';\r\nimport {\r\n  Avatar,\r\n  Box,\r\n  Divider,\r\n  Drawer,\r\n  Hidden,\r\n  List,\r\n  Typography,\r\n  makeStyles\r\n} from '@material-ui/core';\r\nimport {\r\n  AlertCircle as AlertCircleIcon,\r\n  BarChart as BarChartIcon,\r\n  Lock as LockIcon,\r\n  LogOut as LogOutIcon,\r\n  Settings as SettingsIcon,\r\n  ShoppingBag as ShoppingBagIcon,\r\n  Clipboard as ClipboardIcon,\r\n  User as UserIcon,\r\n  UserPlus as UserPlusIcon,\r\n  Users as UsersIcon\r\n} from 'react-feather';\r\nimport NavItem from './NavItem';\r\n\r\nimport { useSelector, useDispatch } from \"react-redux\";\r\nimport { getProfile, logout } from \"../../../_actions/auth\";\r\n\r\nimport {getJobPosition, limitVisibility} from \"../../../_helpers\";\r\n\r\nimport {v4} from \"uuid\";\r\nimport { uniqueId } from 'lodash';\r\n\r\nconst useStyles = makeStyles(() => ({\r\n  mobileDrawer: {\r\n    width: 256\r\n  },\r\n  desktopDrawer: {\r\n    width: 256,\r\n    top: 64,\r\n    height: 'calc(100% - 64px)'\r\n  },\r\n  avatar: {\r\n    cursor: 'pointer',\r\n    width: 64,\r\n    height: 64\r\n  }\r\n}));\r\n\r\nconst NavBar = ({ onMobileClose, openMobile }) => {\r\n\r\n  const dispatch = useDispatch()\r\n  \r\n  const { profile: currentUserProfile } = useSelector((state) => state.auth) \r\n\r\n  // useEffect(()=>{\r\n  //   console.log(\"YO! \", currentUser, currentUserProfile);\r\n  // },[currentUserProfile,currentUser]);\r\n\r\n  const setUserProfile = (user) =>\r\n  {\r\n    let newUser = user\r\n    if(currentUserProfile !== null)\r\n    {\r\n      newUser.name = currentUserProfile.full_name\r\n      newUser.jobTitle = getJobPosition(currentUserProfile.job_position)\r\n    }\r\n    return newUser\r\n  }\r\n\r\n  const user = setUserProfile({\r\n    avatar: '/static/images/avatars/avatar_6.png',\r\n    jobTitle: 'None',\r\n    name: 'Mr. Ligot'\r\n  });\r\n\r\n  const items = [\r\n    {\r\n      href: '/app/dashboard',\r\n      icon: BarChartIcon,\r\n      title: 'Home',\r\n      handleClick: () => {\r\n\r\n      },\r\n      restrict_to: [],\r\n    },\r\n    {\r\n      href: '/app/quote/review',\r\n      icon: UsersIcon,\r\n      title: 'Quote Review',\r\n      handleClick: () => {\r\n\r\n      },\r\n      restrict_to: ['O','AM'],\r\n    },\r\n    {\r\n      href: '/app/products',\r\n      icon: ShoppingBagIcon,\r\n      title: 'Request Quotation',\r\n      handleClick: () => {\r\n\r\n      },\r\n      restrict_to: ['C'],\r\n    },\r\n    {\r\n      href: `/app/tracking/`,\r\n      icon: ClipboardIcon,\r\n      title: 'Order Tracking',\r\n      handleClick: () => {\r\n\r\n      },\r\n      restrict_to: [],\r\n    },\r\n    {\r\n      href: '/app/customers',\r\n      icon: UserIcon,\r\n      title: 'Manage Customers',\r\n      handleClick: () => {\r\n\r\n      },\r\n      restrict_to: ['O','AM'],\r\n    },\r\n    {\r\n      href: '/app/employees',\r\n      icon: UserIcon,\r\n      title: 'Manage Employees',\r\n      handleClick: () => {\r\n\r\n      },\r\n      restrict_to: ['O','AM'],\r\n    },\r\n    {\r\n      href: '/app/settings',\r\n      icon: SettingsIcon,\r\n      title: 'Account Settings',\r\n      handleClick: () => {\r\n\r\n      },\r\n      restrict_to: [],\r\n    },\r\n    // {\r\n    //   href: '/login',\r\n    //   icon: LockIcon,\r\n    //   title: 'Login',\r\n    //   handleClick: () => {\r\n\r\n    //   },\r\n    //   restrict_to: [],\r\n    // },\r\n    {\r\n      href:'/logout',\r\n      icon: LogOutIcon,\r\n      title:'Logout',\r\n      handleClick: () => {\r\n        dispatch(logout())\r\n      },\r\n      restrict_to: [],\r\n    },\r\n    // {\r\n    //   href: '/register',\r\n    //   icon: UserPlusIcon,\r\n    //   title: 'Register',\r\n    //   handleClick: () => {\r\n\r\n    //   },\r\n    //   restrict_to: [],\r\n    // },\r\n    // {\r\n    //   href: '/404',\r\n    //   icon: AlertCircleIcon,\r\n    //   title: 'Error',\r\n    //   handleClick: () => {\r\n\r\n    //   },\r\n    //   restrict_to: [],\r\n    // }\r\n  ];\r\n  \r\n\r\n  const classes = useStyles();\r\n  const location = useLocation();\r\n\r\n  useEffect(() => {\r\n    if (openMobile && onMobileClose) {\r\n      onMobileClose();\r\n    }\r\n    // eslint-disable-next-line react-hooks/exhaustive-deps\r\n  }, [location.pathname]);\r\n\r\n  const content = (items && user &&\r\n    <Box\r\n      height=\"100%\"\r\n      display=\"flex\"\r\n      flexDirection=\"column\"\r\n    >\r\n      <Box\r\n        alignItems=\"center\"\r\n        display=\"flex\"\r\n        flexDirection=\"row\"\r\n        justifyContent=\"space-around\"\r\n        p={2}\r\n      >\r\n        <Avatar\r\n          className={classes.avatar}\r\n          component={RouterLink}\r\n          src={user.avatar}\r\n          to=\"/app/account\"\r\n        />\r\n        <Box\r\n          ml={1}\r\n        >\r\n          <Typography\r\n            className={classes.name}\r\n            color=\"textPrimary\"\r\n            variant=\"h5\"\r\n          >\r\n            {user.name}\r\n          </Typography>\r\n          <Typography\r\n            color=\"textSecondary\"\r\n            variant=\"body2\"\r\n          >\r\n            {user.jobTitle}\r\n          </Typography>\r\n        </Box>\r\n      </Box>\r\n      <Divider />\r\n      <Box p={2}>\r\n        <List>\r\n          {currentUserProfile && items && items.map((item, index) => (\r\n            limitVisibility(\r\n              <NavItem\r\n                href={item.href}\r\n                key={item.title.toString()}\r\n                title={item.title}\r\n                icon={item.icon}\r\n                onClick={item.handleClick}\r\n              />,\r\n              item.restrict_to,\r\n              currentUserProfile.job_position,\r\n            )\r\n          ))}\r\n        </List>\r\n      </Box>\r\n    </Box>\r\n  );\r\n\r\n  return (\r\n    <>\r\n      <Hidden lgUp>\r\n        <Drawer\r\n          anchor=\"left\"\r\n          classes={{ paper: classes.mobileDrawer }}\r\n          onClose={onMobileClose}\r\n          open={openMobile}\r\n          variant=\"temporary\"\r\n        >\r\n          {content}\r\n        </Drawer>\r\n      </Hidden>\r\n      <Hidden mdDown>\r\n        <Drawer\r\n          anchor=\"left\"\r\n          classes={{ paper: classes.desktopDrawer }}\r\n          open\r\n          variant=\"persistent\"\r\n        >\r\n          {content}\r\n        </Drawer>\r\n      </Hidden>\r\n    </>\r\n  );\r\n};\r\n\r\nNavBar.propTypes = {\r\n  onMobileClose: PropTypes.func,\r\n  openMobile: PropTypes.bool\r\n};\r\n\r\nNavBar.defaultProps = {\r\n  onMobileClose: () => {},\r\n  openMobile: false\r\n};\r\n\r\nexport default NavBar;\r\n","import React from 'react';\r\n\r\nconst Logo = (props) => {\r\n  return (\r\n    <img\r\n      alt=\"Logo\"\r\n      src=\"/static/logo.svg\"\r\n      {...props}\r\n    />\r\n  );\r\n};\r\n\r\nexport default Logo;\r\n","import React, { useState } from 'react';\r\nimport { Link as RouterLink } from 'react-router-dom';\r\nimport clsx from 'clsx';\r\nimport PropTypes from 'prop-types';\r\nimport {\r\n  AppBar,\r\n  Badge,\r\n  Box,\r\n  Hidden,\r\n  IconButton,\r\n  Toolbar,\r\n  makeStyles\r\n} from '@material-ui/core';\r\nimport MenuIcon from '@material-ui/icons/Menu';\r\nimport NotificationsIcon from '@material-ui/icons/NotificationsOutlined';\r\nimport InputIcon from '@material-ui/icons/Input';\r\nimport Logo from 'src/components/Logo';\r\n\r\nconst useStyles = makeStyles(() => ({\r\n  root: {},\r\n  avatar: {\r\n    width: 60,\r\n    height: 60\r\n  }\r\n}));\r\n\r\nconst TopBar = ({\r\n  className,\r\n  onMobileNavOpen,\r\n  ...rest\r\n}) => {\r\n  const classes = useStyles();\r\n  const [notifications] = useState([]);\r\n\r\n  return (\r\n    <AppBar\r\n      className={clsx(classes.root, className)}\r\n      elevation={0}\r\n      {...rest}\r\n    >\r\n      <Toolbar>\r\n        <RouterLink to=\"/\">\r\n          <Logo />\r\n        </RouterLink>\r\n        <Box flexGrow={1} />\r\n        <Hidden mdDown>\r\n          <IconButton color=\"inherit\">\r\n            <Badge\r\n              badgeContent={notifications.length}\r\n              color=\"primary\"\r\n              variant=\"dot\"\r\n            >\r\n              <NotificationsIcon />\r\n            </Badge>\r\n          </IconButton>\r\n          <IconButton color=\"inherit\">\r\n            <InputIcon />\r\n          </IconButton>\r\n        </Hidden>\r\n        <Hidden lgUp>\r\n          <IconButton\r\n            color=\"inherit\"\r\n            onClick={onMobileNavOpen}\r\n          >\r\n            <MenuIcon />\r\n          </IconButton>\r\n        </Hidden>\r\n      </Toolbar>\r\n    </AppBar>\r\n  );\r\n};\r\n\r\nTopBar.propTypes = {\r\n  className: PropTypes.string,\r\n  onMobileNavOpen: PropTypes.func\r\n};\r\n\r\nexport default TopBar;\r\n","import React, { useState } from 'react';\r\nimport { Outlet } from 'react-router-dom';\r\nimport { makeStyles } from '@material-ui/core';\r\nimport NavBar from './NavBar';\r\nimport TopBar from './TopBar';\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n  root: {\r\n    backgroundColor: theme.palette.background.dark,\r\n    display: 'flex',\r\n    height: '100%',\r\n    overflow: 'hidden',\r\n    width: '100%'\r\n  },\r\n  wrapper: {\r\n    display: 'flex',\r\n    flex: '1 1 auto',\r\n    overflow: 'hidden',\r\n    paddingTop: 64,\r\n    [theme.breakpoints.up('lg')]: {\r\n      paddingLeft: 256\r\n    }\r\n  },\r\n  contentContainer: {\r\n    display: 'flex',\r\n    flex: '1 1 auto',\r\n    overflow: 'hidden'\r\n  },\r\n  content: {\r\n    flex: '1 1 auto',\r\n    height: '100%',\r\n    overflow: 'auto'\r\n  }\r\n}));\r\n\r\nconst DashboardLayout = () => {\r\n  const classes = useStyles();\r\n  const [isMobileNavOpen, setMobileNavOpen] = useState(false);\r\n\r\n  return (\r\n    <div className={classes.root}>\r\n      <TopBar onMobileNavOpen={() => setMobileNavOpen(true)} />\r\n      <NavBar\r\n        onMobileClose={() => setMobileNavOpen(false)}\r\n        openMobile={isMobileNavOpen}\r\n      />\r\n      <div className={classes.wrapper}>\r\n        <div className={classes.contentContainer}>\r\n          <div className={classes.content}>\r\n            <Outlet />\r\n          </div>\r\n        </div>\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default DashboardLayout;\r\n","import React from 'react';\r\nimport { Link as RouterLink } from 'react-router-dom';\r\nimport clsx from 'clsx';\r\nimport PropTypes from 'prop-types';\r\nimport {\r\n  AppBar,\r\n  Toolbar,\r\n  makeStyles\r\n} from '@material-ui/core';\r\nimport Logo from 'src/components/Logo';\r\n\r\nconst useStyles = makeStyles(({\r\n  root: {},\r\n  toolbar: {\r\n    height: 64\r\n  }\r\n}));\r\n\r\nconst TopBar = ({ className, ...rest }) => {\r\n  const classes = useStyles();\r\n\r\n  return (\r\n    <AppBar\r\n      className={clsx(classes.root, className)}\r\n      elevation={0}\r\n      {...rest}\r\n    >\r\n      <Toolbar className={classes.toolbar}>\r\n        <RouterLink to=\"/\">\r\n          <Logo />\r\n        </RouterLink>\r\n      </Toolbar>\r\n    </AppBar>\r\n  );\r\n};\r\n\r\nTopBar.propTypes = {\r\n  className: PropTypes.string\r\n};\r\n\r\nexport default TopBar;\r\n","import React from 'react';\r\nimport { Outlet } from 'react-router-dom';\r\nimport { makeStyles } from '@material-ui/core';\r\nimport TopBar from './TopBar';\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n  root: {\r\n    backgroundColor: theme.palette.background.default,\r\n    display: 'flex',\r\n    height: '100%',\r\n    overflow: 'hidden',\r\n    width: '100%'\r\n  },\r\n  wrapper: {\r\n    display: 'flex',\r\n    flex: '1 1 auto',\r\n    overflow: 'hidden',\r\n    paddingTop: 64\r\n  },\r\n  contentContainer: {\r\n    display: 'flex',\r\n    flex: '1 1 auto',\r\n    overflow: 'hidden'\r\n  },\r\n  content: {\r\n    flex: '1 1 auto',\r\n    height: '100%',\r\n    overflow: 'auto'\r\n  }\r\n}));\r\n\r\nconst MainLayout = () => {\r\n  const classes = useStyles();\r\n\r\n  return (\r\n    <div className={classes.root}>\r\n      <TopBar />\r\n      <div className={classes.wrapper}>\r\n        <div className={classes.contentContainer}>\r\n          <div className={classes.content}>\r\n            <Outlet />\r\n          </div>\r\n        </div>\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default MainLayout;\r\n","import React, { forwardRef } from 'react';\r\nimport { Helmet } from 'react-helmet';\r\nimport PropTypes from 'prop-types';\r\n\r\nconst Page = forwardRef(({\r\n  children,\r\n  title = '',\r\n  ...rest\r\n}, ref) => {\r\n  return (\r\n    <div\r\n      ref={ref}\r\n      {...rest}\r\n    >\r\n      <Helmet>\r\n        <title>{title}</title>\r\n      </Helmet>\r\n      {children}\r\n    </div>\r\n  );\r\n});\r\n\r\nPage.propTypes = {\r\n  children: PropTypes.node.isRequired,\r\n  title: PropTypes.string\r\n};\r\n\r\nexport default Page;\r\n","import React from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport clsx from 'clsx';\r\nimport moment from 'moment';\r\nimport {\r\n  Avatar,\r\n  Box,\r\n  Button,\r\n  Card,\r\n  CardActions,\r\n  CardContent,\r\n  Divider,\r\n  Typography,\r\n  makeStyles\r\n} from '@material-ui/core';\r\n\r\nconst user = {\r\n  avatar: '/static/images/avatars/avatar_6.png',\r\n  city: 'Los Angeles',\r\n  country: 'USA',\r\n  jobTitle: 'Senior Developer',\r\n  name: 'Katarina Smith',\r\n  timezone: 'GTM-7'\r\n};\r\n\r\nconst useStyles = makeStyles(() => ({\r\n  root: {},\r\n  avatar: {\r\n    height: 100,\r\n    width: 100\r\n  }\r\n}));\r\n\r\nconst Profile = ({ className, ...rest }) => {\r\n  const classes = useStyles();\r\n\r\n  return (\r\n    <Card\r\n      className={clsx(classes.root, className)}\r\n      {...rest}\r\n    >\r\n      <CardContent>\r\n        <Box\r\n          alignItems=\"center\"\r\n          display=\"flex\"\r\n          flexDirection=\"column\"\r\n        >\r\n          <Avatar\r\n            className={classes.avatar}\r\n            src={user.avatar}\r\n          />\r\n          <Typography\r\n            color=\"textPrimary\"\r\n            gutterBottom\r\n            variant=\"h3\"\r\n          >\r\n            {user.name}\r\n          </Typography>\r\n          <Typography\r\n            color=\"textSecondary\"\r\n            variant=\"body1\"\r\n          >\r\n            {`${user.city} ${user.country}`}\r\n          </Typography>\r\n          <Typography\r\n            className={classes.dateText}\r\n            color=\"textSecondary\"\r\n            variant=\"body1\"\r\n          >\r\n            {`${moment().format('hh:mm A')} ${user.timezone}`}\r\n          </Typography>\r\n        </Box>\r\n      </CardContent>\r\n      <Divider />\r\n      <CardActions>\r\n        <Button\r\n          color=\"primary\"\r\n          fullWidth\r\n          variant=\"text\"\r\n        >\r\n          Upload picture\r\n        </Button>\r\n      </CardActions>\r\n    </Card>\r\n  );\r\n};\r\n\r\nProfile.propTypes = {\r\n  className: PropTypes.string\r\n};\r\n\r\nexport default Profile;\r\n","import React, { useState } from 'react';\r\nimport clsx from 'clsx';\r\nimport PropTypes from 'prop-types';\r\nimport {\r\n  Box,\r\n  Button,\r\n  Card,\r\n  CardContent,\r\n  CardHeader,\r\n  Divider,\r\n  Grid,\r\n  TextField,\r\n  makeStyles\r\n} from '@material-ui/core';\r\n\r\nconst states = [\r\n  {\r\n    value: 'alabama',\r\n    label: 'Alabama'\r\n  },\r\n  {\r\n    value: 'new-york',\r\n    label: 'New York'\r\n  },\r\n  {\r\n    value: 'san-francisco',\r\n    label: 'San Francisco'\r\n  }\r\n];\r\n\r\nconst useStyles = makeStyles(() => ({\r\n  root: {}\r\n}));\r\n\r\nconst ProfileDetails = ({ className, ...rest }) => {\r\n  const classes = useStyles();\r\n  const [values, setValues] = useState({\r\n    firstName: 'Katarina',\r\n    lastName: 'Smith',\r\n    email: 'demo@devias.io',\r\n    phone: '',\r\n    state: 'Alabama',\r\n    country: 'USA'\r\n  });\r\n\r\n  const handleChange = (event) => {\r\n    setValues({\r\n      ...values,\r\n      [event.target.name]: event.target.value\r\n    });\r\n  };\r\n\r\n  return (\r\n    <form\r\n      autoComplete=\"off\"\r\n      noValidate\r\n      className={clsx(classes.root, className)}\r\n      {...rest}\r\n    >\r\n      <Card>\r\n        <CardHeader\r\n          subheader=\"The information can be edited\"\r\n          title=\"Profile\"\r\n        />\r\n        <Divider />\r\n        <CardContent>\r\n          <Grid\r\n            container\r\n            spacing={3}\r\n          >\r\n            <Grid\r\n              item\r\n              md={6}\r\n              xs={12}\r\n            >\r\n              <TextField\r\n                fullWidth\r\n                helperText=\"Please specify the first name\"\r\n                label=\"First name\"\r\n                name=\"firstName\"\r\n                onChange={handleChange}\r\n                required\r\n                value={values.firstName}\r\n                variant=\"outlined\"\r\n              />\r\n            </Grid>\r\n            <Grid\r\n              item\r\n              md={6}\r\n              xs={12}\r\n            >\r\n              <TextField\r\n                fullWidth\r\n                label=\"Last name\"\r\n                name=\"lastName\"\r\n                onChange={handleChange}\r\n                required\r\n                value={values.lastName}\r\n                variant=\"outlined\"\r\n              />\r\n            </Grid>\r\n            <Grid\r\n              item\r\n              md={6}\r\n              xs={12}\r\n            >\r\n              <TextField\r\n                fullWidth\r\n                label=\"Email Address\"\r\n                name=\"email\"\r\n                onChange={handleChange}\r\n                required\r\n                value={values.email}\r\n                variant=\"outlined\"\r\n              />\r\n            </Grid>\r\n            <Grid\r\n              item\r\n              md={6}\r\n              xs={12}\r\n            >\r\n              <TextField\r\n                fullWidth\r\n                label=\"Phone Number\"\r\n                name=\"phone\"\r\n                onChange={handleChange}\r\n                type=\"number\"\r\n                value={values.phone}\r\n                variant=\"outlined\"\r\n              />\r\n            </Grid>\r\n            <Grid\r\n              item\r\n              md={6}\r\n              xs={12}\r\n            >\r\n              <TextField\r\n                fullWidth\r\n                label=\"Country\"\r\n                name=\"country\"\r\n                onChange={handleChange}\r\n                required\r\n                value={values.country}\r\n                variant=\"outlined\"\r\n              />\r\n            </Grid>\r\n            <Grid\r\n              item\r\n              md={6}\r\n              xs={12}\r\n            >\r\n              <TextField\r\n                fullWidth\r\n                label=\"Select State\"\r\n                name=\"state\"\r\n                onChange={handleChange}\r\n                required\r\n                select\r\n                SelectProps={{ native: true }}\r\n                value={values.state}\r\n                variant=\"outlined\"\r\n              >\r\n                {states.map((option) => (\r\n                  <option\r\n                    key={option.value}\r\n                    value={option.value}\r\n                  >\r\n                    {option.label}\r\n                  </option>\r\n                ))}\r\n              </TextField>\r\n            </Grid>\r\n          </Grid>\r\n        </CardContent>\r\n        <Divider />\r\n        <Box\r\n          display=\"flex\"\r\n          justifyContent=\"flex-end\"\r\n          p={2}\r\n        >\r\n          <Button\r\n            color=\"primary\"\r\n            variant=\"contained\"\r\n          >\r\n            Save details\r\n          </Button>\r\n        </Box>\r\n      </Card>\r\n    </form>\r\n  );\r\n};\r\n\r\nProfileDetails.propTypes = {\r\n  className: PropTypes.string\r\n};\r\n\r\nexport default ProfileDetails;\r\n","import React from 'react';\r\nimport {\r\n  Container,\r\n  Grid,\r\n  makeStyles\r\n} from '@material-ui/core';\r\nimport Page from 'src/components/Page';\r\nimport Profile from './Profile';\r\nimport ProfileDetails from './ProfileDetails';\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n  root: {\r\n    backgroundColor: theme.palette.background.dark,\r\n    minHeight: '100%',\r\n    paddingBottom: theme.spacing(3),\r\n    paddingTop: theme.spacing(3)\r\n  }\r\n}));\r\n\r\nconst Account = () => {\r\n  const classes = useStyles();\r\n\r\n  return (\r\n    <Page\r\n      className={classes.root}\r\n      title=\"Account\"\r\n    >\r\n      <Container maxWidth=\"lg\">\r\n        <Grid\r\n          container\r\n          spacing={3}\r\n        >\r\n          <Grid\r\n            item\r\n            lg={4}\r\n            md={6}\r\n            xs={12}\r\n          >\r\n            <Profile />\r\n          </Grid>\r\n          <Grid\r\n            item\r\n            lg={8}\r\n            md={6}\r\n            xs={12}\r\n          >\r\n            <ProfileDetails />\r\n          </Grid>\r\n        </Grid>\r\n      </Container>\r\n    </Page>\r\n  );\r\n};\r\n\r\nexport default Account;\r\n","import React, { useState } from 'react';\r\nimport clsx from 'clsx';\r\nimport PropTypes from 'prop-types';\r\nimport moment from 'moment';\r\nimport PerfectScrollbar from 'react-perfect-scrollbar';\r\nimport {\r\n  Avatar,\r\n  Box,\r\n  Card,\r\n  Checkbox,\r\n  Table,\r\n  TableBody,\r\n  TableCell,\r\n  TableHead,\r\n  TablePagination,\r\n  TableRow,\r\n  Typography,\r\n  makeStyles\r\n} from '@material-ui/core';\r\nimport getInitials from 'src/utils/getInitials';\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n  root: {},\r\n  avatar: {\r\n    marginRight: theme.spacing(2)\r\n  }\r\n}));\r\n\r\nconst Results = ({ className, customers, ...rest }) => {\r\n  const classes = useStyles();\r\n  const [selectedCustomerIds, setSelectedCustomerIds] = useState([]);\r\n  const [limit, setLimit] = useState(10);\r\n  const [page, setPage] = useState(0);\r\n\r\n  const handleSelectAll = (event) => {\r\n    let newSelectedCustomerIds;\r\n\r\n    if (event.target.checked) {\r\n      newSelectedCustomerIds = customers.map((customer) => customer.id);\r\n    } else {\r\n      newSelectedCustomerIds = [];\r\n    }\r\n\r\n    setSelectedCustomerIds(newSelectedCustomerIds);\r\n  };\r\n\r\n  const handleSelectOne = (event, id) => {\r\n    const selectedIndex = selectedCustomerIds.indexOf(id);\r\n    let newSelectedCustomerIds = [];\r\n\r\n    if (selectedIndex === -1) {\r\n      newSelectedCustomerIds = newSelectedCustomerIds.concat(selectedCustomerIds, id);\r\n    } else if (selectedIndex === 0) {\r\n      newSelectedCustomerIds = newSelectedCustomerIds.concat(selectedCustomerIds.slice(1));\r\n    } else if (selectedIndex === selectedCustomerIds.length - 1) {\r\n      newSelectedCustomerIds = newSelectedCustomerIds.concat(selectedCustomerIds.slice(0, -1));\r\n    } else if (selectedIndex > 0) {\r\n      newSelectedCustomerIds = newSelectedCustomerIds.concat(\r\n        selectedCustomerIds.slice(0, selectedIndex),\r\n        selectedCustomerIds.slice(selectedIndex + 1)\r\n      );\r\n    }\r\n\r\n    setSelectedCustomerIds(newSelectedCustomerIds);\r\n  };\r\n\r\n  const handleLimitChange = (event) => {\r\n    setLimit(event.target.value);\r\n  };\r\n\r\n  const handlePageChange = (event, newPage) => {\r\n    setPage(newPage);\r\n  };\r\n\r\n  return (\r\n    <Card\r\n      className={clsx(classes.root, className)}\r\n      {...rest}\r\n    >\r\n      <PerfectScrollbar>\r\n        <Box minWidth={1050}>\r\n          <Table>\r\n            <TableHead>\r\n              <TableRow>\r\n                <TableCell padding=\"checkbox\">\r\n                  <Checkbox\r\n                    checked={selectedCustomerIds.length === customers.length}\r\n                    color=\"primary\"\r\n                    indeterminate={\r\n                      selectedCustomerIds.length > 0\r\n                      && selectedCustomerIds.length < customers.length\r\n                    }\r\n                    onChange={handleSelectAll}\r\n                  />\r\n                </TableCell>\r\n                <TableCell>\r\n                  Name\r\n                </TableCell>\r\n                <TableCell>\r\n                  Email\r\n                </TableCell>\r\n                <TableCell>\r\n                  Location\r\n                </TableCell>\r\n                <TableCell>\r\n                  Phone\r\n                </TableCell>\r\n                <TableCell>\r\n                  Registration date\r\n                </TableCell>\r\n              </TableRow>\r\n            </TableHead>\r\n            <TableBody>\r\n              {customers.slice(0, limit).map((customer) => (\r\n                <TableRow\r\n                  hover\r\n                  key={customer.id}\r\n                  selected={selectedCustomerIds.indexOf(customer.id) !== -1}\r\n                >\r\n                  <TableCell padding=\"checkbox\">\r\n                    <Checkbox\r\n                      checked={selectedCustomerIds.indexOf(customer.id) !== -1}\r\n                      onChange={(event) => handleSelectOne(event, customer.id)}\r\n                      value=\"true\"\r\n                    />\r\n                  </TableCell>\r\n                  <TableCell>\r\n                    <Box\r\n                      alignItems=\"center\"\r\n                      display=\"flex\"\r\n                    >\r\n                      <Avatar\r\n                        className={classes.avatar}\r\n                        src={customer.avatarUrl}\r\n                      >\r\n                        {getInitials(customer.name)}\r\n                      </Avatar>\r\n                      <Typography\r\n                        color=\"textPrimary\"\r\n                        variant=\"body1\"\r\n                      >\r\n                        {customer.name}\r\n                      </Typography>\r\n                    </Box>\r\n                  </TableCell>\r\n                  <TableCell>\r\n                    {customer.email}\r\n                  </TableCell>\r\n                  <TableCell>\r\n                    {`${customer.address.city}, ${customer.address.state}, ${customer.address.country}`}\r\n                  </TableCell>\r\n                  <TableCell>\r\n                    {customer.phone}\r\n                  </TableCell>\r\n                  <TableCell>\r\n                    {moment(customer.createdAt).format('DD/MM/YYYY')}\r\n                  </TableCell>\r\n                </TableRow>\r\n              ))}\r\n            </TableBody>\r\n          </Table>\r\n        </Box>\r\n      </PerfectScrollbar>\r\n      <TablePagination\r\n        component=\"div\"\r\n        count={customers.length}\r\n        onChangePage={handlePageChange}\r\n        onChangeRowsPerPage={handleLimitChange}\r\n        page={page}\r\n        rowsPerPage={limit}\r\n        rowsPerPageOptions={[5, 10, 25]}\r\n      />\r\n    </Card>\r\n  );\r\n};\r\n\r\nResults.propTypes = {\r\n  className: PropTypes.string,\r\n  customers: PropTypes.array.isRequired\r\n};\r\n\r\nexport default Results;\r\n","export default (name = '') => name\r\n  .replace(/\\s+/, ' ')\r\n  .split(' ')\r\n  .slice(0, 2)\r\n  .map((v) => v && v[0].toUpperCase())\r\n  .join('');\r\n","import React from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport clsx from 'clsx';\r\nimport {\r\n  Box,\r\n  Button,\r\n  Card,\r\n  CardContent,\r\n  TextField,\r\n  InputAdornment,\r\n  SvgIcon,\r\n  makeStyles\r\n} from '@material-ui/core';\r\nimport { Search as SearchIcon } from 'react-feather';\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n  root: {},\r\n  importButton: {\r\n    marginRight: theme.spacing(1)\r\n  },\r\n  exportButton: {\r\n    marginRight: theme.spacing(1)\r\n  }\r\n}));\r\n\r\nconst Toolbar = ({ className, ...rest }) => {\r\n  const classes = useStyles();\r\n\r\n  return (\r\n    <div\r\n      className={clsx(classes.root, className)}\r\n      {...rest}\r\n    >\r\n      <Box\r\n        display=\"flex\"\r\n        justifyContent=\"flex-end\"\r\n      >\r\n        <Button className={classes.importButton}>\r\n          Import\r\n        </Button>\r\n        <Button className={classes.exportButton}>\r\n          Export\r\n        </Button>\r\n        <Button\r\n          color=\"primary\"\r\n          variant=\"contained\"\r\n        >\r\n          Add customer\r\n        </Button>\r\n      </Box>\r\n      <Box mt={3}>\r\n        <Card>\r\n          <CardContent>\r\n            <Box maxWidth={500}>\r\n              <TextField\r\n                fullWidth\r\n                InputProps={{\r\n                  startAdornment: (\r\n                    <InputAdornment position=\"start\">\r\n                      <SvgIcon\r\n                        fontSize=\"small\"\r\n                        color=\"action\"\r\n                      >\r\n                        <SearchIcon />\r\n                      </SvgIcon>\r\n                    </InputAdornment>\r\n                  )\r\n                }}\r\n                placeholder=\"Search customer\"\r\n                variant=\"outlined\"\r\n              />\r\n            </Box>\r\n          </CardContent>\r\n        </Card>\r\n      </Box>\r\n    </div>\r\n  );\r\n};\r\n\r\nToolbar.propTypes = {\r\n  className: PropTypes.string\r\n};\r\n\r\nexport default Toolbar;\r\n","import { v4 as uuid } from 'uuid';\r\n\r\nexport default [\r\n  {\r\n    id: uuid(),\r\n    address: {\r\n      country: 'USA',\r\n      state: 'West Virginia',\r\n      city: 'Parkersburg',\r\n      street: '2849 Fulton Street'\r\n    },\r\n    avatarUrl: '/static/images/avatars/avatar_3.png',\r\n    createdAt: 1555016400000,\r\n    email: 'ekaterina.tankova@devias.io',\r\n    name: 'Ekaterina Tankova',\r\n    phone: '304-428-3097'\r\n  },\r\n  {\r\n    id: uuid(),\r\n    address: {\r\n      country: 'USA',\r\n      state: 'Bristow',\r\n      city: 'Iowa',\r\n      street: '1865  Pleasant Hill Road'\r\n    },\r\n    avatarUrl: '/static/images/avatars/avatar_4.png',\r\n    createdAt: 1555016400000,\r\n    email: 'cao.yu@devias.io',\r\n    name: 'Cao Yu',\r\n    phone: '712-351-5711'\r\n  },\r\n  {\r\n    id: uuid(),\r\n    address: {\r\n      country: 'USA',\r\n      state: 'Georgia',\r\n      city: 'Atlanta',\r\n      street: '4894  Lakeland Park Drive'\r\n    },\r\n    avatarUrl: '/static/images/avatars/avatar_2.png',\r\n    createdAt: 1555016400000,\r\n    email: 'alexa.richardson@devias.io',\r\n    name: 'Alexa Richardson',\r\n    phone: '770-635-2682'\r\n  },\r\n  {\r\n    id: uuid(),\r\n    address: {\r\n      country: 'USA',\r\n      state: 'Ohio',\r\n      city: 'Dover',\r\n      street: '4158  Hedge Street'\r\n    },\r\n    avatarUrl: '/static/images/avatars/avatar_5.png',\r\n    createdAt: 1554930000000,\r\n    email: 'anje.keizer@devias.io',\r\n    name: 'Anje Keizer',\r\n    phone: '908-691-3242'\r\n  },\r\n  {\r\n    id: uuid(),\r\n    address: {\r\n      country: 'USA',\r\n      state: 'Texas',\r\n      city: 'Dallas',\r\n      street: '75247'\r\n    },\r\n    avatarUrl: '/static/images/avatars/avatar_6.png',\r\n    createdAt: 1554757200000,\r\n    email: 'clarke.gillebert@devias.io',\r\n    name: 'Clarke Gillebert',\r\n    phone: '972-333-4106'\r\n  },\r\n  {\r\n    id: uuid(),\r\n    address: {\r\n      country: 'USA',\r\n      state: 'California',\r\n      city: 'Bakerfield',\r\n      street: '317 Angus Road'\r\n    },\r\n    avatarUrl: '/static/images/avatars/avatar_1.png',\r\n    createdAt: 1554670800000,\r\n    email: 'adam.denisov@devias.io',\r\n    name: 'Adam Denisov',\r\n    phone: '858-602-3409'\r\n  },\r\n  {\r\n    id: uuid(),\r\n    address: {\r\n      country: 'USA',\r\n      state: 'California',\r\n      city: 'Redondo Beach',\r\n      street: '2188  Armbrester Drive'\r\n    },\r\n    avatarUrl: '/static/images/avatars/avatar_7.png',\r\n    createdAt: 1554325200000,\r\n    email: 'ava.gregoraci@devias.io',\r\n    name: 'Ava Gregoraci',\r\n    phone: '415-907-2647'\r\n  },\r\n  {\r\n    id: uuid(),\r\n    address: {\r\n      country: 'USA',\r\n      state: 'Nevada',\r\n      city: 'Las Vegas',\r\n      street: '1798  Hickory Ridge Drive'\r\n    },\r\n    avatarUrl: '/static/images/avatars/avatar_8.png',\r\n    createdAt: 1523048400000,\r\n    email: 'emilee.simchenko@devias.io',\r\n    name: 'Emilee Simchenko',\r\n    phone: '702-661-1654'\r\n  },\r\n  {\r\n    id: uuid(),\r\n    address: {\r\n      country: 'USA',\r\n      state: 'Michigan',\r\n      city: 'Detroit',\r\n      street: '3934  Wildrose Lane'\r\n    },\r\n    avatarUrl: '/static/images/avatars/avatar_9.png',\r\n    createdAt: 1554702800000,\r\n    email: 'kwak.seong.min@devias.io',\r\n    name: 'Kwak Seong-Min',\r\n    phone: '313-812-8947'\r\n  },\r\n  {\r\n    id: uuid(),\r\n    address: {\r\n      country: 'USA',\r\n      state: 'Utah',\r\n      city: 'Salt Lake City',\r\n      street: '368 Lamberts Branch Road'\r\n    },\r\n    avatarUrl: '/static/images/avatars/avatar_10.png',\r\n    createdAt: 1522702800000,\r\n    email: 'merrile.burgett@devias.io',\r\n    name: 'Merrile Burgett',\r\n    phone: '801-301-7894'\r\n  }\r\n];\r\n","import React, { useState } from 'react';\r\nimport {\r\n  Box,\r\n  Container,\r\n  makeStyles\r\n} from '@material-ui/core';\r\nimport Page from 'src/components/Page';\r\nimport Results from './Results';\r\nimport Toolbar from './Toolbar';\r\nimport data from './data';\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n  root: {\r\n    backgroundColor: theme.palette.background.dark,\r\n    minHeight: '100%',\r\n    paddingBottom: theme.spacing(3),\r\n    paddingTop: theme.spacing(3)\r\n  }\r\n}));\r\n\r\nconst CustomerListView = () => {\r\n  const classes = useStyles();\r\n  const [customers] = useState(data);\r\n\r\n  return (\r\n    <Page\r\n      className={classes.root}\r\n      title=\"Customers\"\r\n    >\r\n      <Container maxWidth={false}>\r\n        <Toolbar />\r\n        <Box mt={3}>\r\n          <Results customers={customers} />\r\n        </Box>\r\n      </Container>\r\n    </Page>\r\n  );\r\n};\r\n\r\nexport default CustomerListView;\r\n","import React from 'react';\r\nimport clsx from 'clsx';\r\nimport PropTypes from 'prop-types';\r\nimport {\r\n  Avatar,\r\n  Box,\r\n  Card,\r\n  CardContent,\r\n  Grid,\r\n  Typography,\r\n  colors,\r\n  makeStyles\r\n} from '@material-ui/core';\r\nimport ArrowDownwardIcon from '@material-ui/icons/ArrowDownward';\r\nimport CheckIcon from '@material-ui/icons/Check';\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n  root: {\r\n    height: '100%'\r\n  },\r\n  avatar: {\r\n    backgroundColor: colors.grey[600],\r\n    height: 56,\r\n    width: 56\r\n  },\r\n  media: {\r\n    paddingTop: \"7%\"\r\n  }\r\n}));\r\n\r\nconst QuotationReview = ({ className, ...rest }) => {\r\n  const classes = useStyles();\r\n\r\n  return (\r\n    <Card\r\n      className={clsx(classes.root, className)}\r\n      {...rest}\r\n    >\r\n      <CardContent>\r\n\r\n        <Grid\r\n          container\r\n          justify=\"space-between\"\r\n          spacing={3}\r\n          className={classes.media}\r\n        >\r\n        <Grid container justify=\"center\">\r\n            <Avatar className={classes.avatar}>\r\n              <CheckIcon />\r\n            </Avatar>\r\n        </Grid>\r\n          <Grid item>\r\n            <Typography\r\n              color=\"textSecondary\"\r\n              gutterBottom\r\n              align=\"center\"\r\n              variant=\"h4\"\r\n            >\r\n              REVIEW QUOTATIONS\r\n            </Typography>\r\n            <Typography\r\n              color=\"textSecondary\"\r\n              variant=\"body1\"\r\n              align=\"center\"\r\n            >\r\n              Compute customers' requests for quotations, file job orders for production\r\n            </Typography>\r\n          </Grid>\r\n        </Grid>\r\n        <Box\r\n          mt={2}\r\n          display=\"flex\"\r\n          alignItems=\"center\"\r\n        >\r\n        </Box>\r\n      </CardContent>\r\n    </Card>\r\n  );\r\n};\r\n\r\nQuotationReview.propTypes = {\r\n  className: PropTypes.string\r\n};\r\n\r\nexport default QuotationReview;","import React from 'react';\r\nimport clsx from 'clsx';\r\nimport PropTypes from 'prop-types';\r\nimport {\r\n  Avatar,\r\n  Box,\r\n  Card,\r\n  CardContent,\r\n  Grid,\r\n  LinearProgress,\r\n  Typography,\r\n  makeStyles,\r\n  colors\r\n} from '@material-ui/core';\r\nimport PersonIcon from '@material-ui/icons/Person';\r\n\r\nconst useStyles = makeStyles(() => ({\r\n  root: {\r\n    height: '100%'\r\n  },\r\n  avatar: {\r\n    backgroundColor: colors.grey[600],\r\n    height: 56,\r\n    width: 56\r\n  },\r\n  media: {\r\n    paddingTop: \"7%\"\r\n  }\r\n}));\r\n\r\nconst ManageEmployees = ({ className, ...rest }) => {\r\n  const classes = useStyles();\r\n\r\n  return (\r\n    <Card\r\n      className={clsx(classes.root, className)}\r\n      {...rest}\r\n    >\r\n      <CardContent>\r\n\r\n        <Grid\r\n          container\r\n          justify=\"center\"\r\n          spacing={3}\r\n          className={classes.media}\r\n        >\r\n        <Grid container justify=\"center\">\r\n            <Avatar className={classes.avatar}>\r\n              <PersonIcon />\r\n            </Avatar>\r\n        </Grid>\r\n          <Grid item>\r\n            <Typography\r\n              color=\"textSecondary\"\r\n              gutterBottom\r\n              align=\"center\"\r\n              variant=\"h4\"\r\n            >\r\n              MANAGE EMPLOYEES\r\n            </Typography>\r\n            <Typography\r\n              color=\"textSecondary\"\r\n              variant=\"body1\"\r\n              align=\"center\"\r\n            >\r\n              Check and manage the employees account\r\n            </Typography>\r\n          </Grid>\r\n        </Grid>\r\n        <Box\r\n          mt={2}\r\n          display=\"flex\"\r\n          alignItems=\"center\"\r\n        >\r\n        </Box>\r\n      </CardContent>\r\n    </Card>\r\n  );\r\n};\r\n\r\nManageEmployees.propTypes = {\r\n  className: PropTypes.string\r\n};\r\n\r\nexport default ManageEmployees;","import React from 'react';\r\nimport clsx from 'clsx';\r\nimport PropTypes from 'prop-types';\r\nimport {\r\n  Avatar,\r\n  Box,\r\n  Card,\r\n  CardContent,\r\n  Grid,\r\n  Typography,\r\n  colors,\r\n  makeStyles\r\n} from '@material-ui/core';\r\nimport ArrowUpwardIcon from '@material-ui/icons/ArrowUpward';\r\nimport SyncAltIcon from '@material-ui/icons/SyncAlt';\r\n\r\nconst useStyles = makeStyles(() => ({\r\n  root: {\r\n    height: '100%'\r\n  },\r\n  avatar: {\r\n    backgroundColor: colors.grey[600],\r\n    height: 56,\r\n    width: 56\r\n  },\r\n  media: {\r\n    paddingTop: \"7%\"\r\n  }\r\n}));\r\n\r\nconst OrderTracking = ({ className, ...rest }) => {\r\n  const classes = useStyles();\r\n\r\n  return (\r\n    <Card\r\n      className={clsx(classes.root, className)}\r\n      {...rest}\r\n    >\r\n      <CardContent>\r\n\r\n        <Grid\r\n          container\r\n          justify=\"space-between\"\r\n          spacing={3}\r\n          className={classes.media}\r\n        >\r\n        <Grid container justify=\"center\">\r\n            <Avatar className={classes.avatar}>\r\n              <SyncAltIcon />\r\n            </Avatar>\r\n        </Grid>\r\n          <Grid item>\r\n            <Typography\r\n              color=\"textSecondary\"\r\n              gutterBottom\r\n              align=\"center\"\r\n              variant=\"h4\"\r\n            >\r\n              TRACK ORDERS\r\n            </Typography>\r\n            <Typography\r\n              color=\"textSecondary\"\r\n              variant=\"body1\"\r\n              align=\"center\"\r\n            >\r\n              Keep note of all orders that are moving in production to delivery\r\n            </Typography>\r\n          </Grid>\r\n        </Grid>\r\n      </CardContent>\r\n    </Card>\r\n  );\r\n};\r\n\r\nOrderTracking.propTypes = {\r\n  className: PropTypes.string\r\n};\r\n\r\nexport default OrderTracking;","import React from 'react';\r\nimport clsx from 'clsx';\r\nimport PropTypes from 'prop-types';\r\nimport {\r\n  Avatar,\r\n  Card,\r\n  CardContent,\r\n  Grid,\r\n  Typography,\r\n  makeStyles,\r\n  colors,\r\n  Box\r\n} from '@material-ui/core';\r\nimport SettingsIcon from '@material-ui/icons/Settings';\r\n\r\nconst useStyles = makeStyles(() => ({\r\n  root: {\r\n    height: '100%'\r\n  },\r\n  avatar: {\r\n    backgroundColor: colors.grey[600],\r\n    height: 56,\r\n    width: 56\r\n  },\r\n  media: {\r\n    paddingTop: \"7%\"\r\n  }\r\n}));\r\n\r\nconst AccountSettings = ({ className, ...rest }) => {\r\n  const classes = useStyles();\r\n\r\n  return (\r\n    <Card\r\n      className={clsx(classes.root, className)}\r\n      {...rest}\r\n    >\r\n      <CardContent>\r\n\r\n        <Grid\r\n          container\r\n          justify=\"center\"\r\n          spacing={3}\r\n          className={classes.media}\r\n        >\r\n        <Grid container justify=\"center\">\r\n            <Avatar className={classes.avatar}>\r\n              <SettingsIcon />\r\n            </Avatar>\r\n        </Grid>\r\n          <Grid item>\r\n            <Typography\r\n              color=\"textSecondary\"\r\n              gutterBottom\r\n              align=\"center\"\r\n              variant=\"h4\"\r\n            >\r\n              ADJUST SETTINGS\r\n            </Typography>\r\n            <Typography\r\n              color=\"textSecondary\"\r\n              variant=\"body1\"\r\n              align=\"center\"\r\n            >\r\n              Change your password and other details on hand\r\n            </Typography>\r\n          </Grid>\r\n        </Grid>\r\n        <Box\r\n          mt={2}\r\n          display=\"flex\"\r\n          alignItems=\"center\"\r\n        >\r\n        </Box>\r\n      </CardContent>\r\n    </Card>\r\n  );\r\n};\r\n\r\nAccountSettings.propTypes = {\r\n  className: PropTypes.string\r\n};\r\n\r\nexport default AccountSettings;","import React from 'react';\r\nimport clsx from 'clsx';\r\nimport PropTypes from 'prop-types';\r\nimport {\r\n  Avatar,\r\n  Box,\r\n  Card,\r\n  CardContent,\r\n  Grid,\r\n  Typography,\r\n  colors,\r\n  makeStyles\r\n} from '@material-ui/core';\r\nimport ArrowUpwardIcon from '@material-ui/icons/ArrowUpward';\r\nimport ReorderRoundedIcon from '@material-ui/icons/ReorderRounded';\r\n\r\nconst useStyles = makeStyles(() => ({\r\n  root: {\r\n    height: '100%'\r\n  },\r\n  avatar: {\r\n    backgroundColor: colors.grey[600],\r\n    height: 56,\r\n    width: 56\r\n  },\r\n  media: {\r\n    paddingTop: \"7%\"\r\n  }\r\n}));\r\n\r\nconst RequestForQuotation = ({ className, ...rest }) => {\r\n  const classes = useStyles();\r\n\r\n  return (\r\n    <Card\r\n      className={clsx(classes.root, className)}\r\n      {...rest}\r\n    >\r\n      <CardContent>\r\n        <Box\r\n          mt={1}\r\n          display=\"flex\"\r\n          alignItems=\"center\"\r\n        >\r\n          <Grid\r\n              container\r\n              justify=\"space-between\"\r\n              spacing={3}\r\n              className={classes.media}\r\n          >\r\n              <Grid container justify=\"center\">\r\n                  <Avatar className={classes.avatar}>\r\n                      <ReorderRoundedIcon />\r\n                  </Avatar>\r\n              </Grid>\r\n              <Grid item xs>\r\n                  <Typography\r\n                      color=\"textSecondary\"\r\n                      gutterBottom\r\n                      align=\"center\"\r\n                      variant=\"h4\"\r\n                  >\r\n                  REQUEST FOR QUOTATION\r\n                  </Typography>\r\n                  <Typography\r\n                      color=\"textSecondary\"\r\n                      variant=\"body1\"\r\n                      align=\"center\"\r\n                  >\r\n                      Fill up a request for quotation for your next project\r\n                  </Typography>\r\n              </Grid>\r\n          </Grid>\r\n          <Box\r\n            mt={2}\r\n            display=\"flex\"\r\n            alignItems=\"center\"\r\n          >\r\n          </Box>\r\n        </Box>\r\n      </CardContent>\r\n    </Card>\r\n  );\r\n};\r\n\r\nRequestForQuotation.propTypes = {\r\n  className: PropTypes.string\r\n};\r\n\r\nexport default RequestForQuotation;","import React from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport clsx from 'clsx';\r\nimport {\r\n  Box,\r\n  Card,\r\n  CardContent,\r\n  Divider,\r\n  Grid,\r\n  Typography,\r\n  Button,\r\n  makeStyles\r\n} from '@material-ui/core';\r\nimport GetAppIcon from '@material-ui/icons/GetApp';\r\nimport { AddBoxOutlined } from '@material-ui/icons';\r\nimport { Link as RouterLink, useNavigate } from 'react-router-dom';\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n  root: {\r\n    display: 'flex',\r\n    flexDirection: 'column'\r\n  },\r\n  statsItem: {\r\n    alignItems: 'center',\r\n    display: 'flex'\r\n  },\r\n  statsIcon: {\r\n    marginRight: theme.spacing(1)\r\n  }\r\n}));\r\n\r\nconst QuotationCard = ({ className, quotation, ...rest }) => {\r\n  const classes = useStyles();\r\n  const navigate = useNavigate();\r\n  const getApprovalStatus = () => {\r\n    switch(quotation.approval_status)\r\n    {\r\n      case \"in_progress\":\r\n        return \"In Progress\";\r\n      case \"approved\":\r\n        return \"Approved\";\r\n      case \"not_approved\":\r\n        return \"Not Approved\";\r\n      case \"computed\":\r\n        return \"Computed\";\r\n      default:\r\n        return \"Unknown\";\r\n    }\r\n  }\r\n\r\n  return (\r\n    <Card\r\n      className={clsx(classes.root, className)}\r\n      {...rest}\r\n    >\r\n      <CardContent>\r\n        <Box \r\n          display=\"flex\" \r\n          flexDirection=\"column\" \r\n          mb={1}\r\n        >\r\n          <Typography \r\n            align=\"left\" \r\n            color=\"textPrimary\" \r\n            gutterBottom \r\n            variant=\"h4\"\r\n          >\r\n            {quotation.project_name}\r\n          </Typography>\r\n          \r\n          <Grid \r\n            container \r\n            spacing={1}\r\n          >\r\n            <Grid \r\n              item \r\n              xs={6}\r\n            >\r\n              <Typography \r\n                align=\"left\" \r\n                color=\"textSecondary\" \r\n                gutterBottom \r\n                variant=\"h5\"\r\n              >\r\n                Client: \r\n              </Typography>\r\n              <Typography \r\n                align=\"left\" \r\n                color=\"textSecondary\" \r\n                gutterBottom \r\n                variant=\"body1\"\r\n              >\r\n                {quotation.client.full_name}\r\n              </Typography>\r\n            </Grid>\r\n\r\n            <Grid \r\n              item \r\n              xs={6}\r\n            >\r\n              <Typography \r\n                align=\"left\" \r\n                color=\"textSecondary\" \r\n                gutterBottom \r\n                variant=\"h5\"\r\n              >\r\n                Product Type:\r\n              </Typography>\r\n              <Typography \r\n                align=\"left\" \r\n                color=\"textSecondary\" \r\n                gutterBottom \r\n                variant=\"body1\"\r\n              >\r\n                {quotation.product_type.product_name}\r\n              </Typography>\r\n            </Grid>\r\n\r\n            <Grid item xs={6}>\r\n              <Typography \r\n                align=\"left\" \r\n                color=\"textSecondary\" \r\n                gutterBottom \r\n                variant=\"h5\"\r\n              >\r\n                Created:\r\n              </Typography>\r\n              <Typography \r\n                align=\"left\" \r\n                color=\"textSecondary\" \r\n                gutterBottom \r\n                variant=\"body1\"\r\n              >\r\n                {new Date(quotation.created_date).toLocaleDateString()}\r\n              </Typography>\r\n            </Grid>\r\n            \r\n            <Grid \r\n              item \r\n              xs={6}\r\n            >\r\n              <Typography \r\n                align=\"left\" \r\n                color=\"textSecondary\" \r\n                gutterBottom \r\n                variant=\"h5\"\r\n              >\r\n                Approval Status: \r\n              </Typography>\r\n              <Typography \r\n                align=\"left\" \r\n                color=\"textSecondary\" \r\n                gutterBottom \r\n                variant=\"body1\"\r\n              >\r\n                { getApprovalStatus() }\r\n              </Typography>\r\n            </Grid>\r\n          </Grid>\r\n        </Box>\r\n        <Box>\r\n          {/* <Button \r\n            variant=\"contained\" \r\n            color=\"primary\" \r\n            md={3}\r\n            onClick={\r\n              ()=>{\r\n                navigate('/app/quote/detail',{state: {id: quotation.id}})\r\n              }\r\n            }\r\n          >\r\n            COMPUTE QUOTATION\r\n          </Button> */}\r\n          <Button \r\n            variant=\"outlined\" \r\n            color=\"primary\"\r\n            onClick={\r\n              ()=>{\r\n                navigate('/app/quote/detail',{state: {id: quotation.id}})\r\n              }\r\n            }\r\n          >\r\n            REVIEW PRODUCT SPECS\r\n          </Button>\r\n        </Box>\r\n      </CardContent>\r\n    </Card>\r\n  );\r\n};\r\n\r\nQuotationCard.propTypes = {\r\n  className: PropTypes.string,\r\n  quotation: PropTypes.object.isRequired\r\n};\r\n\r\nexport default QuotationCard;\r\n","import React, { useState, useEffect } from 'react';\r\n\r\nimport { useSelector, useDispatch } from \"react-redux\";\r\nimport { Link as RouterLink, useNavigate, useHistory, Link } from 'react-router-dom';\r\n\r\nimport {\r\n  Container,\r\n  Grid,\r\n  makeStyles,\r\n  Box,\r\n  Button,\r\n  Typography\r\n} from '@material-ui/core';\r\n\r\nimport QuotationCard from '../../cards/QuotationCard';\r\n\r\nconst AwaitingComputation = (props) => {\r\n\r\n    return (\r\n    <Grid item xs={12} sm={6}>\r\n        <Box mb={1}>\r\n          <Typography className={props.classes.name}\r\n            color=\"textSecondary\"\r\n            variant=\"h5\"\r\n          >\r\n            AWAITING COMPUTATION\r\n          </Typography>\r\n        </Box>\r\n        <Grid container style={{maxHeight:480,overflow:'auto'}}>\r\n          {props.in_progress && props.in_progress.map((quotation) => (\r\n            <Grid\r\n              item\r\n              key={quotation.id}\r\n            >\r\n              <Box mt={2}>\r\n              <QuotationCard\r\n                className={props.classes.QuotationCard}\r\n                quotation={quotation}\r\n              />\r\n              </Box>\r\n            </Grid>\r\n        ))}\r\n        </Grid>\r\n    </Grid>\r\n    );\r\n}\r\nexport default AwaitingComputation;","import React, { useState, useEffect } from 'react';\r\n\r\nimport { useSelector, useDispatch } from \"react-redux\";\r\nimport { Link as RouterLink, useNavigate, useHistory, Link } from 'react-router-dom';\r\n\r\nimport {\r\n  Container,\r\n  Grid,\r\n  makeStyles,\r\n  Box,\r\n  Button,\r\n  Typography\r\n} from '@material-ui/core';\r\n\r\nimport QuotationCard from '../../cards/QuotationCard';\r\n\r\nconst AwaitingApproval = (props) => {\r\n    return (\r\n        <Grid item xs={12} sm={6}>\r\n            <Box mb={1}>\r\n              <Typography className={props.classes.name}\r\n                color=\"textSecondary\"\r\n                variant=\"h5\"\r\n              >\r\n                AWAITING APPROVAL\r\n              </Typography>\r\n            </Box>\r\n            <Grid container style={{maxHeight:480,overflow:'auto'}}>\r\n              {props.computed && props.computed.map((quotation) => (\r\n                <Grid\r\n                  item\r\n                  key={quotation.id}\r\n                >\r\n                  <Box mt={2}>\r\n                  <QuotationCard\r\n                    className={props.classes.QuotationCard}\r\n                    quotation={quotation}\r\n                  />\r\n                  </Box>\r\n                </Grid>\r\n            ))}\r\n            </Grid>\r\n        </Grid>\r\n    );\r\n}\r\nexport default AwaitingApproval;","import React, {useState, useEffect} from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport clsx from 'clsx';\r\nimport {\r\n  Box,\r\n  Card,\r\n  CardContent,\r\n  Divider,\r\n  Grid,\r\n  Typography,\r\n  Button,\r\n  makeStyles\r\n} from '@material-ui/core';\r\nimport GetAppIcon from '@material-ui/icons/GetApp';\r\nimport { AddBoxOutlined } from '@material-ui/icons';\r\nimport { Link as RouterLink, useNavigate } from 'react-router-dom';\r\nimport { limitVisibility } from '../../_helpers/index';\r\nimport { useSelector, useDispatch } from 'react-redux';\r\nimport { getProfile } from '../../_actions/auth';\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n  root: {\r\n    display: 'flex',\r\n    flexDirection: 'column'\r\n  },\r\n  statsItem: {\r\n    alignItems: 'center',\r\n    display: 'flex'\r\n  },\r\n  statsIcon: {\r\n    marginRight: theme.spacing(1)\r\n  }\r\n}));\r\n\r\nconst JobOrderCard = ({ className, jobOrder, currentUserProfile, ...rest }) => {\r\n  const classes = useStyles();\r\n  const navigate = useNavigate();\r\n  const dispatch = useDispatch();\r\n\r\n  const getProductionStatus = () => {\r\n    switch(jobOrder.production_status)\r\n    {\r\n      case \"inprogress\":\r\n        return \"In Production\";\r\n      case \"delivery\":\r\n        return \"Out for Delivery\";\r\n      case \"pending\":\r\n        return \"Pending\";\r\n      case \"finished\":\r\n        return \"Finished\";\r\n      default:\r\n        return \"Unknown\";\r\n    }\r\n  }\r\n\r\n  return (\r\n    <Card\r\n      className={clsx(classes.root, className)}\r\n      {...rest}\r\n    >\r\n      <CardContent>\r\n        <Box \r\n          display=\"flex\" \r\n          flexDirection=\"column\" \r\n          mb={1}\r\n        >\r\n          <Typography \r\n            align=\"left\" \r\n            color=\"textPrimary\" \r\n            gutterBottom \r\n            variant=\"h4\"\r\n          >\r\n            {jobOrder && jobOrder.quotation.project_name}\r\n          </Typography>\r\n          \r\n          <Grid \r\n            container \r\n            spacing={1}\r\n          >\r\n            <Grid \r\n              item \r\n              xs={6}\r\n            >\r\n              <Typography \r\n                align=\"left\" \r\n                color=\"textSecondary\" \r\n                gutterBottom \r\n                variant=\"h5\"\r\n              >\r\n                Client: \r\n              </Typography>\r\n              <Typography \r\n                align=\"left\" \r\n                color=\"textSecondary\" \r\n                gutterBottom \r\n                variant=\"body1\"\r\n              >\r\n                {jobOrder && jobOrder.quotation.client.full_name}\r\n              </Typography>\r\n            </Grid>\r\n            <Grid \r\n              item \r\n              xs={6}\r\n            >\r\n              <Typography \r\n                align=\"left\" \r\n                color=\"textSecondary\" \r\n                gutterBottom \r\n                variant=\"h5\"\r\n              >\r\n                Product Type:\r\n              </Typography>\r\n              <Typography \r\n                align=\"left\" \r\n                color=\"textSecondary\" \r\n                gutterBottom \r\n                variant=\"body1\"\r\n              >\r\n                {jobOrder && jobOrder.quotation.product_type.product_name}\r\n              </Typography>\r\n            </Grid>\r\n            <Grid \r\n            container \r\n            spacing={1}\r\n          >\r\n            <Grid \r\n              item \r\n              xs={6}\r\n            >\r\n              <Typography \r\n                align=\"left\" \r\n                color=\"textSecondary\" \r\n                gutterBottom \r\n                variant=\"h5\"\r\n              >\r\n                Page Dimensions (Length x Width):\r\n              </Typography>\r\n              <Typography \r\n                align=\"left\" \r\n                color=\"textSecondary\" \r\n                gutterBottom \r\n                variant=\"body1\"\r\n              >\r\n                {(Number)(jobOrder && jobOrder.quotation.page_length).toFixed(2)}\" x {(Number)(jobOrder && jobOrder.quotation.page_width).toFixed(2)}\"\r\n              </Typography>\r\n            </Grid>\r\n\r\n            <Grid \r\n              item \r\n              xs={6}\r\n            >\r\n              <Typography \r\n                align=\"left\" \r\n                color=\"textSecondary\" \r\n                gutterBottom \r\n                variant=\"h5\"\r\n              >\r\n                Paper Types:\r\n              </Typography>\r\n              <Typography \r\n                align=\"left\" \r\n                color=\"textSecondary\" \r\n                gutterBottom \r\n                variant=\"body1\"\r\n              >\r\n                {jobOrder && jobOrder.quotation.paper_types}\r\n              </Typography>\r\n            </Grid>\r\n          </Grid>\r\n          <Grid \r\n            container \r\n            spacing={1}\r\n          >\r\n            <Grid \r\n              item \r\n              xs={6}\r\n            >\r\n              <Typography \r\n                align=\"left\" \r\n                color=\"textSecondary\" \r\n                gutterBottom \r\n                variant=\"h5\"\r\n              >\r\n                Lamination Types: \r\n              </Typography>\r\n              <Typography \r\n                align=\"left\" \r\n                color=\"textSecondary\" \r\n                gutterBottom \r\n                variant=\"body1\"\r\n              >\r\n                {jobOrder && jobOrder.quotation.lamination_types}\r\n              </Typography>\r\n            </Grid>\r\n            <Grid \r\n              item \r\n              xs={6}\r\n            >\r\n              <Typography \r\n                align=\"left\" \r\n                color=\"textSecondary\" \r\n                gutterBottom \r\n                variant=\"h5\"\r\n              >\r\n                Binding Types:\r\n              </Typography>\r\n              <Typography \r\n                align=\"left\" \r\n                color=\"textSecondary\" \r\n                gutterBottom \r\n                variant=\"body1\"\r\n              >\r\n                {jobOrder.quotation.binding_types}\r\n              </Typography>\r\n            </Grid>\r\n            <Grid \r\n              item \r\n              xs={6}\r\n            >\r\n              <Typography \r\n                align=\"left\" \r\n                color=\"textSecondary\" \r\n                gutterBottom \r\n                variant=\"h5\"\r\n              >\r\n                Production Status: \r\n              </Typography>\r\n              <Typography \r\n                align=\"left\" \r\n                color=\"textSecondary\" \r\n                gutterBottom \r\n                variant=\"body1\"\r\n              >\r\n                { getProductionStatus() }\r\n              </Typography>\r\n            </Grid>\r\n          </Grid>\r\n          </Grid>\r\n        </Box>\r\n        <Box>\r\n          { currentUserProfile && limitVisibility(\r\n              <Button \r\n                variant=\"outlined\" \r\n                color=\"primary\"\r\n                onClick={\r\n                  ()=>{\r\n                    // navigate('/app/quote/detail',{state: {id: quotation.id}})\r\n                  }\r\n                }\r\n              >\r\n                REVIEW PRODUCT SPECS\r\n              </Button>,\r\n              ['O','AM'],\r\n              currentUserProfile.job_position,\r\n              false\r\n            )\r\n          }\r\n          {/* <Button \r\n            variant=\"outlined\" \r\n            color=\"primary\"\r\n            onClick={\r\n              ()=>{\r\n                // navigate('/app/quote/detail',{state: {id: quotation.id}})\r\n              }\r\n            }\r\n          >\r\n            REVIEW PRODUCT SPECS\r\n          </Button> */}\r\n        </Box>\r\n      </CardContent>\r\n    </Card>\r\n  );\r\n};\r\n\r\nJobOrderCard.propTypes = {\r\n  className: PropTypes.string,\r\n  jobOrder: PropTypes.object.isRequired\r\n};\r\n\r\nexport default JobOrderCard;\r\n","import React, { useState, useEffect } from 'react';\r\n\r\nimport { useSelector, useDispatch } from \"react-redux\";\r\nimport { Link as RouterLink, useNavigate, useHistory, Link } from 'react-router-dom';\r\n\r\nimport {\r\n  Container,\r\n  Grid,\r\n  makeStyles,\r\n  Box,\r\n  Button,\r\n  Typography\r\n} from '@material-ui/core';\r\n\r\nimport JobOrderCard from '../../../../jobOrders/JobOrderCard';\r\n\r\nconst InProduction = (props) => {\r\n    return (props.in_production && \r\n      <Grid item xs={12} sm={6}>\r\n        <Box mb={1}>\r\n          <Typography className={props.classes.name}\r\n            color=\"textSecondary\"\r\n            variant=\"h5\"\r\n          >\r\n            IN PRODUCTION\r\n          </Typography>\r\n        </Box>\r\n        <Grid container style={{maxHeight:480,overflow:'auto'}}>\r\n          {props.in_production.length > 0 && props.in_production.map((jobOrder) => (\r\n            <Grid\r\n              item xs={12}\r\n              key={jobOrder.id}\r\n            >\r\n              <Box mt={2}>\r\n                {jobOrder && \r\n                  <JobOrderCard\r\n                    className={props.classes.JobOrderCard}\r\n                    jobOrder={jobOrder}\r\n                  />\r\n                }\r\n              </Box>\r\n            </Grid>\r\n        ))}\r\n        </Grid>\r\n      </Grid>\r\n    );\r\n}\r\nexport default InProduction;","import React, { useState, useEffect } from 'react';\r\n\r\nimport { useSelector, useDispatch } from \"react-redux\";\r\nimport { Link as RouterLink, useNavigate, useHistory, Link } from 'react-router-dom';\r\n\r\nimport {\r\n  Container,\r\n  Grid,\r\n  makeStyles,\r\n  Box,\r\n  Button,\r\n  Typography\r\n} from '@material-ui/core';\r\n\r\nimport JobOrderCard from '../../../../jobOrders/JobOrderCard';\r\n\r\nconst OutForDelivery = (props) => {\r\n    return (props.out_for_delivery &&\r\n    <Grid item xs={12} sm={6}>\r\n        <Box mb={1}>\r\n          <Typography className={props.classes.name}\r\n            color=\"textSecondary\"\r\n            variant=\"h5\"\r\n          >\r\n            OUT FOR DELIVERY\r\n          </Typography>\r\n        </Box>\r\n        <Grid container style={{maxHeight:480,overflow:'auto'}}>\r\n          {props.out_for_delivery && props.out_for_delivery.map((jobOrder) => (\r\n            <Grid\r\n              item\r\n              key={jobOrder.id}\r\n            >\r\n              <Box mt={2}>\r\n                <JobOrderCard\r\n                    className={props.classes.JobOrderCard}\r\n                    jobOrder={jobOrder}\r\n                />\r\n              </Box>\r\n            </Grid>\r\n        ))}\r\n        </Grid>\r\n    </Grid>\r\n    );\r\n}\r\nexport default OutForDelivery;","import axios from 'axios';\r\nimport {getResultURL, getFilteredObject} from \"../_helpers/\"\r\n\r\n/*\r\n///////////////////////////////\r\nQUOTATION API SERVICE FUNCTIONS\r\n///////////////////////////////\r\n*/\r\n\r\nconst createQuotation = (quotation) => {\r\n    // console.log(quotation);\r\n    const allowedQuotationFields = [\r\n        \"project_name\",\r\n        \"product_type\",\r\n        \"created_date\",\r\n        \"client\",\r\n        \"approval_status\",\r\n        \"printing_process\",\r\n        \"quantity\",\r\n        \"items\"\r\n    ]\r\n    const allowedQuotationItemFields = [\r\n        'lamination',\r\n        'binding',\r\n        'paper',\r\n        'extra_plates',\r\n        'item_type',\r\n        'no_colors',\r\n        'quotation'\r\n    ]\r\n    \r\n    const filteredQuotationData = getFilteredObject(quotation,allowedQuotationFields)\r\n    const filteredQuotationItemsData = getFilteredObject(quotation.items,allowedQuotationItemFields)\r\n    filteredQuotationData.items = filteredQuotationItemsData;\r\n    \r\n    const createResult = axios.post(`api/quotations/`,filteredQuotationData)\r\n    return createResult;\r\n}\r\n\r\nconst retrieveQuotation = (id) => {\r\n    const quoteResult = axios.get(`api/quotations/${id}`)\r\n    return quoteResult;\r\n}\r\n\r\nconst retrieveQuotations = (approval_status=null,client=null) => {\r\n    // TODO: Add support for filtering quotations by client\r\n    const urlParams = {\r\n        \"approval_status\" : approval_status,\r\n        \"client\" : client,\r\n    }\r\n    let requestURL = getResultURL(\"api/quotations/\", urlParams);\r\n    const quotationsListResult = axios.get(requestURL);\r\n    return quotationsListResult;\r\n}\r\n\r\nconst deleteQuotation = (id) => \r\n{\r\n  // TODO: Implement API call to delete quotation by ID.\r\n}\r\n\r\nconst updateQuotation = (quotation) => {\r\n    // console.log(quotation);\r\n    const allowedQuotationFields = [\r\n        \"project_name\",\r\n        \"product_type\",\r\n        \"approval_status\",\r\n        \"printing_process\",\r\n        \"quantity\",\r\n        \"total_pages\",\r\n        \"markup_percentage\",\r\n        \"margin_of_error\",\r\n        \"items\",\r\n        \"page_length\",\r\n        \"page_width\",\r\n        \"pages_can_fit\",\r\n        \"total_binding_costs\",\r\n        \"total_folds\",\r\n        \"cutting_costs\",\r\n        \"packaging_costs\",\r\n        \"transport_costs\",\r\n    ]\r\n    const allowedQuotationItemFields = [\r\n        'id',\r\n        'lamination',\r\n        'binding',\r\n        'paper',\r\n        'extra_plates',\r\n        'item_type',\r\n        'no_colors',\r\n        'no_plates_per_copy',\r\n        'no_impressions_per_plate',\r\n        'no_sheets_ordered_for_copy',\r\n        'quotation'\r\n    ]\r\n\r\n    const filteredQuotationData = getFilteredObject(quotation,allowedQuotationFields)\r\n    const filteredQuotationItemsData = getFilteredObject(quotation.items,allowedQuotationItemFields)\r\n    filteredQuotationData.items = filteredQuotationItemsData;\r\n\r\n    const updateResult = axios.put(`api/quotations/${quotation.id}/`,filteredQuotationData)\r\n    console.log(filteredQuotationData);\r\n    console.log(JSON.stringify(filteredQuotationData));\r\n    return updateResult;\r\n}\r\n\r\n// eslint-disable-next-line\r\nexport default \r\n{\r\n    createQuotation, \r\n    retrieveQuotation,\r\n    updateQuotation,\r\n    retrieveQuotations,\r\n    deleteQuotation,\r\n};","import {\r\n    CREATE_QUOTATION_FAIL,\r\n    CREATE_QUOTATION_SUCCESS,\r\n    RETRIEVE_QUOTATION_FAIL,\r\n    RETRIEVE_QUOTATION_SUCCESS,\r\n    UPDATE_QUOTATION_FAIL,\r\n    UPDATE_QUOTATION_SUCCESS,\r\n    RETRIEVE_COMPUTED_QUOTATIONS_SUCCESS,\r\n    RETRIEVE_COMPUTED_QUOTATIONS_FAIL,\r\n    RETRIEVE_IN_PROGRESS_QUOTATIONS_SUCCESS,\r\n    RETRIEVE_IN_PROGRESS_QUOTATIONS_FAIL,\r\n    RETRIEVE_APPROVED_QUOTATIONS_SUCCESS,\r\n    RETRIEVE_APPROVED_QUOTATIONS_FAIL,\r\n} from './types';\r\n\r\nimport QuotationService from '../_services/quotation.service';\r\n\r\nexport const createQuotation = (quotation) => (dispatch) => {\r\n    return QuotationService.createQuotation(quotation)\r\n        .then((response)=>{\r\n            dispatch({\r\n                type: CREATE_QUOTATION_SUCCESS,\r\n                payload: {quotation: response.data}\r\n            })\r\n            return Promise.resolve();\r\n        })\r\n        .catch((error)=>{\r\n            dispatch({\r\n                type: CREATE_QUOTATION_FAIL,\r\n            })\r\n            return Promise.reject();\r\n        })\r\n}\r\n\r\nexport const updateQuotation = (quotation) => (dispatch) => {\r\n    return QuotationService.updateQuotation(quotation)\r\n        .then((response)=>{\r\n            console.log(\"YES! \", response.data)\r\n            dispatch({\r\n                type: UPDATE_QUOTATION_SUCCESS,\r\n            })\r\n            return Promise.resolve();\r\n        })\r\n        .catch((error)=>{\r\n            console.log(\"WTF?\")\r\n            console.log(quotation);\r\n            console.log(JSON.stringify(quotation));\r\n            dispatch({\r\n                type: UPDATE_QUOTATION_FAIL,\r\n            })\r\n            return Promise.reject();\r\n        })\r\n}\r\n\r\nexport const approveQuotation = (id) => (dispatch) => {\r\n    \r\n    return QuotationService.retrieveQuotation(id)\r\n        .then((response)=>{\r\n            \r\n            dispatch({\r\n                type: RETRIEVE_QUOTATION_SUCCESS,\r\n                payload: {quotation: response.data}\r\n            })\r\n\r\n            let quotationToUpdate = response.data;\r\n            quotationToUpdate.approval_status=\"approved\";\r\n\r\n            return QuotationService.updateQuotation(quotationToUpdate)\r\n                .then((response)=>{\r\n                    dispatch({\r\n                        type: UPDATE_QUOTATION_SUCCESS,\r\n                        payload: {quotation: response.data}\r\n                    })\r\n                    console.log(response.data);\r\n                    return Promise.resolve();\r\n                })\r\n                .catch((error)=>{\r\n                    dispatch({\r\n                        type: UPDATE_QUOTATION_FAIL\r\n                    })\r\n                    console.log(error);\r\n                    console.log(quotationToUpdate);\r\n                    console.log(JSON.stringify(quotationToUpdate));\r\n                    return Promise.reject();\r\n                })\r\n            \r\n        })\r\n        .catch((error)=>{\r\n            dispatch({\r\n                type: RETRIEVE_QUOTATION_FAIL,\r\n            })\r\n            console.log(error);\r\n            return Promise.reject();\r\n        })\r\n}\r\n\r\nexport const archiveQuotation = (id) => (dispatch) => {\r\n    \r\n    return QuotationService.retrieveQuotation(id)\r\n        .then((response)=>{\r\n            \r\n            dispatch({\r\n                type: RETRIEVE_QUOTATION_SUCCESS,\r\n                payload: {quotation: response.data}\r\n            })\r\n\r\n            let quotationToUpdate = response.data;\r\n            quotationToUpdate.approval_status=\"archived\";\r\n\r\n            return QuotationService.updateQuotation(quotationToUpdate)\r\n                .then((response)=>{\r\n                    dispatch({\r\n                        type: UPDATE_QUOTATION_SUCCESS,\r\n                        payload: {quotation: response.data}\r\n                    })\r\n                    return Promise.resolve();\r\n                })\r\n                .catch((error)=>{\r\n                    dispatch({\r\n                        type: UPDATE_QUOTATION_FAIL,\r\n                        payload: {quotation: response.data}\r\n                    })\r\n                    return Promise.reject();\r\n                })\r\n            \r\n        })\r\n        .catch((error)=>{\r\n            dispatch({\r\n                type: RETRIEVE_QUOTATION_FAIL,\r\n            })\r\n            return Promise.reject();\r\n        })\r\n}\r\n\r\nexport const getQuotationById = (id) => (dispatch) => {\r\n    return QuotationService.retrieveQuotation(id)\r\n        .then((response)=>{\r\n            dispatch({\r\n                type: RETRIEVE_QUOTATION_SUCCESS,\r\n                payload: {quotation: response.data}\r\n            })\r\n            return Promise.resolve();\r\n        })\r\n        .catch((error)=>{\r\n            dispatch({\r\n                type:RETRIEVE_COMPUTED_QUOTATIONS_FAIL,\r\n            })\r\n            return Promise.reject();\r\n        })\r\n};\r\n\r\nexport const getComputedQuotations = (client=\"\") => (dispatch) => {\r\n    return QuotationService.retrieveQuotations(\"computed\",client)\r\n        .then((response)=>{\r\n            // console.log(response.data);\r\n            dispatch({\r\n                type: RETRIEVE_COMPUTED_QUOTATIONS_SUCCESS,\r\n                payload: {quotations: response.data}\r\n            })\r\n            return Promise.resolve();\r\n        })\r\n        .catch((error)=>{\r\n            dispatch({\r\n                type: RETRIEVE_COMPUTED_QUOTATIONS_FAIL,\r\n            })\r\n            return Promise.reject();\r\n        })\r\n}\r\n\r\nexport const getInProgressQuotations = (client=\"\") => (dispatch) => {\r\n    return QuotationService.retrieveQuotations(\"in_progress\",client)\r\n        .then((response)=>{\r\n            dispatch({\r\n                type: RETRIEVE_IN_PROGRESS_QUOTATIONS_SUCCESS,\r\n                payload: {quotations: response.data}\r\n            })\r\n            return Promise.resolve();\r\n        })\r\n        .catch((error)=>{\r\n            dispatch({\r\n                type: RETRIEVE_IN_PROGRESS_QUOTATIONS_FAIL\r\n            })\r\n            return Promise.reject();\r\n        })\r\n}\r\n\r\nexport const getApprovedQuotations = () => (dispatch) => {\r\n    return QuotationService.retrieveQuotations(\"approved\")\r\n        .then((response)=>{\r\n            dispatch({\r\n                type: RETRIEVE_APPROVED_QUOTATIONS_SUCCESS,\r\n                payload: {quotations: response.data}\r\n            })\r\n            return Promise.resolve();\r\n        })\r\n        .catch((error)=>{\r\n            dispatch({\r\n                type: RETRIEVE_APPROVED_QUOTATIONS_FAIL,\r\n            })\r\n            return Promise.reject();\r\n        })\r\n}","import axios from \"axios\";\r\nimport {getResultURL, getFilteredObject} from \"../_helpers/\"\r\n\r\n/*\r\n///////////////////////////////\r\nJOB ORDER API SERVICE FUNCTIONS\r\n///////////////////////////////\r\n*/\r\n\r\nconst createJobOrder = (quotation, manager) => {\r\n  // TODO: Test if createJobOrder functioning\r\n  const newJobOrder = {\r\n    quotation:  quotation.id,\r\n    manager: manager.id,\r\n    production_status: \"pending\",\r\n  }\r\n  const createResult = axios.post(`api/joborders/`,newJobOrder)\r\n  .then((response)=>{\r\n    console.log(response.data)\r\n    return response;\r\n  })\r\n  .catch((error)=>{\r\n    console.log(JSON.stringify(newJobOrder))\r\n    console.log(newJobOrder)\r\n  })\r\n  return createResult;\r\n}\r\n\r\nconst retrieveJobOrder = (id) => {\r\n \r\n  // TODO: Test if retrieveJobOrder functioning\r\n  const jobOrderResult = axios.get(`api/joborders/${id}`)\r\n  return jobOrderResult;\r\n}\r\n\r\nconst retrieveJobOrders = (production_status=\"\", manager=\"\", client=\"\") => {\r\n  // TODO: Test if retrieveJobOrders functioning\r\n  const urlParams = {\r\n    \"production_status\" : production_status,\r\n    \"manager\" : manager,\r\n    \"quotation__client\" : client,\r\n  }\r\n  let requestURL = getResultURL(\"api/joborders/\", urlParams);\r\n  //console.log(requestURL);\r\n  const jobOrdersListResult = axios.get(requestURL);\r\n  return jobOrdersListResult;\r\n}\r\n\r\nconst updateJobOrder = (jobOrder) => {\r\n  // TODO: Test if updateJobOrder functioning\r\n  const updateResult = axios.put(`api/quotations/${jobOrder.id}/`,jobOrder)\r\n  return updateResult;\r\n}\r\n\r\nconst deleteJobOrder = (id) => {\r\n  // TODO: Implement API call to delete a specific job order\r\n}\r\n\r\nexport default {\r\n  createJobOrder,\r\n  retrieveJobOrder,\r\n  retrieveJobOrders,\r\n  updateJobOrder,\r\n  deleteJobOrder\r\n}","import {\r\n    CREATE_JOB_ORDER_SUCCESS,\r\n    CREATE_JOB_ORDER_FAIL,\r\n    RETRIEVE_IN_PROGRESS_JOB_ORDERS_SUCCESS,\r\n    RETRIEVE_IN_PROGRESS_JOB_ORDERS_FAIL,\r\n    RETRIEVE_PENDING_JOB_ORDERS_SUCCESS,\r\n    RETRIEVE_PENDING_JOB_ORDERS_FAIL\r\n} from './types';\r\n\r\nimport JobOrderService from \"../_services/jobOrder.service\";\r\n\r\nexport const createJobOrder = (quotation, manager) => (dispatch) => {\r\n    // TODO: Test if createJobOrder action is functioning\r\n    return JobOrderService.createJobOrder(quotation, manager)\r\n        .then((response)=>{\r\n            dispatch({\r\n                type: CREATE_JOB_ORDER_SUCCESS,\r\n                payload: {jobOrder: response.data}\r\n            })\r\n            return Promise.resolve()\r\n        })\r\n        .catch((error)=>{\r\n            dispatch({type:CREATE_JOB_ORDER_FAIL})\r\n            return Promise.reject()\r\n        })\r\n}\r\n\r\nexport const getPendingJobOrders = () => (dispatch) => {\r\n    return JobOrderService.retrieveJobOrders(\"pending\")\r\n        .then((response)=>{\r\n            dispatch({\r\n                type: RETRIEVE_PENDING_JOB_ORDERS_SUCCESS,\r\n                payload: {jobOrders: response.data}\r\n            })\r\n            return Promise.resolve();\r\n        })\r\n        .catch((error)=>{\r\n            dispatch({\r\n                type: RETRIEVE_PENDING_JOB_ORDERS_FAIL\r\n            })\r\n            return Promise.reject();\r\n        })\r\n}\r\n\r\nexport const getInProductionJobOrders = (client=\"\",manager=\"\") => (dispatch) => {\r\n    return JobOrderService.retrieveJobOrders(\"inprogress\",manager,client)\r\n        .then((response)=>{\r\n            dispatch({\r\n                type: RETRIEVE_IN_PROGRESS_JOB_ORDERS_SUCCESS,\r\n                payload: {jobOrders: response.data}\r\n            })\r\n            //console.log(\"SUCCESS!\", response.data)\r\n            return Promise.resolve();\r\n        })\r\n        .catch((error)=>{\r\n            dispatch({\r\n                type: RETRIEVE_IN_PROGRESS_JOB_ORDERS_FAIL\r\n            })\r\n            //console.log(error)\r\n            return Promise.reject();\r\n        })\r\n}\r\n\r\nexport const startJobOrderProduction = (jobOrder) => {\r\n    // TODO: Implement action for starting a pending job order\r\n}\r\n\r\nexport const startJobOrderDelivery = (jobOrder) => {\r\n    // TODO: Implement action for starting job order delivery\r\n}\r\n\r\nexport const finishJobOrder = (jobOrder) => {\r\n    // TODO: Implement action for finishing a job order.\r\n}","import React, { useState, useEffect } from 'react';\r\n\r\nimport { useSelector, useDispatch } from \"react-redux\";\r\nimport { Link as RouterLink, useNavigate, useHistory, Link } from 'react-router-dom';\r\n\r\nimport {\r\n  Container,\r\n  Grid,\r\n  makeStyles,\r\n  Box,\r\n  Button,\r\n  Typography\r\n} from '@material-ui/core';\r\n\r\nimport Page from 'src/components/Page';\r\n\r\n// BUTTONS\r\nimport QuoteReview from './buttons/QuoteReview';\r\nimport ManageEmployees from './buttons/ManageEmployees';\r\nimport OrderTracking from './buttons/OrderTracking';\r\nimport AccountSettings from './buttons/AccountSettings';\r\nimport RequestForQuotation from './buttons/RequestForQuotation';\r\n\r\n// CARDS\r\nimport QuotationCard from './cards/QuotationCard';\r\n\r\n// QUOTATION-RELATED LISTS\r\nimport AwaitingComputation from './overviews/quotations/AwaitingComputation';\r\nimport AwaitingApproval from './overviews/quotations/AwaitingApproval';\r\n\r\n// JOB ORDER RELATED LISTS\r\nimport CurrentOrders from './overviews/CurrentOrders';\r\nimport InProduction from './overviews/jobOrders/InProduction';\r\nimport OutForDelivery from './overviews/jobOrders/OutForDelivery';\r\n\r\nimport {getComputedQuotations, getInProgressQuotations} \r\nfrom '../../../_actions/quotation';\r\n\r\nimport {getInProductionJobOrders, getPendingJobOrders} \r\nfrom '../../../_actions/jobOrder';\r\n\r\nimport {limitVisibility}\r\nfrom '../../../_helpers/';\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n  root: {\r\n    backgroundColor: theme.palette.background.dark,\r\n    minHeight: '100%',\r\n    paddingBottom: theme.spacing(3),\r\n    paddingTop: theme.spacing(3)\r\n  }\r\n}));\r\n\r\n\r\nconst Dashboard = () => {\r\n  const classes = useStyles();\r\n  const [data, setData] = useState({in_progress:[],computed:[]});\r\n  const [products] = useState(data);\r\n  const { profile : currentUserProfile } = useSelector(state => state.auth);\r\n  \r\n  const navigate = useNavigate();\r\n  const dispatch = useDispatch();\r\n  \r\n  const {computedQuotations : computed} = useSelector(state => state.quotation);\r\n  const {inProgressQuotations: in_progress} = useSelector(state=>state.quotation);\r\n  const {inProgressJobOrders : in_production} = useSelector(state=>state.jobOrder);\r\n  const {outForDeliveryJobOrders : out_for_delivery} = useSelector(state=>state.jobOrder);\r\n  const {finishedJobOrders : finished } = useSelector(state=>state.jobOrder);\r\n\r\n  useEffect(()=>{\r\n    function fetchData() {\r\n      dispatch(getComputedQuotations())\r\n      dispatch(getInProgressQuotations())\r\n      dispatch(getInProductionJobOrders())\r\n      dispatch(getPendingJobOrders())\r\n    }\r\n    fetchData();\r\n  },[])\r\n\r\n  return (currentUserProfile && \r\n    <Page\r\n      className={classes.root}\r\n      title=\"Dashboard\"\r\n    >\r\n      <Container maxWidth={false}>\r\n        <Box mb={2}>\r\n          <Typography \r\n            className={classes.name}\r\n            color=\"textPrimary\"\r\n            variant=\"h2\"\r\n          >\r\n            Hello {currentUserProfile.full_name}! What would you like to do today?\r\n          </Typography>\r\n          </Box>\r\n            <Grid\r\n              container\r\n              spacing={3}\r\n              direction=\"row\"\r\n              justify=\"flex-start\"\r\n              alignItems=\"flex-start\"\r\n            >\r\n              {limitVisibility(\r\n                <Grid item lg={3} sm={6} xl={3} xs={12}>\r\n                  <Link to={'/app/quote/review/'}>\r\n                    <QuoteReview />\r\n                  </Link>\r\n                </Grid>,\r\n                ['O','AM'],\r\n                currentUserProfile.job_position\r\n              )}\r\n              \r\n              <Grid item lg={3} sm={6} xl={3} xs={12}>\r\n                <Link to={`/app/tracking/`}>\r\n                  <OrderTracking />\r\n                </Link>\r\n              </Grid>\r\n\r\n              {limitVisibility(\r\n                <Grid item lg={3} sm={6} xl={3} xs={12}>\r\n                  <Link to={'/app/products'}>\r\n                    <RequestForQuotation />\r\n                  </Link>\r\n                </Grid>,\r\n                ['C'],\r\n                currentUserProfile.job_position\r\n              )}\r\n\r\n              {limitVisibility(\r\n                <Grid item lg={3} sm={6} xl={3} xs={12}>\r\n                  <Link to={'/app/employees/'}>\r\n                    <ManageEmployees />\r\n                  </Link>\r\n                </Grid>,\r\n                ['O','AM'],\r\n                currentUserProfile.job_position\r\n              )}\r\n              \r\n              <Grid item lg={3} sm={6} xl={3} xs={12}>\r\n                <Link to={'/app/settings'}>\r\n                  <AccountSettings />\r\n                </Link>\r\n              </Grid>\r\n              \r\n              {limitVisibility(\r\n                <Box ml={1} width={1} height={1}>\r\n                  <Box my={2}>\r\n                    <Typography \r\n                      className={classes.name}\r\n                      color=\"textPrimary\"\r\n                      variant=\"h2\"\r\n                      mb={3}\r\n                    >\r\n                      Overview of Quotes\r\n                    </Typography>\r\n                  </Box>\r\n                  <Grid container spacing={3}>\r\n                    {\r\n                      in_progress && \r\n                      <AwaitingComputation\r\n                        classes={classes}\r\n                        in_progress={in_progress}\r\n                      />\r\n                    }\r\n                    {computed && \r\n                    <AwaitingApproval\r\n                      classes={classes}\r\n                      computed={computed}\r\n                    />\r\n                    }\r\n                    <AwaitingApproval\r\n                      classes={classes}\r\n                      computed={computed}\r\n                    />\r\n                  </Grid>\r\n                  <Box ml={1} width={1} height={1}>\r\n                    <Box my={2}>\r\n                      <Typography \r\n                        className={classes.name}\r\n                        color=\"textPrimary\"\r\n                        variant=\"h2\"\r\n                        mb={3}\r\n                      >\r\n                        Overview of Job Orders\r\n                      </Typography>\r\n                    </Box>\r\n                    \r\n                    <Grid container spacing={3}>\r\n                      {\r\n                        in_production &&\r\n                        <InProduction\r\n                          classes={classes}\r\n                          in_production={in_production}\r\n                        />\r\n                      }\r\n                      {\r\n                        out_for_delivery && \r\n                        <OutForDelivery\r\n                          classes={classes}\r\n                          out_for_delivery={out_for_delivery}\r\n                        />\r\n                      }\r\n                      \r\n                    </Grid>\r\n                  </Box>\r\n                </Box>,\r\n                ['O','AM'],\r\n                currentUserProfile.job_position\r\n              )}\r\n        </Grid>\r\n      </Container>\r\n    </Page>\r\n  );\r\n};\r\n\r\nexport default Dashboard;\r\n","import React from 'react';\r\nimport { Link as RouterLink, useNavigate, useHistory } from 'react-router-dom';\r\nimport * as Yup from 'yup';\r\nimport { Formik } from 'formik';\r\nimport {\r\n  Box,\r\n  Button,\r\n  Container,\r\n  Grid,\r\n  Link,\r\n  TextField,\r\n  Typography,\r\n  makeStyles\r\n} from '@material-ui/core';\r\nimport { ToastContainer, toast } from 'react-toastify';\r\n// import FacebookIcon from 'src/icons/Facebook';\r\n// import GoogleIcon from 'src/icons/Google';\r\nimport Page from 'src/components/Page';\r\n\r\nimport { useDispatch, useSelector } from \"react-redux\";\r\nimport { login, getProfile } from \"../../_actions/auth\";\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n  root: {\r\n    backgroundColor: theme.palette.background.dark,\r\n    height: '100%',\r\n    paddingBottom: theme.spacing(3),\r\n    paddingTop: theme.spacing(3)\r\n  }\r\n}));\r\n\r\nconst LoginView = (props) => {\r\n  const classes = useStyles();\r\n  const navigate = useNavigate();\r\n  const dispatch = useDispatch();\r\n  const { isLoggedIn } = useSelector(state => state.auth);\r\n\r\n  return (\r\n    <Page\r\n      className={classes.root}\r\n      title=\"Login\"\r\n    >\r\n      <Box\r\n        display=\"flex\"\r\n        flexDirection=\"column\"\r\n        height=\"100%\"\r\n        justifyContent=\"center\"\r\n      >\r\n        <Container maxWidth=\"sm\">\r\n          <Formik\r\n            initialValues={{\r\n              username: '',\r\n              password: ''\r\n            }}\r\n            validationSchema={Yup.object().shape({\r\n              username: Yup.string().max(255).required('Username is required'),\r\n              password: Yup.string().max(255).required('Password is required')\r\n            })}\r\n            onSubmit={(values, actions) => {\r\n              dispatch(login(values.username,values.password))\r\n                .then(()=>{\r\n                  dispatch(getProfile())\r\n                  .then(()=>{\r\n                    navigate('/app/dashboard', { replace: true });\r\n                  })\r\n                  .catch(error=>error)\r\n                })\r\n                .catch((error)=>{\r\n                  toast.error(\"User with inputted credentials not found.\");\r\n                  actions.setSubmitting(false);\r\n                })\r\n            }}\r\n          >\r\n            {({\r\n              errors,\r\n              handleBlur,\r\n              handleChange,\r\n              handleSubmit,\r\n              isSubmitting,\r\n              touched,\r\n              values\r\n            }) => (\r\n              <form onSubmit={handleSubmit}>\r\n                <Box mb={3}>\r\n                  <Typography\r\n                    color=\"textPrimary\"\r\n                    variant=\"h2\"\r\n                  >\r\n                    Sign in\r\n                  </Typography>\r\n                  <Typography\r\n                    color=\"textSecondary\"\r\n                    gutterBottom\r\n                    variant=\"body2\"\r\n                  >\r\n                    Sign in with your account to access the dashboard\r\n                  </Typography>\r\n                </Box>\r\n                <TextField\r\n                  error={Boolean(touched.username && errors.username)}\r\n                  fullWidth\r\n                  helperText={touched.username && errors.username}\r\n                  label=\"Username\"\r\n                  margin=\"normal\"\r\n                  name=\"username\"\r\n                  onBlur={handleBlur}\r\n                  onChange={handleChange}\r\n                  type=\"text\"\r\n                  value={values.username}\r\n                  variant=\"outlined\"\r\n                />\r\n                <TextField\r\n                  error={Boolean(touched.password && errors.password)}\r\n                  fullWidth\r\n                  helperText={touched.password && errors.password}\r\n                  label=\"Password\"\r\n                  margin=\"normal\"\r\n                  name=\"password\"\r\n                  onBlur={handleBlur}\r\n                  onChange={handleChange}\r\n                  type=\"password\"\r\n                  value={values.password}\r\n                  variant=\"outlined\"\r\n                />\r\n                <Box my={2}>\r\n                  <Button\r\n                    color=\"primary\"\r\n                    disabled={isSubmitting}\r\n                    fullWidth\r\n                    size=\"large\"\r\n                    type=\"submit\"\r\n                    variant=\"contained\"\r\n                  >\r\n                    Sign in now\r\n                  </Button>\r\n                </Box>\r\n                <Typography\r\n                  color=\"textSecondary\"\r\n                  variant=\"body1\"\r\n                >\r\n                  Don&apos;t have an account?\r\n                  {' '}\r\n                  <Link\r\n                    component={RouterLink}\r\n                    to=\"/register\"\r\n                    variant=\"h6\"\r\n                  >\r\n                    Sign up\r\n                  </Link>\r\n                </Typography>\r\n              </form>\r\n            )}\r\n          </Formik>\r\n        </Container>\r\n      </Box>\r\n    </Page>\r\n  );\r\n};\r\n\r\nexport default LoginView;\r\n","import React from 'react';\r\nimport {\r\n  Box,\r\n  Container,\r\n  Typography,\r\n  makeStyles\r\n} from '@material-ui/core';\r\nimport Page from 'src/components/Page';\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n  root: {\r\n    backgroundColor: theme.palette.background.dark,\r\n    height: '100%',\r\n    paddingBottom: theme.spacing(3),\r\n    paddingTop: theme.spacing(3)\r\n  },\r\n  image: {\r\n    marginTop: 50,\r\n    display: 'inline-block',\r\n    maxWidth: '100%',\r\n    width: 560\r\n  }\r\n}));\r\n\r\nconst NotFoundView = () => {\r\n  const classes = useStyles();\r\n\r\n  return (\r\n    <Page\r\n      className={classes.root}\r\n      title=\"404\"\r\n    >\r\n      <Box\r\n        display=\"flex\"\r\n        flexDirection=\"column\"\r\n        height=\"100%\"\r\n        justifyContent=\"center\"\r\n      >\r\n        <Container maxWidth=\"md\">\r\n          <Typography\r\n            align=\"center\"\r\n            color=\"textPrimary\"\r\n            variant=\"h1\"\r\n          >\r\n            404: The page you are looking for isn’t here\r\n          </Typography>\r\n          <Typography\r\n            align=\"center\"\r\n            color=\"textPrimary\"\r\n            variant=\"subtitle2\"\r\n          >\r\n            You either tried some shady route or you came here by mistake.\r\n            Whichever it is, try using the navigation\r\n          </Typography>\r\n          <Box textAlign=\"center\">\r\n            <img\r\n              alt=\"Under development\"\r\n              className={classes.image}\r\n              src=\"/static/images/undraw_page_not_found_su7k.svg\"\r\n            />\r\n          </Box>\r\n        </Container>\r\n      </Box>\r\n    </Page>\r\n  );\r\n};\r\n\r\nexport default NotFoundView;\r\n","import React from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport clsx from 'clsx';\r\nimport { Link as RouterLink, useNavigate, useLocation } from 'react-router-dom';\r\nimport { useDispatch, useSelector } from \"react-redux\";\r\n\r\nimport { createJobOrder } from \"../../_actions/jobOrder\";\r\nimport { updateQuotation, getQuotationById, approveQuotation, archiveQuotation } from \"../../_actions/quotation\";\r\nimport { getJobPosition } from \"../../_helpers/index\";\r\n\r\nimport {\r\n  Box,\r\n  Card,\r\n  CardContent,\r\n  Divider,\r\n  Grid,\r\n  Typography,\r\n  Button,\r\n  makeStyles\r\n} from '@material-ui/core';\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n  root: {\r\n    display: 'flex',\r\n    flexDirection: 'column'\r\n  },\r\n  statsItem: {\r\n    alignItems: 'center',\r\n    display: 'flex'\r\n  },\r\n  statsIcon: {\r\n    marginRight: theme.spacing(1)\r\n  }\r\n}));\r\n\r\nconst QuotationCardComputed = ({ className, quotation, ...rest }) => {\r\n  const classes = useStyles();\r\n  const navigate = useNavigate();\r\n\r\n  const dispatch = useDispatch();\r\n\r\n  const {profile : currentUserProfile} = useSelector(state=>state.auth);\r\n  const { currentQuotation } = useSelector(state=>state.quotation);\r\n  const getApprovalStatus = () => {\r\n    switch(quotation.approval_status)\r\n    {\r\n      case \"in_progress\":\r\n        return \"In Progress\";\r\n      case \"approved\":\r\n        return \"Approved\";\r\n      case \"not_approved\":\r\n        return \"Not Approved\";\r\n      case \"computed\":\r\n        return \"Computed\";\r\n      default:\r\n        return \"Unknown\";\r\n    }\r\n  }\r\n\r\n  const isUserClient = () => {\r\n    try\r\n    {\r\n      switch(currentUserProfile.job_position)\r\n      {\r\n        case \"\":\r\n          return true;\r\n        case null:\r\n          return true;\r\n        default:\r\n          return false;\r\n      }\r\n    }\r\n    catch(error)\r\n    {\r\n      return false;\r\n    }\r\n  }\r\n\r\n  return (\r\n    <Card className={clsx(classes.root, className)} {...rest}>\r\n      <CardContent>\r\n        <Box display=\"flex\" flexDirection=\"column\" mb={1}>\r\n          <Grid container justify=\"space-between\">\r\n            <Grid\r\n              item\r\n              xs={8}\r\n            >\r\n              <Typography \r\n                align=\"left\" \r\n                color=\"textPrimary\" \r\n                gutterBottom \r\n                variant=\"h4\"\r\n              >\r\n                {quotation.project_name}\r\n              </Typography>\r\n            </Grid>\r\n            <Grid\r\n              item\r\n              xs={4}\r\n            >\r\n              <Typography \r\n                color=\"textSecondary\" \r\n                variant=\"subtitle2\" \r\n                align=\"right\"\r\n                xs={4}\r\n              >\r\n                STATUS: { getApprovalStatus() }\r\n              </Typography>\r\n            </Grid>\r\n            <Grid item xs={12}>\r\n              <Typography \r\n                  color=\"textSecondary\" \r\n                  variant=\"h5\" \r\n                  align=\"left\"\r\n                  display=\"inline\"\r\n              >\r\n                Product Type:&nbsp;\r\n              </Typography> \r\n              <Typography \r\n                  color=\"textSecondary\" \r\n                  variant=\"body1\" \r\n                  align=\"left\"\r\n                  display=\"inline\"\r\n              >\r\n                {quotation.product_type.product_name}\r\n              </Typography>\r\n            </Grid>\r\n          </Grid>\r\n        </Box>\r\n        <Box\r\n          display=\"flex\"\r\n          flexDirection=\"column\"\r\n          mb={3}\r\n        >\r\n          <Grid\r\n            container\r\n            justify=\"space-between\"\r\n            spacing={2}\r\n          >\r\n            { (isUserClient()) ? \r\n              <Grid item>\r\n                <Grid \r\n                  container \r\n                  spacing={1}\r\n                >\r\n                  <Grid \r\n                    item \r\n                    xs={12} md={6}\r\n                  >\r\n                    <Typography \r\n                      align=\"left\" \r\n                      color=\"textSecondary\" \r\n                      gutterBottom \r\n                      variant=\"h5\"\r\n                    >\r\n                      Page Dimensions:\r\n                    </Typography>\r\n                    <Typography \r\n                      align=\"left\" \r\n                      color=\"textSecondary\" \r\n                      gutterBottom \r\n                      variant=\"body1\"\r\n                    >\r\n                      {(Number)(quotation.page_length).toFixed(2)}\" x {(Number)(quotation.page_width).toFixed(2)}\"\r\n                      {/* {(Number)(quotation.raw_total_costs).toLocaleString('en-PH',{currency:'PHP',style:'currency'})} */}\r\n                    </Typography>\r\n                  </Grid>\r\n                  <Grid \r\n                    item \r\n                    xs={12} md={6}\r\n                  >\r\n                    <Typography \r\n                      align=\"left\" \r\n                      color=\"textSecondary\" \r\n                      gutterBottom \r\n                      variant=\"h5\"\r\n                    >\r\n                      Quantity:\r\n                    </Typography>\r\n                    <Typography \r\n                      align=\"left\" \r\n                      color=\"textSecondary\" \r\n                      gutterBottom \r\n                      variant=\"body1\"\r\n                    >\r\n                      {quotation.quantity} copies\r\n                    </Typography>\r\n                  </Grid>\r\n                  <Grid \r\n                    item \r\n                    xs={12} md={6}\r\n                  >\r\n                    <Typography \r\n                      align=\"left\" \r\n                      color=\"textSecondary\" \r\n                      gutterBottom \r\n                      variant=\"h5\"\r\n                    >\r\n                      Paper Types:\r\n                    </Typography>\r\n                    <Typography \r\n                      align=\"left\" \r\n                      color=\"textSecondary\" \r\n                      gutterBottom \r\n                      variant=\"body1\"\r\n                    >\r\n                      {quotation.paper_types}\r\n                      {/* {(Number)(quotation.raw_unit_costs).toLocaleString('en-PH',{currency:'PHP',style:'currency'})} */}\r\n                    </Typography>\r\n                  </Grid>\r\n                  <Grid \r\n                    item \r\n                    xs={12} md={6}\r\n                  >\r\n                    <Typography \r\n                      align=\"left\" \r\n                      color=\"textSecondary\" \r\n                      gutterBottom \r\n                      variant=\"h5\"\r\n                    >\r\n                      Lamination Types: \r\n                    </Typography>\r\n                    <Typography \r\n                      align=\"left\" \r\n                      color=\"textSecondary\" \r\n                      gutterBottom \r\n                      variant=\"body1\"\r\n                    >\r\n                      {quotation.lamination_types}\r\n                      {/* {(Number)(quotation.final_total_costs).toLocaleString('en-PH',{currency:'PHP',style:'currency'})} */}\r\n                    </Typography>\r\n                  </Grid>\r\n                  <Grid \r\n                    item \r\n                    xs={12} md={6}\r\n                  >\r\n                    <Typography \r\n                      align=\"left\" \r\n                      color=\"textSecondary\" \r\n                      gutterBottom \r\n                      variant=\"h5\"\r\n                    >\r\n                      Binding Types:\r\n                    </Typography>\r\n                    <Typography \r\n                      align=\"left\" \r\n                      color=\"textSecondary\" \r\n                      gutterBottom \r\n                      variant=\"body1\"\r\n                    >\r\n                      {quotation.binding_types}\r\n                      {/* {(Number)(quotation.final_unit_costs).toLocaleString('en-PH',{currency:'PHP',style:'currency'})} */}\r\n                    </Typography>\r\n                  </Grid>\r\n              </Grid>\r\n            </Grid>\r\n            :\r\n              <>\r\n                <Grid item justify=\"space-between\" spacing={2}>\r\n                  <Typography align=\"left\" color=\"textPrimary\" variant=\"body1\">\r\n                    Raw Total Costs (w/o Markup)\r\n                  </Typography>\r\n                  <Typography align=\"left\" color=\"textPrimary\" variant=\"body1\">\r\n                    Markup Costs\r\n                  </Typography>\r\n                </Grid>\r\n                <Grid item justify=\"space-between\" spacing={2}>\r\n                  <Typography color=\"textSecondary\" variant=\"subtitle2\" align=\"right\">\r\n                    {(Number)(quotation.raw_total_costs).toLocaleString('en-PH',{currency:'PHP',style:'currency'})}\r\n                  </Typography>\r\n                  <Typography color=\"textSecondary\" variant=\"subtitle2\" align=\"right\">\r\n                    {(Number)(quotation.markup_costs).toLocaleString('en-PH',{currency:'PHP',style:'currency'})}\r\n                  </Typography>\r\n                </Grid>\r\n              </>\r\n            }\r\n            \r\n          </Grid>\r\n          <Divider />\r\n          {quotation.approval_status!==\"in_progress\"? \r\n          <>\r\n            <Typography\r\n              color=\"textSecondary\"\r\n              variant=\"subtitle2\"\r\n              align=\"right\"\r\n            >\r\n              Total Costs: {(Number)(quotation.final_total_costs).toLocaleString('en-PH',{currency:'PHP',style:'currency'})}\r\n            </Typography>\r\n            <Typography\r\n              color=\"textSecondary\"\r\n              variant=\"subtitle2\"\r\n              align=\"right\"\r\n            >\r\n              (Unit Costs: {(Number)(quotation.final_unit_costs).toLocaleString('en-PH',{currency:'PHP',style:'currency'})})\r\n            </Typography>\r\n          </>:<></>}\r\n          \r\n        </Box>\r\n        <Grid container>\r\n          {\r\n            (isUserClient()) ? \r\n            (quotation.approval_status === \"computed\") && \r\n              <>\r\n                <Button \r\n                  fullWidth\r\n                  variant=\"contained\" \r\n                  color=\"primary\" \r\n                  md={3}\r\n                  onClick={async ()=>{\r\n                    // console.log(\"YO!\");\r\n                    // console.log(quotation);\r\n                    dispatch(approveQuotation(quotation.id));\r\n                    // props.fetchData();\r\n                  }}\r\n                >\r\n                  Approve Quotation\r\n                </Button>\r\n              </>\r\n            :\r\n              <>\r\n              <Grid item xs={12} md={6}>\r\n                <Button \r\n                  fullWidth\r\n                  disabled={quotation.approval_status !== \"approved\"}\r\n                  variant=\"contained\" \r\n                  color=\"primary\" \r\n                  md={3}\r\n                  onClick={()=>{\r\n                    dispatch(archiveQuotation(quotation.id))\r\n                    .then((response)=>{\r\n                      dispatch(createJobOrder(currentQuotation,currentUserProfile))\r\n                    })\r\n                    .catch((error)=>{\r\n\r\n                    })\r\n                  }}\r\n                >\r\n                  CREATE JOB ORDER\r\n                </Button>\r\n              </Grid>\r\n              <Grid item xs={12} md={6}>\r\n                <Button \r\n                  fullWidth\r\n                  variant=\"outlined\" \r\n                  color=\"primary\"\r\n                  onClick={\r\n                    ()=>{\r\n                      navigate('/app/quote/detail',{state: {id: quotation.id}})\r\n                    }\r\n                  }\r\n                >\r\n                  REVIEW PROJECT SPECS\r\n                </Button>\r\n              </Grid>\r\n            </>\r\n          }\r\n        </Grid>\r\n      </CardContent>\r\n    </Card>\r\n  );\r\n};\r\n\r\nQuotationCardComputed.propTypes = {\r\n  className: PropTypes.string,\r\n  quotation: PropTypes.object.isRequired\r\n};\r\n\r\nexport default QuotationCardComputed;\r\n","import React, {useState,useEffect} from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport clsx from 'clsx';\r\nimport {\r\n  Box,\r\n  Card,\r\n  CardContent,\r\n  Divider,\r\n  Grid,\r\n  Typography,\r\n  Button,\r\n  makeStyles\r\n} from '@material-ui/core';\r\nimport GetAppIcon from '@material-ui/icons/GetApp';\r\nimport { AddBoxOutlined } from '@material-ui/icons';\r\nimport { useDispatch, useSelector } from \"react-redux\";\r\n// import { register } from \"../../_actions/auth\";\r\nimport { getComputedQuotations } from \"../../../_actions/quotation\";\r\nimport { getProfile } from \"../../../_actions/auth\";\r\nimport { Link as RouterLink, useNavigate } from 'react-router-dom';\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n  root: {\r\n    display: 'flex',\r\n    flexDirection: 'column'\r\n  },\r\n  statsItem: {\r\n    alignItems: 'center',\r\n    display: 'flex'\r\n  },\r\n  statsIcon: {\r\n    marginRight: theme.spacing(1)\r\n  }\r\n}));\r\n\r\nconst ProductCard = ({ className, product, ...rest }) => {\r\n  const classes = useStyles();\r\n\r\n  return (\r\n    <Card\r\n      className={clsx(classes.root, className)}\r\n      {...rest}\r\n    >\r\n      <CardContent>\r\n        <Box\r\n          display=\"flex\"\r\n          flexDirection=\"column\"\r\n          mb={3}\r\n        >\r\n          <Grid\r\n          container\r\n          justify=\"space-between\"\r\n          >\r\n            <Typography\r\n            align=\"left\"\r\n            color=\"textPrimary\"\r\n            gutterBottom\r\n            variant=\"h4\"\r\n            >\r\n              {product.orderID}\r\n            </Typography>\r\n            <Typography\r\n              style={{color: 'brown'}}\r\n              variant=\"subtitle2\"\r\n              align=\"bottom\"\r\n            >\r\n              STATUS: {product.status}\r\n            </Typography>\r\n          </Grid>\r\n        </Box>\r\n        <Box\r\n          display=\"flex\"\r\n          flexDirection=\"column\"\r\n          mb={3}\r\n        >\r\n          <Grid\r\n          container\r\n          justify=\"space-between\"\r\n          spacing={2}\r\n          >\r\n            <Grid\r\n            item\r\n            justify=\"space-between\"\r\n            spacing={2}\r\n            >\r\n              <Typography\r\n              align=\"left\"\r\n              color=\"textPrimary\"\r\n              variant=\"body1\"\r\n              >\r\n                Final Total Costs (w/ Markup)\r\n              </Typography>\r\n              <Typography\r\n              align=\"left\"\r\n              color=\"textPrimary\"\r\n              variant=\"body1\"\r\n              >\r\n                Final Unit Costs (w/ Markup)\r\n              </Typography>\r\n            </Grid>\r\n            <Grid\r\n            item\r\n            justify=\"space-between\"\r\n            spacing={2}\r\n            >\r\n              <Typography\r\n                color=\"textSecondary\"\r\n                variant=\"subtitle2\"\r\n              >\r\n                {product.orderPrice}\r\n              </Typography>\r\n              <Typography\r\n                color=\"textSecondary\"\r\n                variant=\"subtitle2\"\r\n              >\r\n                {product.unitCost}\r\n              </Typography>\r\n            </Grid>\r\n          </Grid>\r\n          <Divider />\r\n          <Typography\r\n            color=\"textSecondary\"\r\n            variant=\"subtitle2\"\r\n            align=\"right\"\r\n          >\r\n            Total: {product.totalPrice}\r\n          </Typography>\r\n        </Box>\r\n        <Box>\r\n          <Button variant=\"contained\" color=\"primary\" style = {{marginRight: 8}} md={3}>CONTACT SUPPORT</Button>\r\n          <Button variant=\"outlined\" color=\"primary\">VIEW ORDER</Button>\r\n        </Box>\r\n      </CardContent>\r\n    </Card>\r\n  );\r\n};\r\n\r\nProductCard.propTypes = {\r\n  className: PropTypes.string,\r\n  product: PropTypes.object.isRequired\r\n};\r\n\r\nexport default ProductCard;\r\n","import React from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport clsx from 'clsx';\r\nimport {\r\n  Box,\r\n  Card,\r\n  CardContent,\r\n  Divider,\r\n  Grid,\r\n  Typography,\r\n  Button,\r\n  makeStyles\r\n} from '@material-ui/core';\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n  root: {\r\n    display: 'flex',\r\n    flexDirection: 'column'\r\n  },\r\n  statsItem: {\r\n    alignItems: 'center',\r\n    display: 'flex'\r\n  },\r\n  statsIcon: {\r\n    marginRight: theme.spacing(1)\r\n  }\r\n}));\r\n\r\nconst ProductCard = ({ className, product, ...rest }) => {\r\n  const classes = useStyles();\r\n\r\n  return (\r\n    <Card\r\n      className={clsx(classes.root, className)}\r\n      {...rest}\r\n    >\r\n      <CardContent>\r\n        <Box\r\n          display=\"flex\"\r\n          flexDirection=\"column\"\r\n          mb={3}\r\n        >\r\n          <Grid\r\n          container\r\n          justify=\"space-between\"\r\n          >\r\n            <Typography\r\n            align=\"left\"\r\n            color=\"textPrimary\"\r\n            gutterBottom\r\n            variant=\"h4\"\r\n            >\r\n              {product.orderID}\r\n            </Typography>\r\n          </Grid>\r\n        </Box>\r\n        <Box\r\n          display=\"flex\"\r\n          flexDirection=\"column\"\r\n          mb={3}\r\n        >\r\n          <Grid\r\n          container\r\n          justify=\"space-between\"\r\n          spacing={2}\r\n          >\r\n            <Grid\r\n            item\r\n            justify=\"space-between\"\r\n            spacing={2}\r\n            >\r\n              <Typography\r\n              align=\"left\"\r\n              color=\"textPrimary\"\r\n              variant=\"body1\"\r\n              >\r\n                Final Total Costs (w/ Markup)\r\n              </Typography>\r\n              <Typography\r\n              align=\"left\"\r\n              color=\"textPrimary\"\r\n              variant=\"body1\"\r\n              >\r\n                Final Unit Costs (w/ Markup)\r\n              </Typography>\r\n            </Grid>\r\n            <Grid\r\n            item\r\n            justify=\"space-between\"\r\n            spacing={2}\r\n            >\r\n              <Typography\r\n                color=\"textSecondary\"\r\n                variant=\"subtitle2\"\r\n              >\r\n                {product.orderPrice}\r\n              </Typography>\r\n              <Typography\r\n                color=\"textSecondary\"\r\n                variant=\"subtitle2\"\r\n              >\r\n                {product.unitCost}\r\n              </Typography>\r\n            </Grid>\r\n          </Grid>\r\n          <Divider />\r\n          <Typography\r\n            color=\"textSecondary\"\r\n            variant=\"subtitle2\"\r\n            align=\"right\"\r\n          >\r\n            Total: {product.totalPrice}\r\n          </Typography>\r\n        </Box>\r\n        <Box>\r\n          <Button variant=\"contained\" style = {{marginRight: 8}} color=\"primary\" md={3}>CONTACT SUPPORT</Button>\r\n          <Button variant=\"outlined\" color=\"primary\">VIEW ORDER</Button>\r\n        </Box>\r\n      </CardContent>\r\n    </Card>\r\n  );\r\n};\r\n\r\nProductCard.propTypes = {\r\n  className: PropTypes.string,\r\n  product: PropTypes.object.isRequired\r\n};\r\n\r\nexport default ProductCard;\r\n","import React from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport clsx from 'clsx';\r\nimport {\r\n  Box,\r\n  Card,\r\n  CardContent,\r\n  Divider,\r\n  Grid,\r\n  Typography,\r\n  Button,\r\n  makeStyles\r\n} from '@material-ui/core';\r\nimport GetAppIcon from '@material-ui/icons/GetApp';\r\nimport { AddBoxOutlined } from '@material-ui/icons';\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n  root: {\r\n    display: 'flex',\r\n    flexDirection: 'column'\r\n  },\r\n  statsItem: {\r\n    alignItems: 'center',\r\n    display: 'flex'\r\n  },\r\n  statsIcon: {\r\n    marginRight: theme.spacing(1)\r\n  }\r\n}));\r\n\r\nconst ProductCard = ({ className, product, ...rest }) => {\r\n  const classes = useStyles();\r\n\r\n  return (\r\n    <Card\r\n      className={clsx(classes.root, className)}\r\n      {...rest}\r\n    >\r\n      <CardContent>\r\n        <Box\r\n          display=\"flex\"\r\n          flexDirection=\"column\"\r\n          mb={3}\r\n        >\r\n          <Grid\r\n          container\r\n          justify=\"space-between\"\r\n          >\r\n            <Typography\r\n            align=\"left\"\r\n            color=\"textPrimary\"\r\n            gutterBottom\r\n            variant=\"h4\"\r\n            >\r\n              {product.orderID}\r\n            </Typography>\r\n            <Typography\r\n              style={{color: 'brown'}}\r\n              variant=\"subtitle2\"\r\n              align=\"bottom\"\r\n            >\r\n              STATUS: {product.status}\r\n            </Typography>\r\n          </Grid>\r\n        </Box>\r\n        <Box\r\n          display=\"flex\"\r\n          flexDirection=\"column\"\r\n          mb={3}\r\n        >\r\n          <Grid\r\n          container\r\n          justify=\"space-between\"\r\n          >\r\n          <Typography\r\n            align=\"left\"\r\n            color=\"textPrimary\"\r\n            gutterBottom\r\n            variant=\"h4\"\r\n            color=\"textSecondary\"\r\n            >\r\n              {product.type}\r\n            </Typography>\r\n          </Grid>\r\n          <Grid\r\n          container\r\n          justify=\"space-between\"\r\n          spacing={2}\r\n          >\r\n            \r\n            <Grid\r\n            item\r\n            justify=\"space-between\"\r\n            spacing={2}\r\n            >\r\n              <Typography\r\n              align=\"left\"\r\n              color=\"textPrimary\"\r\n              variant=\"body1\"\r\n              >\r\n                Quantity: {product.quantity} copies\r\n              </Typography>\r\n              <Typography\r\n              align=\"left\"\r\n              color=\"textPrimary\"\r\n              variant=\"body1\"\r\n              >\r\n                Total Pages: {product.quantity} pages\r\n              </Typography>\r\n            </Grid>\r\n            <Grid\r\n            item\r\n            justify=\"space-between\"\r\n            spacing={2}\r\n            >\r\n              <Typography\r\n                color=\"textPrimary\"\r\n                variant=\"body1\"\r\n              >\r\n                Length: {product.length} inches &nbsp; Width: {product.width} inches\r\n              </Typography>\r\n              <Typography\r\n                color=\"textPrimary\"\r\n                variant=\"body1\"\r\n              >\r\n                Number of Colors: {product.numberColors}\r\n              </Typography>\r\n            </Grid>\r\n          </Grid>\r\n        </Box>\r\n        <Box>\r\n          <Button variant=\"contained\" color=\"primary\" style = {{ marginRight: 8}} md={3}>CONTACT SUPPORT</Button>\r\n          <Button variant=\"outlined\" color=\"primary\">VIEW ORDER</Button>\r\n        </Box>\r\n      </CardContent>\r\n    </Card>\r\n  );\r\n};\r\n\r\nProductCard.propTypes = {\r\n  className: PropTypes.string,\r\n  product: PropTypes.object.isRequired\r\n};\r\n\r\nexport default ProductCard;\r\n","import { v4 as uuid } from 'uuid';\r\n\r\nexport default [\r\n  {\r\n    id: uuid(),\r\n    totalPrice: 'P3000.00',\r\n    orderID: '#29JKFSPSE',\r\n    orderPrice: 'P3000.00',\r\n    unitCost: 'P1000.00',\r\n    status: 'IN PRODUCTION',\r\n    customerName: 'Juan Aquino',\r\n    customerAddress: '1345 Quartz Street, Loyola Grand Villas, Loyola Heights, Quezon City',\r\n    type: 'Book',\r\n    quantity: '500',\r\n    totalPages: '250',\r\n    length: '8.5',\r\n    width: '11',\r\n    numberColors: '4 colors (CMYK)',\r\n\r\n  },\r\n  {\r\n    id: uuid(),\r\n    totalPrice: 'P3000.00',\r\n    orderID: '#29JKFSPSE',\r\n    orderPrice: 'P3000.00',\r\n    unitCost: 'P1000.00',\r\n    status: 'IN PRODUCTION',\r\n    customerName: 'Juan Aquino',\r\n    customerAddress: '1345 Quartz Street, Loyola Grand Villas, Loyola Heights, Quezon City',\r\n    type: 'Book',\r\n    quantity: '500',\r\n    totalPages: '250',\r\n    length: '8.5',\r\n    width: '11',\r\n    numberColors: '4 colors (CMYK)',\r\n  },\r\n  {\r\n    id: uuid(),\r\n    totalPrice: 'P3000.00',\r\n    orderID: '#29JKFSPSE',\r\n    orderPrice: 'P3000.00',\r\n    unitCost: 'P1000.00',\r\n    status: 'IN PRODUCTION',\r\n    customerName: 'Juan Aquino',\r\n    customerAddress: '1345 Quartz Street, Loyola Grand Villas, Loyola Heights, Quezon City',\r\n    type: 'Book',\r\n    quantity: '500',\r\n    totalPages: '250',\r\n    length: '8.5',\r\n    width: '11',\r\n    numberColors: '4 colors (CMYK)',\r\n  },\r\n];\r\n","import React from \"react\";\r\n\r\nexport const useInterval = (callback, delay) => {\r\n    const savedCallback = React.useRef();\r\n  \r\n    React.useEffect(() => {\r\n      savedCallback.current = callback;\r\n    }, [callback]);\r\n  \r\n    React.useEffect(() => {\r\n      function tick() {\r\n        savedCallback.current();\r\n      }\r\n      if (delay !== null) {\r\n        let id = setInterval(tick, delay);\r\n        return () => clearInterval(id);\r\n      }\r\n    }, [delay]);\r\n  };\r\n  ","import React, { useState, useEffect } from 'react';\r\nimport {useSelector, useDispatch } from 'react-redux';\r\nimport {\r\n  Box,\r\n  Container,\r\n  Grid,\r\n  makeStyles,\r\n  Typography\r\n} from '@material-ui/core';\r\nimport Page from 'src/components/Page';\r\nimport ProductCard from './ProductCard';\r\nimport ProductCardDelivery from './ProductCardDelivery';\r\nimport ProductCardProd from './ProductCardProd';\r\nimport QuotationCardComputed from '../../quotations/QuotationCardComputed';\r\nimport JobOrderCard from '../../jobOrders/JobOrderCard';\r\nimport data from './data';\r\n\r\nimport { getComputedQuotations, updateQuotation, getQuotationById, approveQuotation, getInProgressQuotations } from \"../../../_actions/quotation\";\r\nimport { getInProductionJobOrders, getPendingJobOrders } from '../../../_actions/jobOrder';\r\nimport { useInterval } from \"../../../_helpers/hooks\"\r\nimport { limitVisibility } from \"../../../_helpers/\";\r\nimport { getProfile } from \"../../../_actions/auth\";\r\nimport { Link as RouterLink, useNavigate } from 'react-router-dom';\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n  root: {\r\n    backgroundColor: theme.palette.background.dark,\r\n    minHeight: '100%',\r\n    paddingBottom: theme.spacing(3),\r\n    paddingTop: theme.spacing(3)\r\n  },\r\n  JobOrderCard: {\r\n    height: '100%'\r\n  }\r\n}));\r\n// TODO: Implement \"ViewOrder.js\" page\r\n// This is basically a simplified and non-interactable version of the Quote Review detail page\r\n\r\nconst ProductList = () => {\r\n  const classes = useStyles();\r\n  const [products] = useState(data);\r\n\r\n  const dispatch = useDispatch();\r\n\r\n  const {profile : currentUserProfile} = useSelector(state=>state.auth)\r\n  const { inProgressQuotations } = useSelector (state=>state.quotation);\r\n  const { computedQuotations } = useSelector(state=>state.quotation);\r\n  const { pendingJobOrders } = useSelector(state=>state.jobOrder)\r\n  const { inProgressJobOrders } = useSelector(state=>state.jobOrder);\r\n  const { outForDeliveryJobOrders } = useSelector(state=>state.jobOrder)\r\n  const { currentQuotation } = useSelector(state=>state.quotation);\r\n\r\n  const [initialFetchDataFinished, setInitialFetchDataFinished]  = useState(false);\r\n  \r\n  const isUserClient = () => {\r\n    switch(currentUserProfile.job_position)\r\n    {\r\n      case \"\":\r\n        return true;\r\n      case null:\r\n        return true;\r\n      default:\r\n        return false;\r\n    }\r\n  }\r\n\r\n  function fetchData () {\r\n    dispatch(getProfile())\r\n    switch(currentUserProfile.job_position)\r\n    {\r\n      case 'O':\r\n        dispatch(getPendingJobOrders())\r\n        dispatch(getInProductionJobOrders())\r\n        break;\r\n      case 'AM':\r\n        dispatch(getPendingJobOrders())\r\n        dispatch(getInProductionJobOrders())\r\n        break;\r\n      case 'P':\r\n        break;\r\n      case 'D':\r\n        break;\r\n      default:\r\n        dispatch(getInProgressQuotations(currentUserProfile.id))\r\n        dispatch(getComputedQuotations(currentUserProfile.id))\r\n        dispatch(getInProductionJobOrders(currentUserProfile.id))\r\n    }\r\n  }\r\n\r\n  useEffect(()=>{\r\n    async function initialFetchData () {\r\n      await dispatch(getProfile())\r\n      .then((response)=>{\r\n        fetchData()\r\n        setInitialFetchDataFinished(true);\r\n      })\r\n      .catch((error)=>{\r\n        console.log(error);\r\n      })\r\n    }\r\n    initialFetchData();\r\n  },[])\r\n\r\n  useInterval(()=>{\r\n    async function reFetchData (){\r\n      // console.log(currentUserProfile)\r\n      try\r\n      {\r\n        await fetchData()\r\n      }\r\n      catch(error)\r\n      {\r\n        console.log(error)\r\n      }\r\n      // console.log(computedQuotations)\r\n    }\r\n    reFetchData()\r\n  },2000);\r\n\r\n\r\n  return (\r\n    <Page\r\n      className={classes.root}\r\n      title=\"Order Tracking\"\r\n    >\r\n      <Container maxWidth={false}>\r\n        <Typography\r\n          className={classes.name}\r\n          color=\"textPrimary\"\r\n          variant=\"h2\"\r\n        >\r\n          Order Tracking\r\n        </Typography>\r\n        <Box mt={2}>\r\n        <Grid container spacing={3}>\r\n        {initialFetchDataFinished && currentUserProfile && \r\n          limitVisibility(\r\n          <Grid item xs={12} md={4}>\r\n            <Typography\r\n              className={classes.name}\r\n              color=\"textSecondary\"\r\n              variant=\"h5\"\r\n            >\r\n              Awaiting Computation\r\n            </Typography>\r\n            <Box mt={2}>\r\n              {inProgressQuotations && inProgressQuotations.map((quotation) => (\r\n                <Grid\r\n                  item\r\n                  key={quotation.id}\r\n                >\r\n                  <Box mt={2}>\r\n                  <QuotationCardComputed\r\n                    className={classes.productCard}\r\n                    quotation={quotation}\r\n                  />\r\n                  </Box>\r\n                </Grid>\r\n              ))}\r\n            </Box>\r\n          </Grid>,\r\n          ['C'], \r\n          currentUserProfile.job_position\r\n          )}\r\n          {initialFetchDataFinished && currentUserProfile && computedQuotations &&\r\n          limitVisibility(\r\n          <Grid item xs={12} md={4}>\r\n            <Typography\r\n              className={classes.name}\r\n              color=\"textSecondary\"\r\n              variant=\"h5\"\r\n            >\r\n              Pending Approval\r\n            </Typography>\r\n            <Box mt={2}>\r\n              {computedQuotations && computedQuotations.map((quotation) => (\r\n                <Grid\r\n                  item\r\n                  key={quotation.id}\r\n                >\r\n                  <Box mt={2}>\r\n                  <QuotationCardComputed\r\n                    className={classes.productCard}\r\n                    quotation={quotation}\r\n                  />\r\n                  </Box>\r\n                </Grid>\r\n              ))}\r\n            </Box>\r\n          </Grid>,\r\n          ['C'], \r\n          currentUserProfile.job_position\r\n          )}\r\n          {initialFetchDataFinished && currentUserProfile && pendingJobOrders &&\r\n          limitVisibility(\r\n          <Grid item xs={12} md={4}>\r\n            <Typography\r\n              className={classes.name}\r\n              color=\"textSecondary\"\r\n              variant=\"h5\"\r\n            >\r\n              Pending Job Orders\r\n            </Typography>\r\n            <Box mt={2}>\r\n              {pendingJobOrders && pendingJobOrders.map((jobOrder) => (\r\n                <Grid\r\n                  item\r\n                  key={jobOrder.id}\r\n                >\r\n                  <Box mt={2}>\r\n                    <JobOrderCard\r\n                      className={classes.JobOrderCard}\r\n                      jobOrder={jobOrder}\r\n                      currentUserProfile={currentUserProfile}\r\n                    />\r\n                  </Box>\r\n                </Grid>\r\n              ))}\r\n            </Box>\r\n          </Grid>,\r\n          ['O','AM',],\r\n          currentUserProfile.job_position,\r\n          )}\r\n          {initialFetchDataFinished && currentUserProfile && inProgressJobOrders && \r\n          limitVisibility(\r\n            <Grid item xs={12} md={4}>\r\n              <Typography\r\n                className={classes.name}\r\n                color=\"textSecondary\"\r\n                variant=\"h5\"\r\n              >\r\n                In Production\r\n              </Typography>\r\n              <Box mt={2}>\r\n                {inProgressJobOrders && inProgressJobOrders.map((jobOrder) => (\r\n                  <Grid\r\n                    item\r\n                    key={jobOrder.id}\r\n                  >\r\n                    <Box mt={2}>\r\n                      <JobOrderCard\r\n                        jobOrder={jobOrder}\r\n                        currentUserProfile={currentUserProfile}\r\n                      />\r\n                    </Box>\r\n                  </Grid>\r\n                ))}\r\n              </Box>\r\n            </Grid>\r\n            ,\r\n            ['D'],\r\n          )}\r\n          \r\n            <Grid item xs={12} md={4}>\r\n              <Typography\r\n                className={classes.name}\r\n                color=\"textSecondary\"\r\n                variant=\"h5\"\r\n              >\r\n                Out for Delivery\r\n              </Typography>\r\n                <Box mt={2}>\r\n                  {initialFetchDataFinished && outForDeliveryJobOrders && outForDeliveryJobOrders.map((jobOrder) => (\r\n                    <Grid\r\n                      item\r\n                      key={jobOrder.id}\r\n                    >\r\n                      <Box mt={2}>\r\n                        <JobOrderCard\r\n                          jobOrder={jobOrder}\r\n                          currentUserProfile={currentUserProfile}\r\n                        />\r\n                      </Box>\r\n                    </Grid>\r\n                  ))}\r\n                </Box>\r\n              </Grid>\r\n            </Grid>\r\n          </Box>\r\n      </Container>\r\n    </Page>\r\n  );\r\n};\r\n\r\nexport default ProductList;\r\n","import React from 'react';\r\nimport { Link as RouterLink, useNavigate } from 'react-router-dom';\r\nimport * as Yup from 'yup';\r\nimport { Formik } from 'formik';\r\nimport {\r\n  Box,\r\n  Button,\r\n  Checkbox,\r\n  Container,\r\n  FormHelperText,\r\n  Link,\r\n  TextField,\r\n  Typography,\r\n  makeStyles\r\n} from '@material-ui/core';\r\nimport Page from 'src/components/Page';\r\nimport { ToastContainer, toast } from 'react-toastify';\r\n\r\nimport { useDispatch, useSelector } from \"react-redux\";\r\nimport { register } from \"../../_actions/auth\";\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n  root: {\r\n    backgroundColor: theme.palette.background.dark,\r\n    height: '100%',\r\n    paddingBottom: theme.spacing(3),\r\n    paddingTop: theme.spacing(3)\r\n  }\r\n}));\r\n\r\nconst RegisterView = () => {\r\n  const classes = useStyles();\r\n  const navigate = useNavigate();\r\n  // const { message } = useSelector(state => state.message);\r\n  const dispatch = useDispatch();\r\n\r\n  return (\r\n    <Page\r\n      className={classes.root}\r\n      title=\"Register\"\r\n    >\r\n      <Box\r\n        display=\"flex\"\r\n        flexDirection=\"column\"\r\n        overflow=\"auto\"\r\n        height=\"100%\"\r\n      >\r\n        <Container \r\n          maxWidth=\"sm\"\r\n        >\r\n          <Formik\r\n            initialValues={{\r\n              username: '',\r\n              email: '',\r\n              first_name: '',\r\n              middle_name: '',\r\n              last_name: '',\r\n              password: '',\r\n              policy: false\r\n            }}\r\n            validationSchema={\r\n              Yup.object().shape({\r\n                username: Yup.string().required('Username is required'),\r\n                email: Yup.string().email('Must be a valid email').max(255).required('Email is required'),\r\n                first_name: Yup.string().max(255).required('First name is required'),\r\n                middle_name: Yup.string().max(255),\r\n                last_name: Yup.string().max(255).required('Last name is required'),\r\n                // TODO: Mimic Django password validation behavior\r\n                password: Yup.string()\r\n                          .max(255)\r\n                          .required('Password is required')\r\n                          .matches(\r\n                            /^(?=.*[A-Za-z])(?=.*\\d)(?=.*[@$!%*#?&])[A-Za-z\\d@$!%*#?&]{8,}$/,\r\n                            `Must contain: 8 characters, 1 uppercase, 1 lowercase, 1 number, and 1 special character.`\r\n                          ),\r\n                policy: Yup.boolean().oneOf([true], 'This field must be checked')\r\n              })\r\n            }\r\n            onSubmit={(values, actions) => {\r\n              // console.log(\"YO BOY!\");\r\n              dispatch(\r\n                register(values))\r\n                .then(()=>{\r\n                  navigate('/app/dashboard', { replace: true });\r\n                })\r\n                .catch((error)=>{\r\n                  actions.setSubmitting(false);\r\n                  toast.error(\"User with inputted credentials already exists.\");\r\n                });\r\n            }}\r\n          >\r\n            {({\r\n              errors,\r\n              handleBlur,\r\n              handleChange,\r\n              handleSubmit,\r\n              isSubmitting,\r\n              touched,\r\n              values\r\n            }) => (\r\n              <form \r\n                onSubmit={handleSubmit}\r\n              >\r\n                <Box mb={3}>\r\n                  <Typography\r\n                    color=\"textPrimary\"\r\n                    variant=\"h2\"\r\n                  >\r\n                    Create new account\r\n                  </Typography>\r\n                  <Typography\r\n                    color=\"textSecondary\"\r\n                    gutterBottom\r\n                    variant=\"body2\"\r\n                  >\r\n                    Enter all required fields below to create your account.\r\n                  </Typography>\r\n                </Box>\r\n                <TextField\r\n                  error={Boolean(touched.username && errors.username)}\r\n                  fullWidth\r\n                  helperText={touched.username && errors.username}\r\n                  label=\"Username\"\r\n                  margin=\"normal\"\r\n                  name=\"username\"\r\n                  onBlur={handleBlur}\r\n                  onChange={handleChange}\r\n                  value={values.username}\r\n                  variant=\"outlined\"\r\n                />\r\n                <TextField\r\n                  error={Boolean(touched.first_name && errors.first_name)}\r\n                  fullWidth\r\n                  helperText={touched.first_name && errors.first_name}\r\n                  label=\"First name\"\r\n                  margin=\"normal\"\r\n                  name=\"first_name\"\r\n                  onBlur={handleBlur}\r\n                  onChange={handleChange}\r\n                  value={values.first_name}\r\n                  variant=\"outlined\"\r\n                />\r\n                <TextField\r\n                  error={Boolean(touched.middle_name && errors.middle_name)}\r\n                  fullWidth\r\n                  helperText={touched.middle_name && errors.middle_name}\r\n                  label=\"Middle name\"\r\n                  margin=\"normal\"\r\n                  name=\"middle_name\"\r\n                  onBlur={handleBlur}\r\n                  onChange={handleChange}\r\n                  value={values.middle_name}\r\n                  variant=\"outlined\"\r\n                />\r\n                <TextField\r\n                  error={Boolean(touched.last_name && errors.last_name)}\r\n                  fullWidth\r\n                  helperText={touched.last_name && errors.last_name}\r\n                  label=\"Last name\"\r\n                  margin=\"normal\"\r\n                  name=\"last_name\"\r\n                  onBlur={handleBlur}\r\n                  onChange={handleChange}\r\n                  value={values.last_name}\r\n                  variant=\"outlined\"\r\n                />\r\n                <TextField\r\n                  error={Boolean(touched.email && errors.email)}\r\n                  fullWidth\r\n                  helperText={touched.email && errors.email}\r\n                  label=\"Email Address\"\r\n                  margin=\"normal\"\r\n                  name=\"email\"\r\n                  onBlur={handleBlur}\r\n                  onChange={handleChange}\r\n                  type=\"email\"\r\n                  value={values.email}\r\n                  variant=\"outlined\"\r\n                />\r\n                <TextField\r\n                  error={Boolean(touched.password && errors.password)}\r\n                  fullWidth\r\n                  helperText={touched.password && errors.password}\r\n                  label=\"Password\"\r\n                  margin=\"normal\"\r\n                  name=\"password\"\r\n                  onBlur={handleBlur}\r\n                  onChange={handleChange}\r\n                  type=\"password\"\r\n                  value={values.password}\r\n                  variant=\"outlined\"\r\n                />\r\n                <Box\r\n                  alignItems=\"center\"\r\n                  display=\"flex\"\r\n                  ml={-1}\r\n                >\r\n                  <Checkbox\r\n                    checked={values.policy}\r\n                    name=\"policy\"\r\n                    onChange={handleChange}\r\n                  />\r\n                  <Typography\r\n                    color=\"textSecondary\"\r\n                    variant=\"body1\"\r\n                  >\r\n                    I have read the\r\n                    {' '}\r\n                    <Link\r\n                      color=\"primary\"\r\n                      component={RouterLink}\r\n                      to=\"#\"\r\n                      underline=\"always\"\r\n                      variant=\"h6\"\r\n                    >\r\n                      Terms and Conditions\r\n                    </Link>\r\n                  </Typography>\r\n                </Box>\r\n                {Boolean(touched.policy && errors.policy) && (\r\n                  <FormHelperText error>\r\n                    {errors.policy}\r\n                  </FormHelperText>\r\n                )}\r\n                <Box my={2}>\r\n                  <Button\r\n                    color=\"primary\"\r\n                    disabled={isSubmitting}\r\n                    fullWidth\r\n                    size=\"large\"\r\n                    type=\"submit\"\r\n                    variant=\"contained\"\r\n                  >\r\n                    Sign up now\r\n                  </Button>\r\n                </Box>\r\n                <Typography\r\n                  color=\"textSecondary\"\r\n                  variant=\"body1\"\r\n                >\r\n                  Have an account?\r\n                  {' '}\r\n                  <Link\r\n                    component={RouterLink}\r\n                    to=\"/login\"\r\n                    variant=\"h6\"\r\n                  >\r\n                    Sign in\r\n                  </Link>\r\n                </Typography>\r\n              </form>\r\n            )}\r\n          </Formik>\r\n        </Container>\r\n      </Box>\r\n    </Page>\r\n  );\r\n};\r\n\r\nexport default RegisterView;\r\n","import React from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport clsx from 'clsx';\r\nimport moment from 'moment';\r\nimport {\r\n  Avatar,\r\n  Box,\r\n  Button,\r\n  Card,\r\n  CardActions,\r\n  CardContent,\r\n  Divider,\r\n  Typography,\r\n  makeStyles\r\n} from '@material-ui/core';\r\n\r\nconst user = {\r\n  avatar: '/static/images/avatars/avatar_6.png',\r\n  city: 'Los Angeles',\r\n  country: 'USA',\r\n  jobTitle: 'Senior Developer',\r\n  name: 'Katarina Smith',\r\n  timezone: 'GTM-7'\r\n};\r\n\r\nconst useStyles = makeStyles(() => ({\r\n  root: {},\r\n  avatar: {\r\n    height: 100,\r\n    width: 100\r\n  }\r\n}));\r\n\r\nconst Profile = ({ className, ...rest }) => {\r\n  const classes = useStyles();\r\n\r\n  return (\r\n    <Card\r\n      className={clsx(classes.root, className)}\r\n      {...rest}\r\n    >\r\n      <CardContent>\r\n        <Box\r\n          alignItems=\"center\"\r\n          display=\"flex\"\r\n          flexDirection=\"column\"\r\n        >\r\n          <Avatar\r\n            className={classes.avatar}\r\n            src={user.avatar}\r\n          />\r\n          <Typography\r\n            color=\"textPrimary\"\r\n            gutterBottom\r\n            variant=\"h3\"\r\n          >\r\n            {user.name}\r\n          </Typography>\r\n          <Typography\r\n            color=\"textSecondary\"\r\n            variant=\"body1\"\r\n          >\r\n            {`${user.city} ${user.country}`}\r\n          </Typography>\r\n          <Typography\r\n            className={classes.dateText}\r\n            color=\"textSecondary\"\r\n            variant=\"body1\"\r\n          >\r\n            {`${moment().format('hh:mm A')} ${user.timezone}`}\r\n          </Typography>\r\n        </Box>\r\n      </CardContent>\r\n      <Divider />\r\n      <CardActions>\r\n        <Button\r\n          color=\"primary\"\r\n          fullWidth\r\n          variant=\"text\"\r\n        >\r\n          Upload picture\r\n        </Button>\r\n      </CardActions>\r\n    </Card>\r\n  );\r\n};\r\n\r\nProfile.propTypes = {\r\n  className: PropTypes.string\r\n};\r\n\r\nexport default Profile;\r\n","import React, { useState } from 'react';\r\nimport clsx from 'clsx';\r\nimport PropTypes from 'prop-types';\r\nimport {\r\n  Box,\r\n  Button,\r\n  Card,\r\n  CardContent,\r\n  CardHeader,\r\n  Divider,\r\n  Grid,\r\n  TextField,\r\n  makeStyles\r\n} from '@material-ui/core';\r\n\r\nconst useStyles = makeStyles(() => ({\r\n  root: {}\r\n}));\r\n\r\nconst ProfileDetails = ({ className, ...rest }) => {\r\n  const classes = useStyles();\r\n  const [values, setValues] = useState({\r\n    firstName: 'Katarina',\r\n    lastName: 'Smith',\r\n    email: 'demo@devias.io',\r\n    phone: '',\r\n    address: ''\r\n  });\r\n\r\n  const handleChange = (event) => {\r\n    setValues({\r\n      ...values,\r\n      [event.target.name]: event.target.value\r\n    });\r\n  };\r\n\r\n  return (\r\n    <form\r\n      autoComplete=\"off\"\r\n      noValidate\r\n      className={clsx(classes.root, className)}\r\n      {...rest}\r\n    >\r\n      <Card>\r\n        <CardHeader\r\n          subheader=\"The information can be edited\"\r\n          title=\"Profile\"\r\n        />\r\n        <Divider />\r\n        <CardContent>\r\n          <Grid\r\n            container\r\n            spacing={3}\r\n          >\r\n            <Grid\r\n              item\r\n              md={6}\r\n              xs={12}\r\n            >\r\n              <TextField\r\n                fullWidth\r\n                helperText=\"Please specify the first name\"\r\n                label=\"First name\"\r\n                name=\"firstName\"\r\n                onChange={handleChange}\r\n                required\r\n                value={values.firstName}\r\n                variant=\"outlined\"\r\n              />\r\n            </Grid>\r\n            <Grid\r\n              item\r\n              md={6}\r\n              xs={12}\r\n            >\r\n              <TextField\r\n                fullWidth\r\n                label=\"Last name\"\r\n                name=\"lastName\"\r\n                onChange={handleChange}\r\n                required\r\n                value={values.lastName}\r\n                variant=\"outlined\"\r\n              />\r\n            </Grid>\r\n            <Grid\r\n              item\r\n              md={6}\r\n              xs={12}\r\n            >\r\n              <TextField\r\n                fullWidth\r\n                label=\"Email Address\"\r\n                name=\"email\"\r\n                onChange={handleChange}\r\n                required\r\n                value={values.email}\r\n                variant=\"outlined\"\r\n              />\r\n            </Grid>\r\n            <Grid\r\n              item\r\n              md={6}\r\n              xs={12}\r\n            >\r\n              <TextField\r\n                fullWidth\r\n                label=\"Phone Number\"\r\n                name=\"phone\"\r\n                onChange={handleChange}\r\n                type=\"number\"\r\n                value={values.phone}\r\n                variant=\"outlined\"\r\n              />\r\n            </Grid>\r\n            <Grid\r\n              item\r\n              md={12}\r\n              xs={12}\r\n            >\r\n              <TextField\r\n                fullWidth\r\n                label=\"Address\"\r\n                name=\"adress\"\r\n                onChange={handleChange}\r\n                required\r\n                value={values.address}\r\n                variant=\"outlined\"\r\n              />\r\n            </Grid>\r\n          </Grid>\r\n        </CardContent>\r\n        <Divider />\r\n        <Box\r\n          display=\"flex\"\r\n          justifyContent=\"flex-end\"\r\n          p={2}\r\n        >\r\n          <Button\r\n            color=\"primary\"\r\n            variant=\"contained\"\r\n          >\r\n            Save details\r\n          </Button>\r\n        </Box>\r\n      </Card>\r\n    </form>\r\n  );\r\n};\r\n\r\nProfileDetails.propTypes = {\r\n  className: PropTypes.string\r\n};\r\n\r\nexport default ProfileDetails;\r\n","import React, { useState } from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport clsx from 'clsx';\r\nimport {\r\n  Box,\r\n  Button,\r\n  Card,\r\n  CardContent,\r\n  CardHeader,\r\n  Divider,\r\n  TextField,\r\n  makeStyles\r\n} from '@material-ui/core';\r\n\r\nconst useStyles = makeStyles(({\r\n  root: {}\r\n}));\r\n\r\nconst Password = ({ className, ...rest }) => {\r\n  const classes = useStyles();\r\n  const [values, setValues] = useState({\r\n    password: '',\r\n    confirm: ''\r\n  });\r\n\r\n  const handleChange = (event) => {\r\n    setValues({\r\n      ...values,\r\n      [event.target.name]: event.target.value\r\n    });\r\n  };\r\n\r\n  return (\r\n    <form\r\n      className={clsx(classes.root, className)}\r\n      {...rest}\r\n    >\r\n      <Card>\r\n        <CardHeader\r\n          subheader=\"Update password\"\r\n          title=\"Password\"\r\n        />\r\n        <Divider />\r\n        <CardContent>\r\n          <TextField\r\n            fullWidth\r\n            label=\"Password\"\r\n            margin=\"normal\"\r\n            name=\"password\"\r\n            onChange={handleChange}\r\n            type=\"password\"\r\n            value={values.password}\r\n            variant=\"outlined\"\r\n          />\r\n          <TextField\r\n            fullWidth\r\n            label=\"Confirm password\"\r\n            margin=\"normal\"\r\n            name=\"confirm\"\r\n            onChange={handleChange}\r\n            type=\"password\"\r\n            value={values.confirm}\r\n            variant=\"outlined\"\r\n          />\r\n        </CardContent>\r\n        <Divider />\r\n        <Box\r\n          display=\"flex\"\r\n          justifyContent=\"flex-end\"\r\n          p={2}\r\n        >\r\n          <Button\r\n            color=\"primary\"\r\n            variant=\"contained\"\r\n          >\r\n            Update Password\r\n          </Button>\r\n        </Box>\r\n      </Card>\r\n    </form>\r\n  );\r\n};\r\n\r\nPassword.propTypes = {\r\n  className: PropTypes.string\r\n};\r\n\r\nexport default Password;\r\n","import React from 'react';\r\nimport {\r\n  Box,\r\n  Container,\r\n  Grid,\r\n  makeStyles\r\n} from '@material-ui/core';\r\nimport Page from 'src/components/Page';\r\nimport Profile from './Profile';\r\nimport ProfileDetails from './ProfileDetails';\r\nimport Password from './Password';\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n  root: {\r\n    backgroundColor: theme.palette.background.dark,\r\n    minHeight: '100%',\r\n    paddingBottom: theme.spacing(3),\r\n    paddingTop: theme.spacing(3)\r\n  }\r\n}));\r\n\r\nconst SettingsView = () => {\r\n  const classes = useStyles();\r\n\r\n  return (\r\n    <Page\r\n      className={classes.root}\r\n      title=\"Settings\"\r\n    >\r\n      <Container maxWidth=\"lg\">\r\n        <Grid\r\n          container\r\n          spacing={3}\r\n        >\r\n          <Grid\r\n            item\r\n            lg={4}\r\n            md={6}\r\n            xs={12}\r\n          >\r\n            <Profile />\r\n          </Grid>\r\n          <Grid\r\n            item\r\n            lg={8}\r\n            md={6}\r\n            xs={12}\r\n          >\r\n            <ProfileDetails />\r\n          </Grid>\r\n        </Grid>\r\n        <Box mt={3}>\r\n          <Password />\r\n        </Box>\r\n      </Container>\r\n    </Page>\r\n  );\r\n};\r\n\r\nexport default SettingsView;\r\n","import React from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport clsx from 'clsx';\r\nimport {\r\n  Box,\r\n  Card,\r\n  CardContent,\r\n  Divider,\r\n  Grid,\r\n  Typography,\r\n  Button,\r\n  makeStyles\r\n} from '@material-ui/core';\r\nimport GetAppIcon from '@material-ui/icons/GetApp';\r\nimport { AddBoxOutlined } from '@material-ui/icons';\r\nimport { Link as RouterLink, useNavigate } from 'react-router-dom';\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n  root: {\r\n    display: 'flex',\r\n    flexDirection: 'column'\r\n  },\r\n  statsItem: {\r\n    alignItems: 'center',\r\n    display: 'flex'\r\n  },\r\n  statsIcon: {\r\n    marginRight: theme.spacing(1)\r\n  }\r\n}));\r\n\r\nconst QuotationCard = ({ className, quotation, ...rest }) => {\r\n  const classes = useStyles();\r\n  const navigate = useNavigate();\r\n  const getApprovalStatus = () => {\r\n    switch(quotation.approval_status)\r\n    {\r\n      case \"in_progress\":\r\n        return \"In Progress\";\r\n      case \"approved\":\r\n        return \"Approved\";\r\n      case \"not_approved\":\r\n        return \"Not Approved\";\r\n      case \"computed\":\r\n        return \"Computed\";\r\n      default:\r\n        return \"Unknown\";\r\n    }\r\n  }\r\n\r\n  return (\r\n    <Card\r\n      className={clsx(classes.root, className)}\r\n      {...rest}\r\n    >\r\n      <CardContent>\r\n        <Box \r\n          display=\"flex\" \r\n          flexDirection=\"column\" \r\n          mb={1}\r\n        >\r\n          <Typography \r\n            align=\"left\" \r\n            color=\"textPrimary\" \r\n            gutterBottom \r\n            variant=\"h4\"\r\n          >\r\n            {quotation.project_name}\r\n          </Typography>\r\n          \r\n          <Grid \r\n            container \r\n            spacing={1}\r\n          >\r\n            <Grid \r\n              item \r\n              xs={6}\r\n            >\r\n              <Typography \r\n                align=\"left\" \r\n                color=\"textSecondary\" \r\n                gutterBottom \r\n                variant=\"h5\"\r\n              >\r\n                Client: \r\n              </Typography>\r\n              <Typography \r\n                align=\"left\" \r\n                color=\"textSecondary\" \r\n                gutterBottom \r\n                variant=\"body1\"\r\n              >\r\n                {quotation.client.full_name}\r\n              </Typography>\r\n            </Grid>\r\n\r\n            <Grid \r\n              item \r\n              xs={6}\r\n            >\r\n              <Typography \r\n                align=\"left\" \r\n                color=\"textSecondary\" \r\n                gutterBottom \r\n                variant=\"h5\"\r\n              >\r\n                Product Type:\r\n              </Typography>\r\n              <Typography \r\n                align=\"left\" \r\n                color=\"textSecondary\" \r\n                gutterBottom \r\n                variant=\"body1\"\r\n              >\r\n                {quotation.product_type.product_name}\r\n              </Typography>\r\n            </Grid>\r\n\r\n            <Grid item xs={6}>\r\n              <Typography \r\n                align=\"left\" \r\n                color=\"textSecondary\" \r\n                gutterBottom \r\n                variant=\"h5\"\r\n              >\r\n                Created:\r\n              </Typography>\r\n              <Typography \r\n                align=\"left\" \r\n                color=\"textSecondary\" \r\n                gutterBottom \r\n                variant=\"body1\"\r\n              >\r\n                {new Date(quotation.created_date).toLocaleDateString()}\r\n              </Typography>\r\n            </Grid>\r\n            \r\n            <Grid \r\n              item \r\n              xs={6}\r\n            >\r\n              <Typography \r\n                align=\"left\" \r\n                color=\"textSecondary\" \r\n                gutterBottom \r\n                variant=\"h5\"\r\n              >\r\n                Approval Status: \r\n              </Typography>\r\n              <Typography \r\n                align=\"left\" \r\n                color=\"textSecondary\" \r\n                gutterBottom \r\n                variant=\"body1\"\r\n              >\r\n                { getApprovalStatus() }\r\n              </Typography>\r\n            </Grid>\r\n          </Grid>\r\n        </Box>\r\n        <Box \r\n          display=\"flex\" \r\n          flexDirection=\"column\" \r\n          mb={3}\r\n        >\r\n          <Grid \r\n            container \r\n            spacing={1}\r\n          >\r\n            <Grid \r\n              item \r\n              xs={6}\r\n            >\r\n              <Typography \r\n                align=\"left\" \r\n                color=\"textSecondary\" \r\n                gutterBottom \r\n                variant=\"h5\"\r\n              >\r\n                Page Dimensions (Length x Width):\r\n              </Typography>\r\n              <Typography \r\n                align=\"left\" \r\n                color=\"textSecondary\" \r\n                gutterBottom \r\n                variant=\"body1\"\r\n              >\r\n                {(Number)(quotation.page_length).toFixed(2)}\" x {(Number)(quotation.page_width).toFixed(2)}\"\r\n              </Typography>\r\n            </Grid>\r\n\r\n            <Grid \r\n              item \r\n              xs={6}\r\n            >\r\n              <Typography \r\n                align=\"left\" \r\n                color=\"textSecondary\" \r\n                gutterBottom \r\n                variant=\"h5\"\r\n              >\r\n                Paper Types:\r\n              </Typography>\r\n              <Typography \r\n                align=\"left\" \r\n                color=\"textSecondary\" \r\n                gutterBottom \r\n                variant=\"body1\"\r\n              >\r\n                {quotation.paper_types}\r\n              </Typography>\r\n            </Grid>\r\n          </Grid>\r\n          <Grid \r\n            container \r\n            spacing={1}\r\n          >\r\n            <Grid \r\n              item \r\n              xs={6}\r\n            >\r\n              <Typography \r\n                align=\"left\" \r\n                color=\"textSecondary\" \r\n                gutterBottom \r\n                variant=\"h5\"\r\n              >\r\n                Lamination Types: \r\n              </Typography>\r\n              <Typography \r\n                align=\"left\" \r\n                color=\"textSecondary\" \r\n                gutterBottom \r\n                variant=\"body1\"\r\n              >\r\n                {quotation.lamination_types}\r\n              </Typography>\r\n            </Grid>\r\n            <Grid \r\n              item \r\n              xs={6}\r\n            >\r\n              <Typography \r\n                align=\"left\" \r\n                color=\"textSecondary\" \r\n                gutterBottom \r\n                variant=\"h5\"\r\n              >\r\n                Binding Types:\r\n              </Typography>\r\n              <Typography \r\n                align=\"left\" \r\n                color=\"textSecondary\" \r\n                gutterBottom \r\n                variant=\"body1\"\r\n              >\r\n                {quotation.binding_types}\r\n              </Typography>\r\n            </Grid>\r\n          </Grid>\r\n        </Box>\r\n        <Box>\r\n          {/* <Button \r\n            variant=\"contained\" \r\n            color=\"primary\" \r\n            md={3}\r\n            onClick={\r\n              ()=>{\r\n                navigate('/app/quote/detail',{state: {id: quotation.id}})\r\n              }\r\n            }\r\n          >\r\n            COMPUTE QUOTATION\r\n          </Button> */}\r\n          <Button \r\n            fullWidth\r\n            variant=\"outlined\" \r\n            color=\"primary\"\r\n            onClick={\r\n              ()=>{\r\n                navigate('/app/quote/detail',{state: {id: quotation.id}})\r\n              }\r\n            }\r\n          >\r\n            REVIEW PROJECT SPECS\r\n          </Button>\r\n        </Box>\r\n      </CardContent>\r\n    </Card>\r\n  );\r\n};\r\n\r\nQuotationCard.propTypes = {\r\n  className: PropTypes.string,\r\n  quotation: PropTypes.object.isRequired\r\n};\r\n\r\nexport default QuotationCard;\r\n","import React, { useState, useEffect } from 'react';\r\nimport {\r\n  Box,\r\n  Container,\r\n  Grid,\r\n  makeStyles,\r\n  Typography\r\n} from '@material-ui/core';\r\nimport Page from 'src/components/Page';\r\nimport QuotationCard from '../QuotationCard';\r\nimport QuotationCardComputed from '../QuotationCardComputed';\r\n// import data from './data';\r\nimport axios from 'axios';\r\nimport { useDispatch, useSelector } from \"react-redux\";\r\n\r\nimport {getComputedQuotations, getInProgressQuotations, getApprovedQuotations} from \"../../../_actions/quotation\";\r\nimport {useInterval} from \"../../../_helpers/hooks\";\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n  root: {\r\n    backgroundColor: theme.palette.background.dark,\r\n    minHeight: '100%',\r\n    paddingBottom: theme.spacing(3),\r\n    paddingTop: theme.spacing(3)\r\n  },\r\n  quotationCard: {\r\n    height: '100%'\r\n  }\r\n}));\r\n\r\nconst QuotationReviewList = () => {\r\n  const classes = useStyles();\r\n  const dispatch = useDispatch();\r\n\r\n  const { computedQuotations: computed} = useSelector((state)=>state.quotation);\r\n  const { inProgressQuotations: in_progress} = useSelector((state)=>state.quotation);\r\n  const { approvedQuotations : approved} = useSelector((state)=>state.quotation);\r\n  \r\n  useInterval(() => {\r\n    async function fetchData(){\r\n      try\r\n      {\r\n        await dispatch(getComputedQuotations());\r\n        await dispatch(getInProgressQuotations());\r\n        await dispatch(getApprovedQuotations())\r\n        // console.log(in_progress);\r\n        // console.log(computed);\r\n      }\r\n      catch(error)\r\n      {\r\n        // console.log(error);\r\n      }\r\n    }\r\n    fetchData();\r\n  },1000)\r\n  //computed, in_progress, approved\r\n\r\n  return (\r\n    <Page\r\n      className={classes.root}\r\n      title=\"Quote Review\"\r\n    >\r\n      <Container maxWidth={false}>\r\n        <Typography className={classes.name} color=\"textPrimary\" variant=\"h2\">\r\n          Quote Review\r\n        </Typography>\r\n        <Box mt={2}>\r\n        <Grid container spacing={3}>\r\n          <Grid item xs={12} sm={6} md={4}>\r\n            <Typography className={classes.name} color=\"textSecondary\" variant=\"h5\">\r\n              Awaiting Computation\r\n            </Typography>\r\n              <Box mt={2}>\r\n                {in_progress ? in_progress.map((quotation) => (\r\n                  <Grid item key={quotation.id} lg={12} md={12} xs={12}>\r\n                    <Box mt={2}>\r\n                      <QuotationCard \r\n                        className={classes.quotationCard} \r\n                        quotation={quotation}\r\n                      />\r\n                    </Box>\r\n                  </Grid>\r\n                )) : null}\r\n              </Box>\r\n            </Grid>\r\n            <Grid item xs={12} sm={6} md={4}>\r\n              <Typography className={classes.name} color=\"textSecondary\" variant=\"h5\">\r\n                Awaiting Approval\r\n              </Typography>\r\n              <Box mt={2}>\r\n                {computed ? computed.map((quotation) => (\r\n                  <Grid item key={quotation.id} lg={12} md={12} xs={12}>\r\n                    <Box mt={2}>\r\n                      <QuotationCardComputed\r\n                        className={classes.quotationCard}\r\n                        quotation={quotation}\r\n                      />\r\n                    </Box>\r\n                  </Grid>\r\n                )) : null}\r\n              </Box>\r\n            </Grid>\r\n            <Grid item xs={12} sm={6} md={4}>\r\n              <Typography className={classes.name} color=\"textSecondary\" variant=\"h5\">\r\n                Approved\r\n              </Typography>\r\n              <Box mt={2}>\r\n                {approved ? approved.map((quotation) => (\r\n                  <Grid item key={quotation.id} lg={12} md={12} xs={12}>\r\n                    <Box mt={2}>\r\n                      <QuotationCardComputed\r\n                        className={classes.quotationCard}\r\n                        quotation={quotation}\r\n                      />\r\n                    </Box>\r\n                  </Grid>\r\n                )) : null}\r\n              </Box>\r\n            </Grid>\r\n          </Grid>\r\n        </Box>\r\n      </Container>\r\n    </Page>\r\n  );\r\n};\r\n\r\nexport default QuotationReviewList;\r\n","import React, {useState, useEffect} from 'react';\r\nimport { Link as RouterLink, useNavigate, useLocation } from 'react-router-dom';\r\nimport * as Yup from 'yup';\r\nimport { Formik, Form, FieldArray, getIn } from 'formik';\r\nimport {\r\n    Grid,\r\n    Row,\r\n    Column,\r\n    Box,\r\n    Button,\r\n    Checkbox,\r\n    Container,\r\n    FormHelperText,\r\n    Link,\r\n    TextField,\r\n    Typography,\r\n    makeStyles,\r\n    Select,\r\n    MenuItem,\r\n    InputLabel,\r\n    Dialog, DialogContent, DialogTitle\r\n} from '@material-ui/core';\r\nimport Page from 'src/components/Page';\r\nimport {format} from 'date-fns';\r\n\r\nimport { useDispatch, useSelector } from \"react-redux\";\r\nimport axios from 'axios';\r\n\r\nimport {uniqueId} from 'lodash';\r\n\r\nconst QuotationItem = (props) => {\r\n    return (\r\n        <Container style={{maxHeight:540,overflow:'auto'}} mb={2}>\r\n            {props.values && props.values.quotation.items.map(\r\n                (quotationItem,index) => \r\n                {\r\n                    return (\r\n                        <Grid item xs={12} key={uniqueId(\"quotation-item-individual-\")}>\r\n                            <Grid container>\r\n                                <Grid item xs={10}>\r\n                                    <Typography\r\n                                        color=\"textSecondary\"\r\n                                        variant=\"h4\"\r\n                                        align=\"left\"\r\n                                    >\r\n                                        Quotation Item # {index+1}\r\n                                    </Typography>\r\n                                </Grid>\r\n                                <Grid container justify=\"flex-end\">\r\n                                    <Button\r\n                                        color=\"primary\"\r\n                                        // disabled={isSubmitting}\r\n                                        size=\"small\"\r\n                                        type=\"button\"\r\n                                        variant=\"outlined\"\r\n                                        onClick={\r\n                                            ()=>props.remove(index)\r\n                                        }\r\n                                    >\r\n                                        X\r\n                                    </Button>\r\n                                </Grid>\r\n                            </Grid>\r\n                            \r\n                            <TextField\r\n                                select\r\n                                label=\"Item Type\"\r\n                                fullWidth\r\n                                margin=\"normal\"\r\n                                name={`quotation.items[${index}].item_type`}\r\n                                onBlur={props.handleBlur}\r\n                                onChange={props.handleChange}\r\n                                value={props.values.quotation ?\r\n                                    props.values.quotation.items[index].item_type:\r\n                                    \"\"\r\n                                }\r\n                                variant=\"outlined\"\r\n                            >\r\n                                <MenuItem value=\"inner\">\r\n                                    Inner Pages\r\n                                </MenuItem>\r\n                                <MenuItem value=\"cover\">\r\n                                    Cover\r\n                                </MenuItem>\r\n                                <MenuItem value=\"other\">\r\n                                    Other\r\n                                </MenuItem>\r\n                            </TextField>\r\n                            <TextField\r\n                                select\r\n                                label=\"Number of Colors\"\r\n                                fullWidth\r\n                                margin=\"normal\"\r\n                                name={`quotation.items[${index}].no_colors`}\r\n                                onBlur={props.handleBlur}\r\n                                onChange={props.handleChange}\r\n                                value={props.values.quotation ? \r\n                                    props.values.quotation.items[index].no_colors :\r\n                                    \"\"\r\n                                }\r\n                                variant=\"outlined\"\r\n                            >\r\n                                <MenuItem value={1}>\r\n                                    One Color (Black and White)\r\n                                </MenuItem>\r\n                                <MenuItem value={2}>\r\n                                    Two Colors (CMYK)\r\n                                </MenuItem>\r\n                                <MenuItem value={3}>\r\n                                    Three Colors (CMYK)\r\n                                </MenuItem>\r\n                                <MenuItem value={4}>\r\n                                    Four Colors (CMYK)\r\n                                </MenuItem>\r\n                            </TextField>\r\n                            <TextField\r\n                                select\r\n                                label=\"Lamination Type\"\r\n                                fullWidth\r\n                                margin=\"normal\"\r\n                                name={`quotation.items[${index}].lamination`}\r\n                                onBlur={props.handleBlur}\r\n                                onChange={props.handleChange}\r\n                                value={props.values.quotation ? \r\n                                    props.values.quotation.items[index].lamination :\r\n                                    \"\"\r\n                                }\r\n                                variant=\"outlined\"\r\n                            >\r\n                                {props.laminationTypes && props.laminationTypes.map((laminationType, index)=>{\r\n                                    return (\r\n                                        <MenuItem value={laminationType.id}>\r\n                                            {laminationType.lamination_type}\r\n                                        </MenuItem>\r\n                                    )\r\n                                })}\r\n                                <MenuItem value={\"\"}>\r\n                                    None\r\n                                </MenuItem>\r\n                            </TextField>\r\n                            <TextField\r\n                                select\r\n                                label=\"Binding Type\"\r\n                                fullWidth\r\n                                margin=\"normal\"\r\n                                name={`quotation.items[${index}].binding`}\r\n                                onBlur={props.handleBlur}\r\n                                onChange={props.handleChange}\r\n                                value={props.values.quotation ? \r\n                                    props.values.quotation.items[index].binding : \r\n                                    \"\"\r\n                                }\r\n                                variant=\"outlined\"\r\n                            >\r\n                                {props.bindingTypes && props.bindingTypes.map((bindingType, index)=>{\r\n                                    return (\r\n                                        <MenuItem value={bindingType.id}>\r\n                                            {bindingType.binding_type}\r\n                                        </MenuItem>\r\n                                    )\r\n                                })}\r\n                                <MenuItem value={\"\"}>\r\n                                    None\r\n                                </MenuItem>\r\n                            </TextField>\r\n                            <TextField\r\n                                select\r\n                                label=\"Paper Type\"\r\n                                fullWidth\r\n                                margin=\"normal\"\r\n                                name={`quotation.items[${index}].paper`}\r\n                                onBlur={props.handleBlur}\r\n                                onChange={props.handleChange}\r\n                                value={props.values.quotation ? \r\n                                    props.values.quotation.items[index].paper : \r\n                                    \"\"\r\n                                }\r\n                                variant=\"outlined\"\r\n                            >\r\n                                {props.paperTypes && props.paperTypes.map((paperType, index)=>{\r\n                                    return (\r\n                                        <MenuItem value={paperType.id}>\r\n                                            {paperType.paper_type}\r\n                                        </MenuItem>\r\n                                    )\r\n                                })}\r\n                                <MenuItem value={\"\"}>\r\n                                    None\r\n                                </MenuItem>\r\n                            </TextField>\r\n                        </Grid>\r\n                        )\r\n                    }\r\n                )\r\n            }\r\n            <Button\r\n                color=\"primary\"\r\n                // disabled={isSubmitting}\r\n                // fullWidth\r\n                size=\"large\"\r\n                type=\"button\"\r\n                variant=\"outlined\"\r\n                onClick={\r\n                    ()=>props.push({\r\n                        lamination: null,\r\n                        binding: null,\r\n                        paper: null,\r\n                        item_type: \"other\",\r\n                        no_colors: 4,\r\n                        quotation: props.values.quotation.id\r\n                    })\r\n                }\r\n            >\r\n                Add new item\r\n            </Button>\r\n        </Container>\r\n    )\r\n}\r\n\r\nexport default QuotationItem;","import React, {useState, useEffect} from 'react';\r\nimport { Link as RouterLink, useNavigate, useLocation } from 'react-router-dom';\r\nimport * as Yup from 'yup';\r\nimport { Formik, Form, FieldArray, getIn } from 'formik';\r\nimport {\r\n    Grid,\r\n    Row,\r\n    Column,\r\n    Box,\r\n    Button,\r\n    Checkbox,\r\n    Container,\r\n    FormHelperText,\r\n    Link,\r\n    TextField,\r\n    Typography,\r\n    makeStyles,\r\n    Select,\r\n    MenuItem,\r\n    InputLabel,\r\n    Dialog, DialogContent, DialogTitle\r\n} from '@material-ui/core';\r\nimport Page from 'src/components/Page';\r\nimport {format} from 'date-fns';\r\n\r\nimport { useDispatch, useSelector } from \"react-redux\";\r\nimport axios from 'axios';\r\n\r\nconst ProjectSettings = (props) => \r\n{\r\n    return (props.values && \r\n    <Grid item xs={12}>\r\n        <Typography\r\n            color=\"textPrimary\"\r\n            variant=\"h3\"\r\n            align=\"left\"\r\n        >\r\n            Project Settings\r\n        </Typography>\r\n        <Box mb={1}>\r\n            <Typography\r\n                color=\"textSecondary\"\r\n                variant=\"h5\"\r\n                align=\"left\"\r\n            >\r\n                Project Information\r\n            </Typography>\r\n            <TextField\r\n                fullWidth\r\n                // inputProps = {\r\n                //     { readOnly: true, }\r\n                // }\r\n                label=\"Project Name\"\r\n                margin=\"normal\"\r\n                name=\"quotation.project_name\"\r\n                onBlur={props.handleBlur}\r\n                onChange={props.handleChange}\r\n                value={props.values.quotation.project_name}\r\n                variant=\"outlined\"\r\n            >\r\n            </TextField>    \r\n            <TextField\r\n                fullWidth\r\n                inputProps = {\r\n                    { readOnly: true, }\r\n                }\r\n                label=\"Client Name\"\r\n                margin=\"normal\"\r\n                name=\"quotation.client.full_name\"\r\n                onBlur={props.handleBlur}\r\n                onChange={props.handleChange}\r\n                value={props.values.quotation.client.full_name + \" (\" +  props.values.quotation.client.user + \")\"}\r\n                variant=\"filled\"\r\n            >\r\n\r\n            </TextField>    \r\n            <TextField\r\n                fullWidth\r\n                inputProps = {\r\n                    { readOnly: true, }\r\n                }\r\n                type=\"date\"\r\n                label=\"Created Date\"\r\n                margin=\"normal\"\r\n                name=\"quotation.created_date\"\r\n                onBlur={props.handleBlur}\r\n                onChange={props.handleChange}\r\n                value={\r\n                    props.values.quotation ? \r\n                    format(new Date(props.values.quotation.created_date),\"yyyy-MM-dd\") : \r\n                    format(Date.now(),\"yyyy-MM-dd\")\r\n                }\r\n                // defaultValue={values.quotation.created_date}\r\n                variant=\"filled\"\r\n                InputLabelProps={{ shrink: true }}\r\n            > \r\n            </TextField>    \r\n            <TextField\r\n                select\r\n                label=\"Approval Status\"\r\n                fullWidth\r\n                margin=\"normal\"\r\n                name=\"quotation.approval_status\"\r\n                onBlur={props.handleBlur}\r\n                onChange={props.handleChange}\r\n                value={props.values.quotation.approval_status}\r\n                variant=\"outlined\"\r\n            >\r\n                <MenuItem value=\"in_progress\">\r\n                    In Progress\r\n                </MenuItem>\r\n                <MenuItem value=\"computed\">\r\n                    Computed\r\n                </MenuItem>\r\n                <MenuItem value=\"approved\">\r\n                    Approved\r\n                </MenuItem>\r\n                <MenuItem value=\"not_approved\">\r\n                    Not Approved\r\n                </MenuItem>\r\n            </TextField>\r\n            <TextField\r\n                fullWidth\r\n                // inputProps = {\r\n                //     { readOnly: true, }\r\n                // }\r\n                type=\"number\"\r\n                label=\"Quantity\"\r\n                margin=\"normal\"\r\n                name=\"quotation.quantity\"\r\n                onBlur={props.handleBlur}\r\n                onChange={props.handleChange}\r\n                value={props.values.quotation.quantity}\r\n                variant=\"outlined\"\r\n            >\r\n            </TextField>    \r\n        </Box>\r\n        <Box mb={1}>\r\n            <Typography\r\n                color=\"textSecondary\"\r\n                variant=\"h5\"\r\n                align=\"left\"\r\n            >\r\n                Cost Computation Settings\r\n            </Typography>\r\n            <Grid container>\r\n                <Grid item xs={12} sm={6}>\r\n                    <TextField\r\n                        fullWidth\r\n                        // inputProps = {\r\n                        //     { readOnly: true, }\r\n                        // }\r\n                        type=\"number\"\r\n                        label=\"Markup Percentage\"\r\n                        margin=\"normal\"\r\n                        name=\"quotation.markup_percentage\"\r\n                        onBlur={props.handleBlur}\r\n                        onChange={props.handleChange}\r\n                        value={props.values.quotation.markup_percentage}\r\n                        variant=\"outlined\"\r\n                    />\r\n                </Grid>\r\n                <Grid item xs={12} sm={6}>\r\n                    <TextField\r\n                        fullWidth\r\n                        // inputProps = {\r\n                        //     { readOnly: true, }\r\n                        // }\r\n                        type=\"number\"\r\n                        label=\"Margin of Error\"\r\n                        margin=\"normal\"\r\n                        name=\"quotation.margin_of_error\"\r\n                        onBlur={props.handleBlur}\r\n                        onChange={props.handleChange}\r\n                        value={props.values.quotation.margin_of_error}\r\n                        variant=\"outlined\"\r\n                    />\r\n                </Grid>\r\n            </Grid>\r\n        </Box>\r\n        <Box mb={1}>\r\n            <Typography\r\n                color=\"textSecondary\"\r\n                variant=\"h5\"\r\n                align=\"left\"\r\n            >\r\n                Project Dimensions\r\n            </Typography>\r\n            <Typography\r\n                color=\"textSecondary\"\r\n                variant=\"h6\"\r\n                align=\"left\"\r\n            >\r\n                Folded Size\r\n            </Typography>\r\n            <Grid container>\r\n                <Grid item xs={12} sm={6}>\r\n                    <TextField\r\n                        fullWidth\r\n                        // inputProps = {\r\n                        //     { readOnly: true, }\r\n                        // }\r\n                        type=\"number\"\r\n                        label=\"Page Length\"\r\n                        margin=\"normal\"\r\n                        name=\"quotation.page_length\"\r\n                        onBlur={props.handleBlur}\r\n                        onChange={props.handleChange}\r\n                        value={props.values.quotation.page_length}\r\n                        variant=\"outlined\"\r\n                    />\r\n                </Grid>\r\n                <Grid item xs={12} sm={6}>\r\n                    <TextField\r\n                        fullWidth\r\n                        // inputProps = {\r\n                        //     { readOnly: true, }\r\n                        // }\r\n                        type=\"number\"\r\n                        label=\"Page Width\"\r\n                        margin=\"normal\"\r\n                        name=\"quotation.page_width\"\r\n                        onBlur={props.handleBlur}\r\n                        onChange={props.handleChange}\r\n                        value={props.values.quotation.page_width}\r\n                        variant=\"outlined\"\r\n                    />\r\n                </Grid>\r\n            </Grid>\r\n            \r\n            <Typography\r\n                color=\"textSecondary\"\r\n                variant=\"h6\"\r\n                align=\"left\"\r\n            >\r\n                Spread Size\r\n            </Typography>\r\n            <Grid container>\r\n                <Grid item xs={12} sm={6}>\r\n                    <TextField\r\n                        fullWidth\r\n                        // inputProps = {\r\n                        //     { readOnly: true, }\r\n                        // }\r\n                        type=\"number\"\r\n                        label=\"Spread Length\"\r\n                        margin=\"normal\"\r\n                        name=\"quotation.spread_length\"\r\n                        onBlur={props.handleBlur}\r\n                        onChange={props.handleChange}\r\n                        value={props.values.quotation.spread_length}\r\n                        variant=\"outlined\"\r\n                    />\r\n                </Grid>\r\n                <Grid item xs={12} sm={6}>\r\n                    <TextField\r\n                        fullWidth\r\n                        // inputProps = {\r\n                        //     { readOnly: true, }\r\n                        // }\r\n                        type=\"number\"\r\n                        label=\"Spread Width\"\r\n                        margin=\"normal\"\r\n                        name=\"quotation.spread_width\"\r\n                        onBlur={props.handleBlur}\r\n                        onChange={props.handleChange}\r\n                        value={props.values.quotation.spread_width}\r\n                        variant=\"outlined\"\r\n                    />\r\n                </Grid>\r\n            </Grid>\r\n            \r\n        </Box>\r\n    </Grid>\r\n    )\r\n}\r\nexport default ProjectSettings;","import React, {useState, useEffect} from 'react';\r\nimport { Link as RouterLink, useNavigate, useLocation } from 'react-router-dom';\r\nimport * as Yup from 'yup';\r\nimport { Formik, Form, FieldArray, getIn } from 'formik';\r\nimport {\r\n    Grid,\r\n    Row,\r\n    Column,\r\n    Box,\r\n    Button,\r\n    Checkbox,\r\n    Container,\r\n    FormHelperText,\r\n    Link,\r\n    TextField,\r\n    Typography,\r\n    makeStyles,\r\n    Select,\r\n    MenuItem,\r\n    InputLabel,\r\n    Dialog, DialogContent, DialogTitle\r\n} from '@material-ui/core';\r\nimport Page from 'src/components/Page';\r\nimport {format} from 'date-fns';\r\n\r\nimport { useDispatch, useSelector } from \"react-redux\";\r\nimport axios from 'axios';\r\n\r\nconst Finishing = (props) => {\r\n    return(\r\n        <Grid item xs={12}>\r\n            <Typography\r\n                color=\"textPrimary\"\r\n                variant=\"h3\"\r\n                align=\"left\"\r\n            >\r\n                Finishing\r\n            </Typography>\r\n            <Typography\r\n                color=\"textSecondary\"\r\n                variant=\"h5\"\r\n                align=\"left\"\r\n            >\r\n                Lamination\r\n            </Typography>\r\n            <TextField\r\n                fullWidth\r\n                inputProps = {\r\n                    { readOnly: true, }\r\n                }\r\n                type=\"number\"\r\n                label=\"Total Lamination Costs\"\r\n                margin=\"normal\"\r\n                name=\"quotation.total_lamination_costs\"\r\n                onBlur={props.handleBlur}\r\n                onChange={props.handleChange}\r\n                value={props.values.quotation.total_lamination_costs}\r\n                variant=\"filled\"\r\n            >\r\n            </TextField>\r\n            <Typography\r\n                color=\"textSecondary\"\r\n                variant=\"h5\"\r\n                align=\"left\"\r\n            >\r\n                Binding\r\n            </Typography>\r\n            <TextField\r\n                fullWidth\r\n                // inputProps = {\r\n                //     { readOnly: true, }\r\n                // }\r\n                type=\"number\"\r\n                label=\"Total Binding Costs\"\r\n                margin=\"normal\"\r\n                name=\"quotation.total_binding_costs\"\r\n                onBlur={props.handleBlur}\r\n                onChange={props.handleChange}\r\n                value={props.values.quotation.total_binding_costs}\r\n                variant=\"outlined\"\r\n            >\r\n            </TextField>\r\n            <Typography\r\n                color=\"textSecondary\"\r\n                variant=\"h5\"\r\n                align=\"left\"\r\n            >\r\n                Folding\r\n            </Typography>\r\n            <TextField\r\n                fullWidth\r\n                // inputProps = {\r\n                //     { readOnly: true, }\r\n                // }\r\n                type=\"number\"\r\n                label=\"Total Folds (per copy)\"\r\n                margin=\"normal\"\r\n                name=\"quotation.total_folds\"\r\n                onBlur={props.handleBlur}\r\n                onChange={props.handleChange}\r\n                value={props.values.quotation.total_folds}\r\n                variant=\"outlined\"\r\n            >\r\n            </TextField>\r\n            <TextField\r\n                fullWidth\r\n                inputProps = {\r\n                    { readOnly: true, }\r\n                }\r\n                type=\"number\"\r\n                label=\"Total Folding Costs\"\r\n                margin=\"normal\"\r\n                name=\"quotation.total_folding_costs\"\r\n                onBlur={props.handleBlur}\r\n                onChange={props.handleChange}\r\n                value={props.values.quotation.total_folding_costs}\r\n                variant=\"filled\"\r\n            >\r\n            </TextField>\r\n            <Typography\r\n                color=\"textSecondary\"\r\n                variant=\"h5\"\r\n                align=\"left\"\r\n            >\r\n                Gathering\r\n            </Typography>\r\n            <TextField\r\n                fullWidth\r\n                // inputProps = {\r\n                //     { readOnly: true, }\r\n                // }\r\n                type=\"number\"\r\n                label=\"Total Gathering Costs\"\r\n                margin=\"normal\"\r\n                name=\"quotation.total_gathering_costs\"\r\n                onBlur={props.handleBlur}\r\n                onChange={props.handleChange}\r\n                value={props.values.quotation.total_gathering_costs}\r\n                variant=\"outlined\"\r\n            >\r\n            </TextField>\r\n        </Grid>\r\n    )\r\n}\r\nexport default Finishing;","import React, {useState, useEffect} from 'react';\r\nimport { Link as RouterLink, useNavigate, useLocation } from 'react-router-dom';\r\nimport * as Yup from 'yup';\r\nimport { Formik, Form, FieldArray, getIn } from 'formik';\r\nimport {\r\n    Grid,\r\n    Row,\r\n    Column,\r\n    Box,\r\n    Button,\r\n    Checkbox,\r\n    Container,\r\n    FormHelperText,\r\n    Link,\r\n    TextField,\r\n    Typography,\r\n    makeStyles,\r\n    Select,\r\n    MenuItem,\r\n    InputLabel,\r\n    Dialog, DialogContent, DialogTitle\r\n} from '@material-ui/core';\r\nimport Page from 'src/components/Page';\r\nimport {format} from 'date-fns';\r\n\r\nimport { useDispatch, useSelector } from \"react-redux\";\r\nimport axios from 'axios';\r\n\r\nconst PlatesRunningPaper = (props) => {\r\n    return (props.values &&\r\n        <Grid item xs={12}>\r\n            <Typography\r\n                color=\"textPrimary\"\r\n                variant=\"h3\"\r\n                align=\"left\"\r\n            >\r\n                Plates, Running, and Paper\r\n            </Typography>\r\n            {/* <Typography\r\n                color=\"textSecondary\"\r\n                variant=\"h5\"\r\n                align=\"left\"\r\n            >\r\n                Number of Plates\r\n            </Typography> */}\r\n            <TextField\r\n                fullWidth\r\n                // inputProps = {\r\n                //     { readOnly: true, }\r\n                // }\r\n                type=\"number\"\r\n                label=\"Pages Can Fit (per plate)\"\r\n                margin=\"normal\"\r\n                name=\"quotation.pages_can_fit\"\r\n                onBlur={props.handleBlur}\r\n                onChange={props.handleChange}\r\n                value={props.values.quotation.pages_can_fit}\r\n                variant=\"outlined\"\r\n            >\r\n            </TextField>\r\n            <TextField\r\n                fullWidth\r\n                inputProps = {\r\n                    { readOnly: true, }\r\n                }\r\n                type=\"number\"\r\n                label=\"Total Number of Plates\"\r\n                margin=\"normal\"\r\n                name=\"quotation.total_no_plates\"\r\n                onBlur={props.handleBlur}\r\n                onChange={props.handleChange}\r\n                value={props.values.quotation.total_no_plates}\r\n                variant=\"filled\"\r\n            >\r\n            </TextField>\r\n            <TextField\r\n                fullWidth\r\n                inputProps = {\r\n                    { readOnly: true, }\r\n                }\r\n                type=\"number\"\r\n                label=\"Total Plate Costs\"\r\n                margin=\"normal\"\r\n                name=\"quotation.total_plate_costs\"\r\n                onBlur={props.handleBlur}\r\n                onChange={props.handleChange}\r\n                value={props.values.quotation.total_plate_costs}\r\n                variant=\"filled\"\r\n            >\r\n            </TextField>\r\n\r\n            <TextField\r\n                fullWidth\r\n                inputProps = {\r\n                    { readOnly: true, }\r\n                }\r\n                type=\"number\"\r\n                label=\"Total Running Costs\"\r\n                margin=\"normal\"\r\n                name=\"quotation.total_running_costs\"\r\n                onBlur={props.handleBlur}\r\n                onChange={props.handleChange}\r\n                value={props.values.quotation.total_running_costs}\r\n                variant=\"filled\"\r\n            >\r\n            </TextField>\r\n\r\n            <TextField\r\n                fullWidth\r\n                inputProps = {\r\n                    { readOnly: true, }\r\n                }\r\n                type=\"number\"\r\n                label=\"Total Number of Sheets (per copy)\"\r\n                margin=\"normal\"\r\n                name=\"quotation.total_no_sheets\"\r\n                onBlur={props.handleBlur}\r\n                onChange={props.handleChange}\r\n                value={props.values.quotation.total_no_sheets}\r\n                variant=\"filled\"\r\n            >\r\n            </TextField>\r\n\r\n            <TextField\r\n                fullWidth\r\n                // inputProps = {\r\n                //     { readOnly: true, }\r\n                // }\r\n                type=\"number\"\r\n                label=\"Number of Pages\"\r\n                margin=\"normal\"\r\n                name=\"quotation.total_pages\"\r\n                onBlur={props.handleBlur}\r\n                onChange={props.handleChange}\r\n                value={props.values.quotation.total_pages}\r\n                variant=\"outlined\"\r\n            >\r\n            </TextField>\r\n            \r\n            <TextField\r\n                fullWidth\r\n                inputProps = {\r\n                    { readOnly: true, }\r\n                }\r\n                type=\"number\"\r\n                label=\"Total Paper Costs\"\r\n                margin=\"normal\"\r\n                name=\"quotation.total_paper_costs\"\r\n                onBlur={props.handleBlur}\r\n                onChange={props.handleChange}\r\n                value={props.values.quotation.total_paper_costs}\r\n                variant=\"filled\"\r\n            >\r\n            </TextField>\r\n        </Grid>\r\n    )\r\n}\r\nexport default PlatesRunningPaper;","import React, {useState, useEffect} from 'react';\r\nimport { Link as RouterLink, useNavigate, useLocation } from 'react-router-dom';\r\nimport * as Yup from 'yup';\r\nimport { Formik, Form, FieldArray, getIn } from 'formik';\r\nimport {\r\n    Grid,\r\n    Row,\r\n    Column,\r\n    Box,\r\n    Button,\r\n    Checkbox,\r\n    Container,\r\n    FormHelperText,\r\n    Link,\r\n    TextField,\r\n    Typography,\r\n    makeStyles,\r\n    Select,\r\n    MenuItem,\r\n    InputLabel,\r\n    Dialog, DialogContent, DialogTitle\r\n} from '@material-ui/core';\r\nimport Page from 'src/components/Page';\r\nimport {format} from 'date-fns';\r\n\r\nimport { useDispatch, useSelector } from \"react-redux\";\r\nimport axios from 'axios';\r\n\r\nconst ExtraCosts = (props) => {\r\n    return (\r\n        <Grid item xs={12}>\r\n            <Typography\r\n                color=\"textPrimary\"\r\n                variant=\"h3\"\r\n                align=\"left\"\r\n            >\r\n                Extra Costs\r\n            </Typography>\r\n            <TextField\r\n                fullWidth\r\n                // inputProps = {\r\n                //     { readOnly: true, }\r\n                // }\r\n                type=\"number\"\r\n                label=\"Cutting Costs\"\r\n                margin=\"normal\"\r\n                name=\"quotation.cutting_costs\"\r\n                onBlur={props.handleBlur}\r\n                onChange={props.handleChange}\r\n                value={props.values.quotation.cutting_costs}\r\n                variant=\"outlined\"\r\n            >\r\n            </TextField>\r\n            <TextField\r\n                fullWidth\r\n                // inputProps = {\r\n                //     { readOnly: true, }\r\n                // }\r\n                type=\"number\"\r\n                label=\"Packaging Costs\"\r\n                margin=\"normal\"\r\n                name=\"quotation.packaging_costs\"\r\n                onBlur={props.handleBlur}\r\n                onChange={props.handleChange}\r\n                value={props.values.quotation.packaging_costs}\r\n                variant=\"outlined\"\r\n            >\r\n            </TextField>\r\n            <TextField\r\n                fullWidth\r\n                // inputProps = {\r\n                //     { readOnly: true, }\r\n                // }\r\n                type=\"number\"\r\n                label=\"Transport Costs\"\r\n                margin=\"normal\"\r\n                name=\"quotation.transport_costs\"\r\n                onBlur={props.handleBlur}\r\n                onChange={props.handleChange}\r\n                value={props.values.quotation.transport_costs}\r\n                variant=\"outlined\"\r\n            >\r\n            </TextField>\r\n        </Grid>\r\n    )\r\n}\r\nexport default ExtraCosts;","import React, {useState, useEffect} from 'react';\r\nimport { Link as RouterLink, useNavigate, useLocation } from 'react-router-dom';\r\nimport * as Yup from 'yup';\r\nimport { Formik, Form, FieldArray, getIn } from 'formik';\r\nimport {\r\n    Grid,\r\n    Row,\r\n    Column,\r\n    Box,\r\n    Button,\r\n    Checkbox,\r\n    Container,\r\n    FormHelperText,\r\n    Link,\r\n    TextField,\r\n    Typography,\r\n    makeStyles,\r\n    Select,\r\n    MenuItem,\r\n    InputLabel,\r\n    Dialog, DialogContent, DialogTitle\r\n} from '@material-ui/core';\r\nimport Page from 'src/components/Page';\r\nimport {format} from 'date-fns';\r\n\r\nimport { useDispatch, useSelector } from \"react-redux\";\r\nimport axios from 'axios';\r\n\r\nconst ProjectSummaryDialog = (props) => {\r\n    return (props.values &&\r\n        <Dialog open={props.openDialog} onClose={props.handleCloseDialog} fullWidth={true} maxWidth = {'sm'}>\r\n            <DialogTitle>\r\n                <Typography\r\n                    color=\"textPrimary\"\r\n                    variant=\"h3\"\r\n                    align=\"left\"\r\n                >\r\n                    Project Summary\r\n                </Typography>\r\n            </DialogTitle>\r\n            <DialogContent>\r\n                <Container spacing={3} my={3}>\r\n                    <Grid container spacing={2}>\r\n                        <Typography\r\n                            color=\"textSecondary\"\r\n                            variant=\"h4\"\r\n                            align=\"left\"\r\n                        >\r\n                            Computed Raw Project Costs\r\n                        </Typography>\r\n                        <Grid container>\r\n                            <Grid item xs={6}>\r\n                                <Typography\r\n                                    color=\"textSecondary\"\r\n                                    variant=\"body1\"\r\n                                    align=\"left\"\r\n                                >\r\n                                    Raw Total Costs\r\n                                </Typography>\r\n                            </Grid>\r\n                            <Grid item xs={6}>\r\n                                <Grid container justify=\"flex-end\">\r\n                                    <Typography\r\n                                        color=\"textSecondary\"\r\n                                        variant=\"body1\"\r\n                                        align=\"left\"\r\n                                    >\r\n                                        P {props.values.quotation.raw_total_costs}\r\n                                    </Typography>\r\n                                </Grid>\r\n                            </Grid>\r\n                            <Grid item xs={6}>\r\n                                <Typography\r\n                                    color=\"textSecondary\"\r\n                                    variant=\"body1\"\r\n                                    align=\"left\"\r\n                                >\r\n                                    Raw Unit Costs\r\n                                </Typography>\r\n                            </Grid>\r\n                            <Grid item xs={6}>\r\n                                <Grid container justify=\"flex-end\">\r\n                                    <Typography\r\n                                        color=\"textSecondary\"\r\n                                        variant=\"body1\"\r\n                                        align=\"left\"\r\n                                    >\r\n                                        P {props.values.quotation.raw_unit_costs}\r\n                                    </Typography>\r\n                                </Grid>\r\n                            </Grid>\r\n                        </Grid>\r\n                        <Typography\r\n                            color=\"textSecondary\"\r\n                            variant=\"h4\"\r\n                            align=\"left\"\r\n                        >\r\n                            Computed Final Project Costs\r\n                        </Typography>\r\n                        <Grid container>\r\n                            <Grid item xs={6}>\r\n                                <Typography\r\n                                    color=\"textSecondary\"\r\n                                    variant=\"body1\"\r\n                                    align=\"left\"\r\n                                >\r\n                                    Final Total Costs (w/ Markup)\r\n                                </Typography>\r\n                            </Grid>\r\n                            <Grid item xs={6}>\r\n                                <Grid container justify=\"flex-end\">\r\n                                    <Typography\r\n                                        color=\"textSecondary\"\r\n                                        variant=\"body1\"\r\n                                        align=\"left\"\r\n                                    >\r\n                                        P {props.values.quotation.final_total_costs}\r\n                                    </Typography>\r\n                                </Grid>\r\n                            </Grid>\r\n                            <Grid item xs={6}>\r\n                                <Typography\r\n                                    color=\"textSecondary\"\r\n                                    variant=\"body1\"\r\n                                    align=\"left\"\r\n                                >\r\n                                    Final Unit Costs (w/ Markup)\r\n                                </Typography>\r\n                            </Grid>\r\n                            <Grid item xs={6}>\r\n                                <Grid container justify=\"flex-end\">\r\n                                    <Typography\r\n                                        color=\"textSecondary\"\r\n                                        variant=\"body1\"\r\n                                        align=\"left\"\r\n                                    >\r\n                                        P {props.values.quotation.final_unit_costs}\r\n                                    </Typography>\r\n                                </Grid>\r\n                            </Grid>\r\n                        </Grid>\r\n                        <Grid item xs={6}>\r\n                            <Button\r\n                                // color=\"primary\"\r\n                                // disabled={isSubmitting}\r\n                                fullWidth\r\n                                size=\"large\"\r\n                                type=\"button\"\r\n                                variant=\"outlined\"\r\n                                onClick={props.handleGoBack}\r\n                            >\r\n                                Return to Quote Review\r\n                            </Button>\r\n                        </Grid>\r\n                        <Grid item xs={6}>\r\n                            <Button\r\n                                color=\"primary\"\r\n                                disabled={props.values.finishComputing}\r\n                                fullWidth\r\n                                size=\"large\"\r\n                                type=\"submit\"\r\n                                variant=\"contained\"\r\n                                // onClick={handleOpenDialog}\r\n                                onClick={(e)=>{\r\n                                    props.values.finishComputing = true;\r\n                                    props.handleSubmit(e);\r\n                                }}\r\n                            >\r\n                                Submit Quotation\r\n                            </Button>\r\n                        </Grid>\r\n                    </Grid>\r\n                </Container>\r\n            </DialogContent>\r\n            \r\n        </Dialog>\r\n    )\r\n}\r\nexport default ProjectSummaryDialog;","import React, {useState, useEffect} from 'react';\r\nimport {toast} from 'react-toastify';\r\nimport { Link as RouterLink, useNavigate, useLocation } from 'react-router-dom';\r\nimport * as Yup from 'yup';\r\nimport { Formik, Form, FieldArray, getIn } from 'formik';\r\nimport {\r\n    Grid,\r\n    Row,\r\n    Column,\r\n    Box,\r\n    Button,\r\n    Checkbox,\r\n    Container,\r\n    FormHelperText,\r\n    Link,\r\n    TextField,\r\n    Typography,\r\n    makeStyles,\r\n    Select,\r\n    MenuItem,\r\n    InputLabel,\r\n    Dialog, DialogContent, DialogTitle\r\n} from '@material-ui/core';\r\nimport Page from 'src/components/Page';\r\nimport {format} from 'date-fns';\r\n\r\nimport { useDispatch, useSelector } from \"react-redux\";\r\nimport axios from 'axios';\r\n\r\n// import { register } from \"../../_actions/auth\";\r\n\r\nimport {getQuotationById, updateQuotation} from \"../../../_actions/quotation\";\r\n\r\nimport QuotationItem from '../QuotationItem';\r\nimport ProjectSettings from './ProjectSettings';\r\nimport Finishing from './Finishing';\r\nimport PlatesRunningPaper from './PlatesRunningPaper';\r\nimport ExtraCosts from './ExtraCosts';\r\nimport ProjectSummaryDialog from './ProjectSummaryDialog';\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n    root: {\r\n      backgroundColor: theme.palette.background.dark,\r\n      height: '100%',\r\n      paddingBottom: theme.spacing(3),\r\n      paddingTop: theme.spacing(3)\r\n    }\r\n  }));\r\n\r\nconst QuoteReviewDetail = (props) => {\r\n    const classes = useStyles();\r\n    const navigate = useNavigate();\r\n    let location = useLocation();\r\n    const dispatch = useDispatch();\r\n\r\n    const [openDialog, setOpenDialog] = useState(false);\r\n\r\n    const handleOpenDialog = () => \r\n    {\r\n        setOpenDialog(true)\r\n    }\r\n\r\n    const handleCloseDialog = () => {\r\n        setOpenDialog(false)\r\n    }\r\n\r\n    const handleGoBack = () => {\r\n        navigate('/app/quote/review')\r\n    }\r\n\r\n    // const [quoteDetails, setQuoteDetails] = useState(null);\r\n\r\n    const {currentQuotation : quoteDetails} = useSelector((state)=>state.quotation)\r\n\r\n    const [paperTypes, setPaperTypes] = useState([]);\r\n    const [laminationTypes, setLaminationTypes] = useState([])\r\n    const [bindingTypes, setBindingTypes] = useState([])\r\n    \r\n    async function fetchData()\r\n    {\r\n        try\r\n        {\r\n            // const quoteResult = await axios.get(`api/quotations/${location.state.id}`)\r\n            await dispatch(getQuotationById(location.state.id))\r\n            // TODO: Convert these into Redux actions.\r\n            const paperResults = await axios.get('api/papers')\r\n                .then((response)=>{\r\n                    // console.log(response.data)\r\n                    setPaperTypes(response.data)\r\n                })\r\n                .catch((error)=>{\r\n\r\n                })\r\n\r\n            const laminationResults = await axios.get('api/laminations')\r\n                .then((response)=>{\r\n                    // console.log(response.data)\r\n                    setLaminationTypes(response.data)\r\n                })\r\n                .catch((error)=>{\r\n\r\n                })\r\n            \r\n            const bindingResults = await axios.get('api/bindings')\r\n                .then((response)=>{\r\n                    // console.log(response.data)\r\n                    setBindingTypes(response.data)\r\n                })\r\n                .catch((error)=>{\r\n\r\n                })\r\n        }\r\n        catch(error)\r\n        {\r\n            handleGoBack();\r\n        }\r\n        // console.log(quoteDetails);\r\n    }\r\n\r\n    function handleUpdateQuotation (quotation) {\r\n        dispatch(updateQuotation(quotation))\r\n    }\r\n    useEffect(() => {\r\n        fetchData();\r\n    }, [])\r\n    // console.log(quoteDetails)\r\n    return (\r\n        <Page\r\n          className={classes.root}\r\n          title=\"Quote Specifications Review\"\r\n        >\r\n            <Box\r\n                display=\"flex\"\r\n                flexDirection=\"column\"\r\n                overflow=\"auto\"\r\n                height=\"100%\"\r\n            >\r\n                <Container \r\n                    maxWidth={false}\r\n                >\r\n                    <Formik\r\n                        enableReinitialize={true}\r\n                        initialValues={{\r\n                            quotation: quoteDetails,\r\n                            finishComputing: false,\r\n                        }}\r\n                        onSubmit={async (values, actions) => {\r\n                            // console.log(values.quotation);\r\n                            if(values.finishComputing)\r\n                            {\r\n                                values.quotation.approval_status=\"computed\";\r\n                                await handleUpdateQuotation(values.quotation);\r\n                                toast.success(\"Quotation successfully submitted for approval!\")\r\n                                navigate('/app/quote/review')\r\n                            }\r\n                            else\r\n                            {\r\n                                handleUpdateQuotation(values.quotation);\r\n                                toast.success(\"Quotation changes successfully saved!\")\r\n                                fetchData();\r\n                            }\r\n                        }}\r\n                    >\r\n                    {({\r\n                        errors,\r\n                        handleBlur,\r\n                        handleChange,\r\n                        handleSubmit,\r\n                        isSubmitting,\r\n                        touched,\r\n                        values\r\n                    }) => (values.quotation &&\r\n                        <Form onSubmit={handleSubmit}>\r\n                            <Box mb={3}>\r\n                                <Grid container>\r\n                                    <Grid item xs={12} sm={8}>\r\n                                        <Typography\r\n                                            color=\"textPrimary\"\r\n                                            variant=\"h2\"\r\n                                        >\r\n                                            Quotation #{values.quotation.id || \"\"}\r\n                                        </Typography>\r\n                                    </Grid>\r\n                                    <Grid item xs={12} sm={4}>\r\n                                        <Button\r\n                                            color=\"primary\"\r\n                                            // disabled={isSubmitting}\r\n                                            size=\"medium\"\r\n                                            type=\"button\"\r\n                                            variant=\"outlined\"\r\n                                            onClick={\r\n                                                ()=>{\r\n                                                    handleGoBack();\r\n                                                }\r\n                                            }\r\n                                        >\r\n                                            « Return to Quote Review\r\n                                        </Button>\r\n                                    </Grid>\r\n                                </Grid>\r\n                            </Box>\r\n                            <Grid container spacing={3}>\r\n                                <Grid item xs={12} sm={6}>\r\n                                    <Box mb={3}>\r\n                                        <ProjectSettings\r\n                                            handleBlur={handleBlur}\r\n                                            handleChange={handleChange}\r\n                                            values={values}\r\n                                        />\r\n                                        <Grid item xs={12}>\r\n                                            <Typography\r\n                                                color=\"textPrimary\"\r\n                                                variant=\"h3\"\r\n                                                align=\"left\"\r\n                                            >\r\n                                                Quotation Items\r\n                                            </Typography>\r\n                                            \r\n                                            <FieldArray name=\"quotation.items\">\r\n                                                {\r\n                                                    ({ push, remove }) => {\r\n                                                        return ( laminationTypes && paperTypes && bindingTypes &&\r\n                                                        <QuotationItem\r\n                                                            handleBlur={handleBlur}\r\n                                                            handleChange={handleChange}\r\n                                                            values={values}\r\n                                                            push={push}\r\n                                                            remove={remove}\r\n                                                            laminationTypes={laminationTypes}\r\n                                                            paperTypes={paperTypes}\r\n                                                            bindingTypes={bindingTypes}\r\n                                                        />\r\n                                                        )\r\n                                                    }}\r\n                                            </FieldArray>\r\n                                        </Grid>\r\n                                    </Box>\r\n                                </Grid>\r\n                                <Grid item xs={12} sm={6}>\r\n                                    <Box mb={3}>\r\n                                        {/* PLATES RUNNING PAPER */}\r\n                                        \r\n                                        <PlatesRunningPaper\r\n                                            handleBlur={handleBlur}\r\n                                            handleChange={handleChange}\r\n                                            values={values}\r\n                                        />\r\n\r\n                                        <Finishing\r\n                                            handleBlur={handleBlur}\r\n                                            handleChange={handleChange}\r\n                                            values={values}\r\n                                        />\r\n\r\n                                        <ExtraCosts\r\n                                            handleBlur={handleBlur}\r\n                                            handleChange={handleChange}\r\n                                            values={values}\r\n                                        />\r\n                                    </Box>\r\n                                </Grid>\r\n                            </Grid>\r\n                            <Grid container spacing={2}>\r\n                                <Grid item xs={12} sm={6}>\r\n                                    <Button\r\n                                        color=\"primary\"\r\n                                        // disabled={isSubmitting}\r\n                                        fullWidth\r\n                                        size=\"large\"\r\n                                        type=\"button\"\r\n                                        variant=\"outlined\"\r\n                                        onClick={handleSubmit}\r\n                                        // onClick={handleSubmit}\r\n                                    >\r\n                                        Save Changes\r\n                                    </Button>\r\n                                </Grid>\r\n                                <Grid item xs={12} sm={6}>\r\n                                    <Button\r\n                                        color=\"primary\"\r\n                                        // disabled={isSubmitting}\r\n                                        fullWidth\r\n                                        size=\"large\"\r\n                                        type=\"button\"\r\n                                        variant=\"contained\"\r\n                                        onClick={(e)=>{\r\n                                            handleSubmit(e);\r\n                                            handleOpenDialog();\r\n                                        }}\r\n                                        // onClick={handleSubmit}\r\n                                    >\r\n                                        Compute Quotation\r\n                                    </Button>\r\n                                </Grid>\r\n                            </Grid>\r\n                            <ProjectSummaryDialog\r\n                                handleBlur={handleBlur}\r\n                                handleChange={handleChange}\r\n                                values={values}\r\n                                isSubmitting={isSubmitting}\r\n                                openDialog={openDialog}\r\n                                handleCloseDialog={handleCloseDialog}\r\n                                handleGoBack={handleGoBack}\r\n                                handleSubmit={handleSubmit} \r\n                            />\r\n                        </Form>\r\n                    )}  \r\n                    </Formik>\r\n                </Container>\r\n            </Box>\r\n        </Page>\r\n    );\r\n}\r\n\r\nexport default QuoteReviewDetail;","import React, {useState, useEffect} from 'react';\r\nimport { Link as RouterLink, useNavigate, useLocation } from 'react-router-dom';\r\nimport * as Yup from 'yup';\r\nimport { Formik, Form, FieldArray, getIn } from 'formik';\r\nimport {\r\n    Grid,\r\n    Row,\r\n    Column,\r\n    Box,\r\n    Button,\r\n    Checkbox,\r\n    Container,\r\n    FormHelperText,\r\n    Link,\r\n    TextField,\r\n    Typography,\r\n    makeStyles,\r\n    Select,\r\n    MenuItem,\r\n    InputLabel,\r\n    Dialog, DialogContent, DialogTitle\r\n} from '@material-ui/core';\r\nimport Page from 'src/components/Page';\r\nimport {format} from 'date-fns';\r\n\r\nimport { useDispatch, useSelector } from \"react-redux\";\r\nimport axios from 'axios';\r\n\r\n// import { register } from \"../../_actions/auth\";\r\n\r\nimport {createQuotation} from \"../../../_actions/quotation\";\r\n\r\nimport QuotationItem from '../QuotationItem';\r\n\r\nimport { toast } from 'react-toastify';\r\n\r\nimport {uniqueId} from 'lodash';\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n    root: {\r\n      backgroundColor: theme.palette.background.dark,\r\n      height: '100%',\r\n      paddingBottom: theme.spacing(3),\r\n      paddingTop: theme.spacing(3)\r\n    }\r\n  }));\r\n\r\n/*\r\nFORMAT FOR POST REQUEST:\r\n{\r\n    \"project_name\": \"OISCA Forest Booklet\",\r\n    \"product_type\": 1,\r\n    \"approval_status\": \"in_progress\",\r\n    \"printing_process\": \"offset\",\r\n    \"quantity\": 300,\r\n    \"total_pages\": 36,\r\n    \"markup_percentage\": 0.15,\r\n    \"margin_of_error\": 0.1,\r\n    \"items\": [\r\n        {\r\n            \"id\": 1,\r\n            \"lamination\": null,\r\n            \"binding\": 4,\r\n            \"paper\": 19,\r\n            \"extra_plates\": [],\r\n            \"item_type\": \"inner\",\r\n            \"no_colors\": 4,\r\n            \"no_plates_per_copy\": 9,\r\n            \"no_impressions_per_plate\": 300,\r\n            \"no_sheets_ordered_for_copy\": 2.25,\r\n            \"quotation\": 1\r\n        },\r\n        {\r\n            \"id\": 4,\r\n            \"lamination\": 1,\r\n            \"binding\": 4,\r\n            \"paper\": 27,\r\n            \"extra_plates\": [],\r\n            \"item_type\": \"cover\",\r\n            \"no_colors\": 4,\r\n            \"no_plates_per_copy\": 2,\r\n            \"no_impressions_per_plate\": 300,\r\n            \"no_sheets_ordered_for_copy\": 0.25,\r\n            \"quotation\": 1\r\n        }\r\n    ],\r\n    \"page_length\": 8.5,\r\n    \"page_width\": 11.0,\r\n    \"pages_can_fit\": 4,\r\n    \"total_binding_costs\": 500.0,\r\n    \"total_folds\": 4,\r\n    \"cutting_costs\": 200.0,\r\n    \"packaging_costs\": 200.0,\r\n    \"transport_costs\": 400.0\r\n}\r\n*/\r\n\r\nconst RequestForQuotation = (props) => {\r\n    const classes = useStyles();\r\n    const navigate = useNavigate();\r\n    let location = useLocation();\r\n    const dispatch = useDispatch();\r\n\r\n    const [openDialog, setOpenDialog] = useState(false);\r\n\r\n    const handleOpenDialog = () => \r\n    {\r\n        setOpenDialog(true)\r\n    }\r\n\r\n    const handleCloseDialog = () => {\r\n        setOpenDialog(false)\r\n    }\r\n\r\n    const handleGoBack = () => {\r\n        navigate('/app/quote/review')\r\n    }\r\n\r\n    const [quoteDetails, setQuoteDetails] = useState(null);\r\n\r\n    const [paperTypes, setPaperTypes] = useState([]);\r\n    const [laminationTypes, setLaminationTypes] = useState([])\r\n    const [bindingTypes, setBindingTypes] = useState([])\r\n    const { profile: currentUserProfile } = useSelector((state) => state.auth)\r\n    \r\n    async function fetchData()\r\n    {\r\n        try\r\n        {\r\n            const paperResults = await axios.get('api/papers')\r\n                .then((response)=>{\r\n                    // console.log(response.data)\r\n                    setPaperTypes(response.data)\r\n                })\r\n                .catch((error)=>{\r\n\r\n                })\r\n\r\n            const laminationResults = await axios.get('api/laminations')\r\n                .then((response)=>{\r\n                    // console.log(response.data)\r\n                    setLaminationTypes(response.data)\r\n                })\r\n                .catch((error)=>{\r\n\r\n                })\r\n            \r\n            const bindingResults = await axios.get('api/bindings')\r\n                .then((response)=>{\r\n                    // console.log(response.data)\r\n                    setBindingTypes(response.data)\r\n                })\r\n                .catch((error)=>{\r\n\r\n                })\r\n        }\r\n        catch(error)\r\n        {\r\n            toast.error(\"Product specifications failed to load.\");\r\n        }\r\n        // console.log(quoteDetails);\r\n    }\r\n\r\n    function handleCreateQuotation (quotation) {\r\n        return dispatch(createQuotation(quotation))\r\n    }\r\n    useEffect(() => {    \r\n        fetchData();\r\n    }, [])\r\n    // console.log(quoteDetails)\r\n    return (\r\n        <Page\r\n          className={classes.root}\r\n          title=\"Request for Quotation\"\r\n        >\r\n            <Box\r\n                display=\"flex\"\r\n                flexDirection=\"column\"\r\n                overflow=\"auto\"\r\n                height=\"100%\"\r\n            >\r\n                <Container>\r\n                    <Formik\r\n                        enableReinitialize={true}\r\n                        initialValues={{\r\n                            quotation: {\r\n                                \"project_name\": \"\",\r\n                                \"product_type\": 1,\r\n                                \"client\": (currentUserProfile ? currentUserProfile.id : \"\"),\r\n                                \"page_length\":8.5,\r\n                                \"page_width\":11,\r\n                                \"quantity\": 1,\r\n                                \"total_pages\":1,\r\n                                \"items\": [{\r\n                                    lamination: \"\",\r\n                                    binding: \"\",\r\n                                    paper: \"\",\r\n                                    item_type: \"cover\",\r\n                                    no_colors: 4\r\n                                },\r\n                                {\r\n                                    lamination: \"\",\r\n                                    binding: \"\",\r\n                                    paper: \"\",\r\n                                    item_type: \"inner\",\r\n                                    no_colors: 4\r\n                                }]\r\n                            },\r\n                            finishComputing: false,\r\n                        }}\r\n                        onSubmit={(values, actions) => {\r\n                            // console.log(values.quotation);\r\n                            handleCreateQuotation(values.quotation)\r\n                                .then((response)=>{\r\n                                    if(values.finishComputing)\r\n                                    {\r\n                                        handleGoBack();\r\n                                    }\r\n                                    else\r\n                                    {\r\n                                        fetchData();\r\n                                    }\r\n                                })\r\n                                .catch((error)=>{\r\n                                    toast.error(\"Inputted quotation specifications are invalid.\");\r\n                                })\r\n                        }}\r\n                    >\r\n                    {({\r\n                        errors,\r\n                        handleBlur,\r\n                        handleChange,\r\n                        handleSubmit,\r\n                        isSubmitting,\r\n                        touched,\r\n                        values\r\n                    }) => (values.quotation !== null &&\r\n                        <Form onSubmit={handleSubmit}>\r\n                            <Box mb={3}>\r\n                                <Typography\r\n                                    color=\"textPrimary\"\r\n                                    variant=\"h2\"\r\n                                >\r\n                                    New Quotation\r\n                                </Typography>\r\n                                \r\n                            </Box>\r\n                            <Grid container spacing={3}>\r\n                                <Grid item xs={12}>\r\n                                    <Typography\r\n                                        color=\"textPrimary\"\r\n                                        variant=\"h3\"\r\n                                        align=\"left\"\r\n                                    >\r\n                                        Project Settings\r\n                                    </Typography>\r\n                                    <Box mb={1}>\r\n                                        <Typography\r\n                                            color=\"textSecondary\"\r\n                                            variant=\"h5\"\r\n                                            align=\"left\"\r\n                                        >\r\n                                            Project Information\r\n                                        </Typography>\r\n                                        <TextField\r\n                                            fullWidth\r\n                                            // inputProps = {\r\n                                            //     { readOnly: true, }\r\n                                            // }\r\n                                            label=\"Project Name\"\r\n                                            margin=\"normal\"\r\n                                            name=\"quotation.project_name\"\r\n                                            onBlur={handleBlur}\r\n                                            onChange={handleChange}\r\n                                            value={values.quotation ? values.quotation.project_name : \"\"}\r\n                                            variant=\"outlined\"\r\n                                        />\r\n                                        <Grid container spacing={3}>\r\n                                            <Grid item xs={12} sm={6}>\r\n                                                <TextField\r\n                                                    fullWidth\r\n                                                    // inputProps = {\r\n                                                    //     { readOnly: true, }\r\n                                                    // }\r\n                                                    type=\"number\"\r\n                                                    label=\"Quantity\"\r\n                                                    margin=\"normal\"\r\n                                                    name=\"quotation.quantity\"\r\n                                                    onBlur={handleBlur}\r\n                                                    onChange={handleChange}\r\n                                                    value={values.quotation.quantity}\r\n                                                    variant=\"outlined\"\r\n                                                />\r\n                                            </Grid>\r\n                                            <Grid item xs={12} sm={6}>\r\n                                                <TextField\r\n                                                    fullWidth\r\n                                                    // inputProps = {\r\n                                                    //     { readOnly: true, }\r\n                                                    // }\r\n                                                    type=\"number\"\r\n                                                    label=\"Number of Pages\"\r\n                                                    margin=\"normal\"\r\n                                                    name=\"quotation.total_pages\"\r\n                                                    onBlur={handleBlur}\r\n                                                    onChange={handleChange}\r\n                                                    value={values.quotation ? values.quotation.total_pages : 0}\r\n                                                    variant=\"outlined\"\r\n                                                />\r\n                                            </Grid>\r\n                                        </Grid>\r\n                                    </Box>\r\n                                    <Box mb={1}>\r\n                                        <Typography\r\n                                            color=\"textSecondary\"\r\n                                            variant=\"h5\"\r\n                                            align=\"left\"\r\n                                        >\r\n                                            Project Dimensions\r\n                                        </Typography>\r\n                                        <Typography\r\n                                            color=\"textSecondary\"\r\n                                            variant=\"h6\"\r\n                                            align=\"left\"\r\n                                        >\r\n                                            Folded Size\r\n                                        </Typography>\r\n                                        <Grid container spacing={3}>\r\n                                            <Grid item xs={12} sm={6}>\r\n                                                <TextField\r\n                                                    fullWidth\r\n                                                    // inputProps = {\r\n                                                    //     { readOnly: true, }\r\n                                                    // }\r\n                                                    type=\"number\"\r\n                                                    label=\"Page Length\"\r\n                                                    margin=\"normal\"\r\n                                                    name=\"quotation.page_length\"\r\n                                                    onBlur={handleBlur}\r\n                                                    onChange={handleChange}\r\n                                                    value={values.quotation ? values.quotation.page_length : 0}\r\n                                                    variant=\"outlined\"\r\n                                                />\r\n                                            </Grid>\r\n                                            <Grid item xs={12} sm={6}>\r\n                                                <TextField\r\n                                                    fullWidth\r\n                                                    // inputProps = {\r\n                                                    //     { readOnly: true, }\r\n                                                    // }\r\n                                                    type=\"number\"\r\n                                                    label=\"Page Width\"\r\n                                                    margin=\"normal\"\r\n                                                    name=\"quotation.page_width\"\r\n                                                    onBlur={handleBlur}\r\n                                                    onChange={handleChange}\r\n                                                    value={values.quotation ? values.quotation.page_width : 0}\r\n                                                    variant=\"outlined\"\r\n                                                />\r\n                                            </Grid>\r\n                                        </Grid>\r\n                                    </Box>\r\n                                    <Grid item xs={12}>\r\n                                        <Typography\r\n                                            color=\"textPrimary\"\r\n                                            variant=\"h3\"\r\n                                            align=\"left\"\r\n                                        >\r\n                                            Quotation Items\r\n                                        </Typography>\r\n                                        \r\n                                        <FieldArray name=\"quotation.items\">\r\n                                            {\r\n                                                ({ push, remove }) => {\r\n                                                    return ( (laminationTypes && paperTypes && bindingTypes) ?\r\n                                                    <QuotationItem\r\n                                                        handleBlur={handleBlur}\r\n                                                        handleChange={handleChange}\r\n                                                        values={values}\r\n                                                        push={push}\r\n                                                        remove={remove}\r\n                                                        laminationTypes={laminationTypes}\r\n                                                        paperTypes={paperTypes}\r\n                                                        bindingTypes={bindingTypes}\r\n                                                    /> : <></>\r\n                                                    )\r\n                                                }}\r\n                                        </FieldArray>\r\n                                        </Grid>\r\n                                </Grid>\r\n                            </Grid>\r\n                            <Grid container spacing={2} justify=\"flex-end\">\r\n                                <Grid item>\r\n                                    <Button\r\n                                        color=\"primary\"\r\n                                        // disabled={isSubmitting}\r\n                                        // fullWidth\r\n                                        size=\"large\"\r\n                                        type=\"button\"\r\n                                        variant=\"contained\"\r\n                                        onClick={(e)=>{\r\n                                            values.finishComputing=true;\r\n                                            handleSubmit(e);\r\n                                        }}\r\n                                        // onClick={handleSubmit}\r\n                                    >\r\n                                        Submit Request for Quotation\r\n                                    </Button>\r\n                                </Grid>\r\n                            </Grid>\r\n                        </Form>\r\n                    )}  \r\n                    </Formik>\r\n                </Container>\r\n            </Box>\r\n        </Page>\r\n    );\r\n}\r\n\r\nexport default RequestForQuotation;","import React from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport clsx from 'clsx';\r\nimport {\r\n  Box,\r\n  Card,\r\n  CardContent,\r\n  Divider,\r\n  Grid,\r\n  Typography,\r\n  Button,\r\n  makeStyles\r\n} from '@material-ui/core';\r\nimport { Link as RouterLink, useNavigate, useLocation } from 'react-router-dom';\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n  root: {\r\n    display: 'flex',\r\n    flexDirection: 'column',\r\n    maxWidth: '300px',\r\n  },\r\n  statsItem: {\r\n    alignItems: 'center',\r\n    display: 'flex'\r\n  },\r\n  statsIcon: {\r\n    marginRight: theme.spacing(1)\r\n  }\r\n}));\r\n\r\nconst ProductCard = ({ className, product, ...rest }) => {\r\n  const classes = useStyles();\r\n  const navigate = useNavigate();\r\n\r\n  return (\r\n    <Card\r\n      className={clsx(classes.root, className)}\r\n      {...rest}\r\n    >\r\n      <CardContent>\r\n        <Box\r\n          display=\"flex\"\r\n          flexDirection=\"column\"\r\n          mb={3}\r\n        >\r\n            <Typography\r\n            align=\"left\"\r\n            color=\"textPrimary\"\r\n            gutterBottom\r\n            variant=\"h4\"\r\n            >\r\n              {product.productName} Printing\r\n            </Typography>\r\n            <Typography\r\n            align=\"left\"\r\n            gutterBottom\r\n            variant=\"body2\"\r\n            style={{color: 'brown'}}\r\n            >\r\n              Starts at P{product.productStartPrice}/{product.productName}\r\n            </Typography>\r\n          <Typography\r\n            align=\"left\"\r\n            gutterBottom\r\n            variant=\"body1\"\r\n            color=\"textSecondary\"\r\n            >\r\n              {product.productDescription}\r\n            </Typography>\r\n        </Box>\r\n        <Box>\r\n          <Button variant=\"outlined\" color=\"primary\"\r\n            onClick={()=>{\r\n              navigate('/app/quote/request/');\r\n            }}\r\n          >\r\n            REQUEST FOR QUOTATION\r\n          </Button>\r\n        </Box>\r\n      </CardContent>\r\n    </Card>\r\n  );\r\n};\r\n\r\nProductCard.propTypes = {\r\n  className: PropTypes.string,\r\n  product: PropTypes.object.isRequired\r\n};\r\n\r\nexport default ProductCard;\r\n","import { v4 as uuid } from 'uuid';\r\n\r\nexport default [\r\n  {\r\n    id: uuid(),\r\n    productName: 'Book',\r\n    productDescription: 'Print a book, journal, etc., either for personal use or for mass printing.',\r\n    productStartPrice: '2,000'\r\n  },\r\n];\r\n","import React, { useState } from 'react';\r\nimport {\r\n  Box,\r\n  Container,\r\n  Grid,\r\n  makeStyles,\r\n  Typography\r\n} from '@material-ui/core';\r\nimport Page from 'src/components/Page';\r\nimport ProductCards from './ProductCards';\r\nimport data from './data';\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n  root: {\r\n    backgroundColor: theme.palette.background.dark,\r\n    minHeight: '100%',\r\n    paddingBottom: theme.spacing(3),\r\n    paddingTop: theme.spacing(3)\r\n  },\r\n  productCard: {\r\n    height: '100%'\r\n  }\r\n}));\r\n\r\nconst ProductList = () => {\r\n  const classes = useStyles();\r\n  const [products] = useState(data);\r\n\r\n  return (\r\n    <Page\r\n      className={classes.root}\r\n      title=\"Product List\"\r\n    >\r\n      <Container maxWidth={false}>\r\n        <Typography\r\n          className={classes.name}\r\n          color=\"textPrimary\"\r\n          variant=\"h2\"\r\n        >\r\n          Product List\r\n        </Typography>\r\n        <Box mt={2}>\r\n        <Grid container spacing={3}>\r\n          <Grid item xs>\r\n              <Box mt={2}>\r\n                {products.map((product) => (\r\n                  <Grid\r\n                    item\r\n                    key={product.id}\r\n                    lg={12}\r\n                    md={6}\r\n                    xs={12}\r\n                  >\r\n                    <Box mt={2}>\r\n                    <ProductCards\r\n                      className={classes.productCard}\r\n                      product={product}\r\n                    />\r\n                    </Box>\r\n                  </Grid>\r\n                ))}\r\n              </Box>\r\n            </Grid>\r\n            </Grid>\r\n          </Box>\r\n      </Container>\r\n    </Page>\r\n  );\r\n};\r\n\r\nexport default ProductList;\r\n","import React from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport clsx from 'clsx';\r\nimport {\r\n  Box,\r\n  Card,\r\n  CardContent,\r\n  Divider,\r\n  Grid,\r\n  Typography,\r\n  Button,\r\n  Avatar,\r\n  makeStyles\r\n} from '@material-ui/core';\r\nimport GetAppIcon from '@material-ui/icons/GetApp';\r\nimport { AddBoxOutlined } from '@material-ui/icons';\r\nimport { getJobPosition } from \"../../../_helpers\"\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n  root: {\r\n    display: 'flex',\r\n    flexDirection: 'column'\r\n  },\r\n  statsItem: {\r\n    alignItems: 'center',\r\n    display: 'flex'\r\n  },\r\n  statsIcon: {\r\n    marginRight: theme.spacing(1)\r\n  }\r\n}));\r\n\r\nconst EmployeeCard = ({ className, employee, ...rest }) => {\r\n  const classes = useStyles();\r\n\r\n  return (\r\n    <Card\r\n      className={clsx(classes.root, className)}\r\n      {...rest}\r\n    >\r\n      <CardContent>\r\n        <Grid\r\n          container\r\n          >\r\n        <Avatar\r\n          style={{marginRight: 12}}\r\n        ></Avatar>\r\n        <Box\r\n          display=\"flex\"\r\n          flexDirection=\"column\"\r\n        >\r\n            <Typography\r\n            align=\"left\"\r\n            color=\"textPrimary\"\r\n            variant=\"h4\"\r\n            >\r\n              {employee.full_name}\r\n            </Typography>\r\n            <Typography\r\n              color=\"textSecondary\"\r\n              variant=\"subtitle2\"\r\n              align=\"bottom\"\r\n            >\r\n              {getJobPosition(employee.job_position)}\r\n            </Typography>\r\n        </Box>\r\n        </Grid>\r\n      </CardContent>\r\n    </Card>\r\n  );\r\n};\r\n\r\nEmployeeCard.propTypes = {\r\n  className: PropTypes.string,\r\n  employee: PropTypes.object.isRequired\r\n};\r\n\r\nexport default EmployeeCard;\r\n","import axios from \"axios\";\r\nimport authHeader from \"./auth-header\";\r\nimport {getFilteredObject} from \"../_helpers/\";\r\n\r\nconst getEmployees = (jobPosition) => {\r\n    let resultURL = `api/accounts/?job_position=${jobPosition}`\r\n    return axios.get(resultURL);\r\n}\r\n\r\n// eslint-disable-next-line\r\nexport default \r\n{\r\n    getEmployees\r\n}","import {\r\n    REGISTER_SUCCESS,\r\n    REGISTER_FAIL,\r\n    LOGIN_SUCCESS,\r\n    LOGIN_FAIL,\r\n    LOGOUT,\r\n    PROFILE_FOUND,\r\n    PROFILE_NOT_FOUND,\r\n    PROFILE_UPDATE_SUCCESS,\r\n    PROFILE_UPDATE_FAIL,\r\n    ALL_ACCOUNTS_FOUND,\r\n    ALL_ACCOUNTS_NOT_FOUND,\r\n    CLIENTS_FOUND,\r\n    CLIENTS_NOT_FOUND,\r\n    PRODUCTION_EMPLOYEES_FOUND,\r\n    PRODUCTION_EMPLOYEES_NOT_FOUND,\r\n    DRIVER_EMPLOYEES_FOUND,\r\n    DRIVER_EMPLOYEES_NOT_FOUND,\r\n    ACCOUNT_MANAGER_EMPLOYEES_FOUND,\r\n    ACCOUNT_MANAGER_EMPLOYEES_NOT_FOUND,\r\n    OWNER_EMPLOYEES_FOUND,\r\n    OWNER_EMPLOYEES_NOT_FOUND,\r\n} from \"./types\";\r\n  \r\nimport AuthService from \"../_services/auth.service\";\r\nimport UsersService from \"../_services/users.service\";\r\n\r\nexport const createNewEmployee = (account) => (dispatch) => {\r\n\r\n  return AuthService.register(account)\r\n      .then(\r\n        (response) => {\r\n            dispatch({\r\n                type: REGISTER_SUCCESS,\r\n            });\r\n            return Promise.resolve();\r\n        },\r\n        (error) => {\r\n            dispatch({\r\n                type: REGISTER_FAIL,\r\n            });\r\n            return Promise.reject();\r\n        }\r\n      );\r\n}\r\n\r\nexport const updateEmployeeProfile = (username, account) => (dispatch) => {\r\n\r\n  return AuthService.updateProfile(username.account)\r\n    .then((response)=>{\r\n      dispatch({\r\n        type: PROFILE_UPDATE_SUCCESS\r\n      })\r\n      return Promise.resolve();\r\n    })\r\n    .catch((error)=>{\r\n      dispatch({\r\n        type: PROFILE_UPDATE_FAIL\r\n      })\r\n      return Promise.reject();\r\n    })\r\n}\r\n\r\nexport const getProductionEmployees = () => (dispatch) => {\r\n\r\n  return UsersService.getEmployees(\"P\")\r\n    .then((response)=>{\r\n      dispatch({\r\n        type: PRODUCTION_EMPLOYEES_FOUND,\r\n        payload: {userAccounts: response.data}\r\n      })\r\n      return Promise.resolve();\r\n    })\r\n    .catch((error)=>{\r\n      dispatch({\r\n        type: PRODUCTION_EMPLOYEES_NOT_FOUND\r\n      })\r\n      return Promise.reject();\r\n    })\r\n}\r\n\r\nexport const getDriverEmployees = () => (dispatch) => {\r\n\r\n  return UsersService.getEmployees(\"D\")\r\n    .then((response)=>{\r\n      dispatch({\r\n        type: DRIVER_EMPLOYEES_FOUND,\r\n        payload: {userAccounts: response.data}\r\n      })\r\n      return Promise.resolve();\r\n    })\r\n    .catch((error)=>{\r\n      dispatch({\r\n        type: DRIVER_EMPLOYEES_NOT_FOUND\r\n      })\r\n      return Promise.reject();\r\n    })\r\n}\r\n\r\nexport const getOwnerEmployees = () => (dispatch) =>{\r\n\r\n  return UsersService.getEmployees(\"O\")\r\n    .then((response)=>{\r\n      dispatch({\r\n        type: OWNER_EMPLOYEES_FOUND,\r\n        payload: {userAccounts: response.data}\r\n      })\r\n      return Promise.resolve();\r\n    })\r\n    .catch((error)=>{\r\n      dispatch({\r\n        type: OWNER_EMPLOYEES_NOT_FOUND\r\n      })\r\n      return Promise.reject();\r\n    })\r\n}\r\n\r\nexport const getAccountManagerEmployees = () => (dispatch) =>{ \r\n\r\n  return UsersService.getEmployees(\"AM\")\r\n  .then((response)=>{\r\n    dispatch({\r\n      type: ACCOUNT_MANAGER_EMPLOYEES_FOUND,\r\n      payload: {userAccounts: response.data}\r\n    })\r\n    console.log(response.data)\r\n    return Promise.resolve();\r\n  })\r\n  .catch((error)=>{\r\n    dispatch({\r\n      type: ACCOUNT_MANAGER_EMPLOYEES_NOT_FOUND\r\n    })\r\n    console.log(error)\r\n    return Promise.reject();\r\n  })\r\n}\r\n\r\nexport const getAllAccounts = () => (dispatch) =>{\r\n\r\n  return UsersService.getEmployees(\"\")\r\n    .then((response)=>{\r\n      dispatch({\r\n        type: ALL_ACCOUNTS_FOUND,\r\n        payload: {userAccounts: response.data}\r\n      })\r\n      return Promise.resolve();\r\n    })\r\n    .catch((error)=>{\r\n      dispatch({\r\n        type: ALL_ACCOUNTS_NOT_FOUND\r\n      })\r\n      return Promise.reject();\r\n    })\r\n}","import React from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport clsx from 'clsx';\r\nimport {\r\n  Box,\r\n  Card,\r\n  CardContent,\r\n  Divider,\r\n  Grid,\r\n  Typography,\r\n  Button,\r\n  Avatar,\r\n  Dialog,\r\n  DialogTitle,\r\n  DialogContent,\r\n  makeStyles,\r\n  TextField\r\n} from '@material-ui/core';\r\nimport GetAppIcon from '@material-ui/icons/GetApp';\r\nimport { AddBoxOutlined } from '@material-ui/icons';\r\nimport { getJobPosition } from \"../../../_helpers\"\r\nimport { createNewEmployee } from \"../../../_actions/users\"\r\n\r\nimport { Link as RouterLink, useNavigate, useLocation } from 'react-router-dom';\r\nimport * as Yup from 'yup';\r\nimport { Formik, Form, FieldArray, getIn } from 'formik';\r\nimport { useDispatch, useSelector } from \"react-redux\";\r\nimport { toast } from 'react-toastify';\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n  root: {\r\n    display: 'flex',\r\n    flexDirection: 'column'\r\n  },\r\n  statsItem: {\r\n    alignItems: 'center',\r\n    display: 'flex'\r\n  },\r\n  statsIcon: {\r\n    marginRight: theme.spacing(1)\r\n  }\r\n}));\r\n\r\nconst AddEmployeeDialog = (props) => {\r\n  const classes = useStyles();\r\n  const dispatch = useDispatch();\r\n  return (\r\n    <Dialog open={props.openAddEmployeeDialog} onClose={props.handleCloseAddEmployeeDialog} fullWidth={true} maxWidth = {'sm'}>\r\n      {/* <DialogTitle>HELLO WORLD</DialogTitle> */}\r\n      <DialogContent>\r\n        <Formik\r\n          enableReinitialize={true}\r\n          initialValues={{\r\n              \"username\": \"\",\r\n              \"email\": \"placeholder.email@gmail.com\",\r\n              \"first_name\": \"\",\r\n              \"middle_name\": \"\",\r\n              \"last_name\": \"\",\r\n              \"mobile_number\": \"\",\r\n              \"shipping_address\": \"\",\r\n              \"organization_name\": \"\",\r\n              \"job_position\": props.employeeType,\r\n              \"plate_number\": \"\",\r\n              \"license_number\": \"\",\r\n          }}\r\n          validationSchema={\r\n            Yup.object().shape({\r\n              username: Yup.string().required('Username is required'),\r\n              email: Yup.string().email('Must be a valid email').max(255).required('Email is required'),\r\n              mobile_number: Yup.string().required('Mobile number is required').min(10, \"Must be a valid phone number\"),\r\n              first_name: Yup.string().max(255).required('First name is required'),\r\n              middle_name: Yup.string().max(255),\r\n              last_name: Yup.string().max(255).required('Last name is required'),\r\n              // TODO: Mimic Django password validation behavior\r\n              password: Yup.string()\r\n                        .max(255)\r\n                        .required('Password is required')\r\n                        .matches(\r\n                          /^(?=.*[A-Za-z])(?=.*\\d)(?=.*[@$!%*#?&])[A-Za-z\\d@$!%*#?&]{8,}$/,\r\n                          `Must contain: 8 characters, 1 uppercase, 1 lowercase, 1 number, and 1 special character.`\r\n                        )\r\n            })\r\n          }\r\n          onSubmit={(values,actions)=>{\r\n            dispatch(createNewEmployee(values))\r\n              .then((response)=>{\r\n                toast.success(\"New employee successfully created!\");\r\n                props.setOpenAddEmployeeDialog(false)\r\n              })\r\n              .catch((error)=>{\r\n                // console.log(\"What the fuck is this\", values)\r\n                toast.error(\"Inputted employee details are invalid or user already exists.\");\r\n              })\r\n          }}\r\n        >\r\n          {({\r\n            errors,\r\n            handleBlur,\r\n            handleChange,\r\n            handleSubmit,\r\n            isSubmitting,\r\n            touched,\r\n            values\r\n          }) => (\r\n              <form \r\n                onSubmit={handleSubmit}\r\n              >\r\n                <Typography\r\n                  className={classes.name}\r\n                  color=\"textSecondary\"\r\n                  variant=\"h3\"\r\n                >\r\n                  Add {getJobPosition(props.employeeType)} Account\r\n                </Typography>\r\n                <Typography\r\n                  className={classes.name}\r\n                  color=\"textSecondary\"\r\n                  variant=\"h5\"\r\n                >\r\n                  Account Credentials\r\n                </Typography>\r\n                <TextField\r\n                  error={Boolean(touched.username && errors.username)}\r\n                  fullWidth\r\n                  helperText={touched.username && errors.username}\r\n                  label=\"Username\"\r\n                  margin=\"normal\"\r\n                  name=\"username\"\r\n                  onBlur={handleBlur}\r\n                  onChange={handleChange}\r\n                  value={values.username}\r\n                  variant=\"outlined\"\r\n                />\r\n                <TextField\r\n                  error={Boolean(touched.password && errors.password)}\r\n                  fullWidth\r\n                  helperText={touched.password && errors.password}\r\n                  label=\"Password\"\r\n                  margin=\"normal\"\r\n                  name=\"password\"\r\n                  onBlur={handleBlur}\r\n                  onChange={handleChange}\r\n                  type=\"password\"\r\n                  value={values.password}\r\n                  variant=\"outlined\"\r\n                />\r\n                <Typography\r\n                  className={classes.name}\r\n                  color=\"textSecondary\"\r\n                  variant=\"h5\"\r\n                >\r\n                  Employee Basic Information\r\n                </Typography>\r\n                <TextField\r\n                  error={Boolean(touched.first_name && errors.first_name)}\r\n                  fullWidth\r\n                  helperText={touched.first_name && errors.first_name}\r\n                  label=\"First name\"\r\n                  margin=\"normal\"\r\n                  name=\"first_name\"\r\n                  onBlur={handleBlur}\r\n                  onChange={handleChange}\r\n                  value={values.first_name}\r\n                  variant=\"outlined\"\r\n                />\r\n                <TextField\r\n                  error={Boolean(touched.middle_name && errors.middle_name)}\r\n                  fullWidth\r\n                  helperText={touched.middle_name && errors.middle_name}\r\n                  label=\"Middle name\"\r\n                  margin=\"normal\"\r\n                  name=\"middle_name\"\r\n                  onBlur={handleBlur}\r\n                  onChange={handleChange}\r\n                  value={values.middle_name}\r\n                  variant=\"outlined\"\r\n                />\r\n                <TextField\r\n                  error={Boolean(touched.last_name && errors.last_name)}\r\n                  fullWidth\r\n                  helperText={touched.last_name && errors.last_name}\r\n                  label=\"Last name\"\r\n                  margin=\"normal\"\r\n                  name=\"last_name\"\r\n                  onBlur={handleBlur}\r\n                  onChange={handleChange}\r\n                  value={values.last_name}\r\n                  variant=\"outlined\"\r\n                />\r\n                <Typography\r\n                  className={classes.name}\r\n                  color=\"textSecondary\"\r\n                  variant=\"h5\"\r\n                >\r\n                  Employee Contact Information\r\n                </Typography>\r\n                <TextField\r\n                  error={Boolean(touched.email && errors.email)}\r\n                  fullWidth\r\n                  helperText={touched.email && errors.email}\r\n                  label=\"Email address\"\r\n                  margin=\"normal\"\r\n                  name=\"email\"\r\n                  onBlur={handleBlur}\r\n                  onChange={handleChange}\r\n                  type=\"email\"\r\n                  value={values.email}\r\n                  variant=\"outlined\"\r\n                />\r\n                <TextField\r\n                  error={Boolean(touched.mobile_number && errors.mobile_number)}\r\n                  fullWidth\r\n                  helperText={touched.mobile_number && errors.mobile_number}\r\n                  label=\"Mobile number\"\r\n                  margin=\"normal\"\r\n                  name=\"mobile_number\"\r\n                  onBlur={handleBlur}\r\n                  onChange={handleChange}\r\n                  value={values.mobile_number}\r\n                  variant=\"outlined\"\r\n                />\r\n                {props.employeeType !== 'O' && props.employeeType !== 'AM' && \r\n                (\r\n                  <>\r\n                    <Typography\r\n                      className={classes.name}\r\n                      color=\"textSecondary\"\r\n                      variant=\"h5\"\r\n                    >\r\n                      {getJobPosition(props.employeeType)} Details\r\n                    </Typography>\r\n                    {()=>{\r\n                      switch(props.employeeType)\r\n                      {\r\n                        case 'O':\r\n                          return <></>\r\n                        case 'AM':\r\n                          return <></>\r\n                        case 'P':\r\n                          return <></>\r\n                        case 'D':\r\n                          return <></>\r\n                        default:\r\n                          return <></>\r\n                      }\r\n                    }}\r\n                  </>\r\n                )}\r\n                \r\n                <Button\r\n                    color=\"primary\"\r\n                    // disabled={isSubmitting}\r\n                    fullWidth\r\n                    size=\"large\"\r\n                    type=\"button\"\r\n                    variant=\"outlined\"\r\n                    onClick={handleSubmit}\r\n                    // onClick={handleSubmit}\r\n                >\r\n                  Create Account\r\n                </Button>\r\n              </form>\r\n            )}\r\n        </Formik>\r\n      </DialogContent>\r\n    </Dialog>\r\n  )\r\n}\r\nexport default AddEmployeeDialog;","import React, { useEffect, useState } from 'react';\r\nimport {toast} from 'react-toastify';\r\n\r\nimport { useDispatch, useSelector } from \"react-redux\";\r\n\r\nimport {useInterval} from '../../../_helpers/hooks';\r\n\r\nimport {\r\n  Button,\r\n  Box,\r\n  Container,\r\n  Grid,\r\n  makeStyles,\r\n  Typography\r\n} from '@material-ui/core';\r\nimport Page from 'src/components/Page';\r\nimport EmployeeCard from './EmployeeCard';\r\nimport AddEmployeeDialog from './AddEmployeeDialog';\r\nimport data from './data';\r\nimport {\r\n  getAccountManagerEmployees,\r\n  getOwnerEmployees,\r\n  getDriverEmployees,\r\n  getProductionEmployees,\r\n} from \"../../../_actions/users\";\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n  root: {\r\n    backgroundColor: theme.palette.background.dark,\r\n    minHeight: '100%',\r\n    paddingBottom: theme.spacing(3),\r\n    paddingTop: theme.spacing(3)\r\n  },\r\n  employeeCard: {\r\n    height: '100%'\r\n  }\r\n}));\r\n\r\nconst EmployeeList = () => {\r\n  const classes = useStyles();\r\n  const dispatch = useDispatch();\r\n  const {accountManagers} = useSelector(state=>state.users);\r\n  const {owners} = useSelector(state=>state.users);\r\n  const {productionEmployees} = useSelector(state=>state.users);\r\n  const {driverEmployees} = useSelector(state=>state.users);\r\n\r\n  async function handleFetchData () {\r\n    await dispatch(getAccountManagerEmployees())\r\n      .then((response)=>{\r\n        console.log(response);\r\n      })\r\n      .catch((error)=>{\r\n        console.log(error);\r\n      })\r\n    await dispatch(getOwnerEmployees())\r\n    await dispatch(getDriverEmployees())\r\n    await dispatch(getProductionEmployees())\r\n    console.log(accountManagers);\r\n  }\r\n\r\n  useEffect(()=>{\r\n    handleFetchData();\r\n  },[])\r\n\r\n  useInterval(()=>{\r\n    handleFetchData();\r\n  }, 2000);\r\n\r\n  const [openAddEmployeeDialog, setOpenAddEmployeeDialog] = useState(false);\r\n  const [employeeType, setEmployeeType] = useState('O');\r\n\r\n  return (\r\n    <Page\r\n      className={classes.root}\r\n      title=\"Order Tracking\"\r\n    >\r\n      <Container maxWidth={false}>\r\n        <AddEmployeeDialog\r\n          employeeType={employeeType}\r\n          openAddEmployeeDialog={openAddEmployeeDialog}\r\n          handleCloseAddEmployeeDialog={()=>{\r\n            setOpenAddEmployeeDialog(false);\r\n          }}\r\n          setOpenAddEmployeeDialog={setOpenAddEmployeeDialog}\r\n        />\r\n        <Typography\r\n          className={classes.name}\r\n          color=\"textPrimary\"\r\n          variant=\"h2\"\r\n        >\r\n          Employee Authorization\r\n        </Typography>\r\n        <Box mt={2}>\r\n          <Grid container spacing={3}>\r\n            <Grid item xs={12} sm={6} md={4}>\r\n              <Typography\r\n                className={classes.name}\r\n                color=\"textSecondary\"\r\n                variant=\"h5\"\r\n              >\r\n                Account Manager/Owner Access\r\n              </Typography>\r\n              <Box my={1}>\r\n                <Grid container style={{maxHeight:540,overflow:'auto'}} my={1}>\r\n                  {accountManagers && accountManagers.map((employee) => (\r\n                    <Grid\r\n                      item\r\n                      key={employee.id}\r\n                      xs={12}\r\n                    >\r\n                      <EmployeeCard\r\n                        className={classes.employeeCard}\r\n                        employee={employee}\r\n                      />\r\n                    </Grid>\r\n                  ))}\r\n                  {owners && owners.map((employee) => (\r\n                    <Grid\r\n                      item\r\n                      key={employee.id}\r\n                      xs={12}\r\n                    >\r\n                      <EmployeeCard\r\n                        className={classes.employeeCard}\r\n                        employee={employee}\r\n                      />\r\n                    </Grid>\r\n                  ))}\r\n                </Grid>\r\n              </Box>\r\n              <Grid container>\r\n                <Grid item xs={12} sm={6} md={12}>\r\n                  <Button\r\n                      color=\"primary\"\r\n                      // disabled={isSubmitting}\r\n                      fullWidth\r\n                      size=\"small\"\r\n                      type=\"button\"\r\n                      variant=\"outlined\"\r\n                      onClick={()=>{\r\n                        setEmployeeType('AM');\r\n                        setOpenAddEmployeeDialog(true);\r\n                      }}\r\n                      // onClick={handleSubmit}\r\n                  >\r\n                      Add Account Manager\r\n                  </Button>\r\n                </Grid>\r\n                <Grid item xs={12} sm={6} md={12}>\r\n                  <Button\r\n                    color=\"primary\"\r\n                    // disabled={isSubmitting}\r\n                    fullWidth\r\n                    size=\"small\"\r\n                    type=\"button\"\r\n                    variant=\"outlined\"\r\n                    onClick={()=>{\r\n                      setEmployeeType('O');\r\n                      setOpenAddEmployeeDialog(true);\r\n                    }}\r\n                    // onClick={handleSubmit}\r\n                  >\r\n                    Add Owner\r\n                  </Button>\r\n                </Grid>\r\n              </Grid>\r\n            </Grid>\r\n            <Grid item xs={12} sm={6} md={4}>\r\n              <Typography\r\n                className={classes.name}\r\n                color=\"textSecondary\"\r\n                variant=\"h5\"\r\n              >\r\n                Production Team Access\r\n              </Typography>\r\n              <Box my={1}>\r\n                <Grid container style={{maxHeight:540,overflow:'auto'}}>\r\n                  {productionEmployees && productionEmployees.map((employee) => (\r\n                    <Grid\r\n                      item\r\n                      key={employee.id}\r\n                      xs={12}\r\n                    >\r\n                      <EmployeeCard\r\n                        className={classes.employeeCard}\r\n                        employee={employee}\r\n                      />\r\n                    </Grid>\r\n                  ))}  \r\n                </Grid>\r\n              </Box>\r\n              <Button\r\n                color=\"primary\"\r\n                // disabled={isSubmitting}\r\n                fullWidth\r\n                size=\"small\"\r\n                type=\"button\"\r\n                variant=\"outlined\"\r\n                onClick={()=>{\r\n                  setEmployeeType('P');\r\n                  setOpenAddEmployeeDialog(true);\r\n                }}\r\n                // onClick={handleSubmit}\r\n              >\r\n                Add Production Employee\r\n              </Button>\r\n            </Grid>\r\n              <Grid item xs={12} sm={6} md={4}>\r\n                <Typography\r\n                  className={classes.name}\r\n                  color=\"textSecondary\"\r\n                  variant=\"h5\"\r\n                >\r\n                  Driver Access\r\n                </Typography>\r\n                <Box my={1}>\r\n                  <Grid container style={{maxHeight:540,overflow:'auto'}}>\r\n                    {driverEmployees && driverEmployees.map((employee) => (\r\n                      <Grid\r\n                        item\r\n                        key={employee.id}\r\n                        xs={12}\r\n                      >\r\n                        <EmployeeCard\r\n                          className={classes.employeeCard}\r\n                          employee={employee}\r\n                        />\r\n                      </Grid>\r\n                    ))}\r\n                  </Grid>\r\n                </Box>\r\n                <Button\r\n                  color=\"primary\"\r\n                  // disabled={isSubmitting}\r\n                  fullWidth\r\n                  size=\"small\"\r\n                  type=\"button\"\r\n                  variant=\"outlined\"\r\n                  onClick={()=>{\r\n                    setEmployeeType('D');\r\n                    setOpenAddEmployeeDialog(true);\r\n                  }}\r\n                  // onClick={handleSubmit}\r\n                >\r\n                  Add Driver Employee\r\n                </Button>\r\n              </Grid>\r\n            </Grid>\r\n        </Box>\r\n      </Container>\r\n    </Page>\r\n  );\r\n};\r\n\r\nexport default EmployeeList;\r\n","import { v4 as uuid } from 'uuid';\r\n\r\nexport default [\r\n  {\r\n    id: uuid(),\r\n    employeeName: 'Juan Aquino',\r\n    employeeJob: 'Account Manager',\r\n  },\r\n  {\r\n    id: uuid(),\r\n    employeeName: 'Juan Aquino',\r\n    employeeJob: 'Account Manager',\r\n  },\r\n  {\r\n    id: uuid(),\r\n    employeeName: 'Juan Aquino',\r\n    employeeJob: 'Account Manager',\r\n  },\r\n];\r\n","import React, {useEffect, useRef} from 'react';\r\nimport { Navigate, Redirect } from 'react-router-dom';\r\nimport { useSelector, useDispatch } from \"react-redux\";\r\nimport { getProfile, logout } from \"./_actions/auth\";\r\nimport { useRoutes } from 'react-router-dom';\r\n\r\nimport DashboardLayout from 'src/layouts/DashboardLayout';\r\nimport MainLayout from 'src/layouts/MainLayout';\r\nimport AccountView from 'src/views/account/AccountView';\r\nimport CustomerListView from 'src/views/customer/CustomerListView';\r\nimport DashboardView from 'src/views/reports/DashboardView';\r\nimport LoginView from 'src/views/auth/LoginView';\r\nimport NotFoundView from 'src/views/errors/NotFoundView';\r\n\r\nimport TrackingCUSTListView from 'src/views/tracking_cus/ProductListView';\r\nimport RegisterView from 'src/views/auth/RegisterView';\r\nimport SettingsView from 'src/views/settings/SettingsView';\r\nimport QuotationReviewList from 'src/views/quotations/QuoteReviewListView';\r\nimport QuotationReviewDetail from 'src/views/quotations/QuoteReviewDetailView';\r\nimport RequestForQuotation from 'src/views/quotations/RequestForQuotationView';\r\nimport ProductView from 'src/views/product/ProductListView';\r\nimport EmployeeView from 'src/views/employee/EmployeeListView';\r\nimport {useInterval} from 'src/_helpers/hooks'\r\n\r\nfunction Routes() {\r\n\r\n  const dispatch = useDispatch()\r\n\r\n  const fetchProfileFinished = useRef(false);\r\n  useInterval(() => { \r\n      async function fetchProfile () {\r\n        await dispatch(getProfile())\r\n          .then((response)=>{\r\n            fetchProfileFinished.current = true;\r\n          })\r\n          .catch((error)=>{\r\n            dispatch(logout())\r\n            fetchProfileFinished.current = true;\r\n          })\r\n      }\r\n      fetchProfile();\r\n    }\r\n    , 15000);\r\n\r\n  useEffect(()=>{\r\n    async function initialFetchProfile () {\r\n      await dispatch(getProfile())\r\n        .then((response)=>{\r\n          fetchProfileFinished.current = true;\r\n        })\r\n        .catch((error)=>{\r\n          dispatch(logout())\r\n          fetchProfileFinished.current = true;\r\n        })\r\n    }\r\n    initialFetchProfile()\r\n  }, [])\r\n  // useEffect(()=>{\r\n  //   (async function fetchProfile () {\r\n  //     await dispatch(getProfile())\r\n  //           .then((response)=>{\r\n  //             fetchProfileFinished.current = true;\r\n  //           })\r\n  //           .catch((error)=>{\r\n  //             dispatch(logout())\r\n  //             fetchProfileFinished.current = true;\r\n  //           })\r\n  //   })();\r\n  // },[]);\r\n\r\n  const { profile: currentUserProfile } = useSelector((state) => state.auth)\r\n  \r\n  // console.log(\"Found profile, \", currentUserProfile);\r\n\r\n  const limitRouteAccess = (roles, element) =>\r\n  {\r\n    // const currentUserProfile = getProfile();\r\n    if(fetchProfileFinished.current)\r\n    {\r\n      if (currentUserProfile === null) {\r\n        // console.log(\"Go back to log in \", currentUserProfile)\r\n        return <Navigate to=\"/login\"/>\r\n      }\r\n      else if(roles.length > 0 && roles.indexOf(currentUserProfile.job_position) ===-1)\r\n      {\r\n        // console.log(\"Go back to home\")\r\n        return <Navigate to=\"/\"/>\r\n      }\r\n    }\r\n    // console.log(\"what is happening?\")\r\n    return element;\r\n  }\r\n  \r\n  let routes = [\r\n    {\r\n      path: 'app',\r\n      element: <DashboardLayout />,\r\n      children: [\r\n        { path: 'account', element: limitRouteAccess([], <AccountView />) },\r\n        { path: 'customers', element: limitRouteAccess(['O','AM'], <CustomerListView />) },\r\n        { path:'quote', children: [\r\n          { path: 'review', element: limitRouteAccess(['O', 'AM'], <QuotationReviewList />)},\r\n          { path: 'detail', element: limitRouteAccess(['O', 'AM'],<QuotationReviewDetail/>)},\r\n          { path: 'request', element: limitRouteAccess([],<RequestForQuotation/>)},\r\n        ]},\r\n        // { path: 'review', element: limitRouteAccess(['O', 'AM'], <QuotationReviewList />)},\r\n        { path: 'dashboard', element: limitRouteAccess([],<DashboardView />)},\r\n        { path: 'employees', element: limitRouteAccess(['O','AM'],<EmployeeView />) },\r\n        { path: 'products', element: limitRouteAccess([],<ProductView />)},\r\n        { path: 'settings', element: limitRouteAccess([],<SettingsView />)},\r\n        { path: '*', element: limitRouteAccess([],<Navigate to=\"/404\" />)},\r\n        { path: 'tracking', element: limitRouteAccess([], <TrackingCUSTListView />) },\r\n      ]\r\n    },\r\n    {\r\n      path: '/',\r\n      element: <MainLayout />,\r\n      children: [\r\n        { path: 'login', element: <LoginView /> },\r\n        { path: 'logout', element: <Navigate to=\"/login\"/>},\r\n        { path: 'register', element: <RegisterView /> },\r\n        { path: '404', element: <NotFoundView /> },\r\n        { path: '/', element: <Navigate to=\"/app/dashboard\" /> },\r\n        { path: '*', element: <Navigate to=\"/404\" /> }\r\n      ]\r\n    }\r\n  ];\r\n\r\n  const routing = useRoutes(routes);\r\n\r\n  return routing;\r\n}\r\n\r\nexport default Routes\r\n","import 'react-perfect-scrollbar/dist/css/styles.css';\r\nimport { ToastContainer } from \"react-toastify\";\r\nimport React, {useEffect} from 'react';\r\nimport { useRoutes } from 'react-router-dom';\r\nimport { ThemeProvider } from '@material-ui/core';\r\nimport GlobalStyles from 'src/components/GlobalStyles';\r\nimport 'src/mixins/chartjs';\r\nimport theme from 'src/theme';\r\nimport Routes from 'src/routes';\r\nimport { useSelector, useDispatch } from \"react-redux\";\r\nimport { getProfile, logout } from \"./_actions/auth\";\r\nimport { useInterval } from './_helpers/hooks';\r\n\r\n\r\nconst App = () => {\r\n  const dispatch = useDispatch();\r\n  useInterval(()=>{\r\n    dispatch(getProfile())\r\n  }, 150000)\r\n\r\n  return (\r\n    <ThemeProvider theme={theme}>\r\n      <GlobalStyles />\r\n        <ToastContainer \r\n          position=\"top-right\"\r\n          closeOnClick\r\n          hideProgressBar={true}\r\n          autoClose={2000}\r\n          draggable={false}\r\n        />\r\n        <Routes/>\r\n    </ThemeProvider>\r\n  );\r\n};\r\n\r\nexport default App;\r\n","import {\r\n    REGISTER_SUCCESS,\r\n    REGISTER_FAIL,\r\n    LOGIN_SUCCESS,\r\n    LOGIN_FAIL,\r\n    LOGOUT,\r\n    PROFILE_FOUND,\r\n    PROFILE_NOT_FOUND,\r\n} from \"../_actions/types\";\r\n\r\nconst user = JSON.parse(localStorage.getItem(\"user\"));\r\n  \r\nconst initialState = user\r\n    ? { isLoggedIn: true, user: user, profile: null }\r\n    : { isLoggedIn: false, user: null, profile: null };\r\n\r\n// eslint-disable-next-line \r\nexport default function (state = initialState, action) {\r\n    const { type, payload } = action;\r\n  \r\n    switch (type) {\r\n        case REGISTER_SUCCESS:\r\n            return {\r\n                ...state,\r\n                isLoggedIn: false,\r\n            };\r\n        case REGISTER_FAIL:\r\n            return {\r\n                ...state,\r\n                isLoggedIn: false,\r\n            };\r\n        case LOGIN_SUCCESS:\r\n            return {\r\n                ...state,\r\n                isLoggedIn: true,\r\n                user: payload.user,\r\n            };\r\n        case LOGIN_FAIL:\r\n            return {\r\n                ...state,\r\n                isLoggedIn: false,\r\n                user: null,\r\n            };\r\n        case LOGOUT:\r\n            return {\r\n                ...state,\r\n                isLoggedIn: false,\r\n                user: null,\r\n            };\r\n        case PROFILE_FOUND:\r\n            return {\r\n                ...state,\r\n                profile: payload.profile,\r\n            }\r\n        case PROFILE_NOT_FOUND:\r\n            return {\r\n                ...state,\r\n                isLoggedIn: false,\r\n                profile: null,\r\n            }\r\n        default:\r\n            return state;\r\n    }\r\n  }","import { SET_MESSAGE, CLEAR_MESSAGE } from \"../_actions/types\";\r\n\r\nconst initialState = {};\r\n\r\n// eslint-disable-next-line\r\nexport default function (state = initialState, action) {\r\n    const { type, payload } = action;\r\n\r\n    switch (type) {\r\n        case SET_MESSAGE:\r\n            return { message: payload };\r\n\r\n        case CLEAR_MESSAGE:\r\n            return { message: \"\" };\r\n\r\n        default:\r\n            return state;\r\n    }\r\n}\r\n","import {\r\n    // STANDARD SINGLE QUOTATION CRUD ACTIONS\r\n    CREATE_QUOTATION_SUCCESS,\r\n    CREATE_QUOTATION_FAIL,\r\n    RETRIEVE_QUOTATION_SUCCESS,\r\n    RETRIEVE_QUOTATION_FAIL,\r\n    UPDATE_QUOTATION_SUCCESS,\r\n    UPDATE_QUOTATION_FAIL,\r\n    DELETE_QUOTATION_SUCCESS,\r\n    DELETE_QUOTATION_FAIL,\r\n\r\n    // GET ALL QUOTATIONS\r\n    RETRIEVE_ALL_QUOTATIONS_SUCCESS,\r\n    RETRIEVE_ALL_QUOTATIONS_FAIL,\r\n\r\n    // GET ALL APPROVED QUOTATIONS\r\n    RETRIEVE_APPROVED_QUOTATIONS_SUCCESS,\r\n    RETRIEVE_APPROVED_QUOTATIONS_FAIL,\r\n\r\n    // GET ALL COMPUTED QUOTATIONS\r\n    RETRIEVE_COMPUTED_QUOTATIONS_SUCCESS,\r\n    RETRIEVE_COMPUTED_QUOTATIONS_FAIL,\r\n\r\n    // GET ALL IN PROGRESS QUOTATIONS\r\n    RETRIEVE_IN_PROGRESS_QUOTATIONS_SUCCESS,\r\n    RETRIEVE_IN_PROGRESS_QUOTATIONS_FAIL,\r\n} from '../_actions/types'\r\n\r\nconst initialState = {\r\n    currentQuotation : null,\r\n    allQuotations: null,\r\n    computedQuotations: null,\r\n    inProgressQuotations: null,\r\n    approvedQuotations: null,\r\n}\r\n\r\n// eslint-disable-next-line \r\nexport default function (state = initialState, action) {\r\n    const { type, payload } = action;\r\n    switch(type)\r\n    {\r\n        case CREATE_QUOTATION_SUCCESS:\r\n            return {\r\n                ...state,\r\n                currentQuotation: payload.quotation,\r\n            };\r\n        case CREATE_QUOTATION_FAIL:\r\n            return {\r\n                ...state,\r\n                currentQuotation: null\r\n            };\r\n        case RETRIEVE_QUOTATION_SUCCESS:\r\n            return {\r\n                ...state,\r\n                currentQuotation: payload.quotation,\r\n            };\r\n        case RETRIEVE_QUOTATION_FAIL:\r\n            return {\r\n                ...state,\r\n                currentQuotation: null\r\n            };\r\n        case RETRIEVE_ALL_QUOTATIONS_SUCCESS:\r\n            return {\r\n                ...state,\r\n                allQuotations: payload.quotations,\r\n            };\r\n        case RETRIEVE_ALL_QUOTATIONS_FAIL:\r\n            return {\r\n                ...state,\r\n                allQuotations: null\r\n            };\r\n        case RETRIEVE_IN_PROGRESS_QUOTATIONS_SUCCESS:\r\n            return {\r\n                ...state,\r\n                inProgressQuotations: payload.quotations\r\n            }\r\n        case RETRIEVE_IN_PROGRESS_QUOTATIONS_FAIL:\r\n            return {\r\n                ...state,\r\n                inProgressQuotations: null\r\n            }\r\n        case RETRIEVE_COMPUTED_QUOTATIONS_SUCCESS:\r\n            return {\r\n                ...state,\r\n                computedQuotations: payload.quotations\r\n            };\r\n        case RETRIEVE_COMPUTED_QUOTATIONS_FAIL:\r\n            return {\r\n                ...state,\r\n                computedQuotations: null\r\n            };\r\n        case RETRIEVE_APPROVED_QUOTATIONS_SUCCESS:\r\n            return {\r\n                ...state,\r\n                approvedQuotations: payload.quotations\r\n            }\r\n        case RETRIEVE_APPROVED_QUOTATIONS_FAIL:\r\n            return {\r\n                ...state,\r\n                approvedQuotations: null\r\n            }\r\n        case UPDATE_QUOTATION_SUCCESS:\r\n            return {\r\n                ...state,\r\n            };\r\n        case UPDATE_QUOTATION_FAIL:\r\n            return {\r\n                ...state,\r\n            };\r\n        default:\r\n            return state;\r\n    }\r\n}","import {\r\n    // STANDARD SINGLE JOB ORDER CRUD ACTIONS\r\n    CREATE_JOB_ORDER_SUCCESS,\r\n    CREATE_JOB_ORDER_FAIL,\r\n\r\n    // RETRIEVE PENDING JOB ORDERS\r\n    RETRIEVE_PENDING_JOB_ORDERS_SUCCESS,\r\n    RETRIEVE_PENDING_JOB_ORDERS_FAIL,\r\n\r\n    // RETRIEVE IN PROGRESS JOB ORDERS\r\n    RETRIEVE_IN_PROGRESS_JOB_ORDERS_SUCCESS,\r\n    RETRIEVE_IN_PROGRESS_JOB_ORDERS_FAIL,\r\n\r\n    // RETRIEVE OUT FOR DELIVERY JOB ORDERS\r\n    RETRIEVE_OUT_FOR_DELIVERY_JOB_ORDERS_SUCCESS,\r\n    RETRIEVE_OUT_FOR_DELIVERY_JOB_ORDERS_FAIL,\r\n\r\n    // RETRIEVE FINISHED JOB ORDERS\r\n    RETRIEVE_FINISHED_JOB_ORDERS_SUCCESS,\r\n    RETRIEVE_FINISHED_JOB_ORDERS_FAIL\r\n\r\n} from '../_actions/types'\r\n\r\nconst initialState = {\r\n    currentJobOrder: null,\r\n    pendingJobOrders: null,\r\n    inProgressJobOrders: null,\r\n    outForDeliveryJobOrders: null,\r\n    finishedJobOrders : null,\r\n}\r\n\r\n// eslint-disable-next-line \r\nexport default function (state = initialState, action) {\r\n    const { type, payload } = action;\r\n    switch(type)\r\n    {\r\n        case CREATE_JOB_ORDER_SUCCESS:\r\n            return {\r\n                ...state,\r\n                currentJobOrder: payload.jobOrder,\r\n            };\r\n        case CREATE_JOB_ORDER_FAIL:\r\n            return {\r\n                ...state,\r\n                currentJobOrder: null\r\n            };\r\n        case RETRIEVE_PENDING_JOB_ORDERS_SUCCESS:\r\n            return {\r\n                ...state,\r\n                pendingJobOrders: payload.jobOrders\r\n            }\r\n        case RETRIEVE_PENDING_JOB_ORDERS_FAIL:\r\n            return {\r\n                ...state,\r\n                pendingJobOrders: null\r\n            }\r\n        case RETRIEVE_IN_PROGRESS_JOB_ORDERS_SUCCESS:\r\n            return {\r\n                ...state,\r\n                inProgressJobOrders: payload.jobOrders\r\n            }\r\n        case RETRIEVE_IN_PROGRESS_JOB_ORDERS_FAIL:\r\n            return {\r\n                ...state,\r\n                inProgressJobOrders: null\r\n            }\r\n        case RETRIEVE_OUT_FOR_DELIVERY_JOB_ORDERS_SUCCESS:\r\n            return {\r\n                ...state,\r\n                outForDeliveryJobOrders: payload.jobOrders\r\n            }\r\n        case RETRIEVE_OUT_FOR_DELIVERY_JOB_ORDERS_FAIL:\r\n            return {\r\n                ...state,\r\n                outForDeliveryJobOrders: null\r\n            }\r\n        case RETRIEVE_FINISHED_JOB_ORDERS_SUCCESS:\r\n            return {\r\n                ...state,\r\n                finishedJobOrders: payload.jobOrders\r\n            }\r\n        case RETRIEVE_FINISHED_JOB_ORDERS_FAIL:\r\n            return {\r\n                ...state,\r\n                finishedJobOrders: null\r\n            }\r\n        default:\r\n            return state;\r\n    }\r\n}","import {\r\n    REGISTER_SUCCESS,\r\n    REGISTER_FAIL,\r\n    LOGIN_SUCCESS,\r\n    LOGIN_FAIL,\r\n    LOGOUT,\r\n\r\n    PROFILE_FOUND,\r\n    PROFILE_NOT_FOUND,\r\n    PROFILE_UPDATE_SUCCESS,\r\n    PROFILE_UPDATE_FAIL,\r\n\r\n    CLIENTS_FOUND,\r\n    CLIENTS_NOT_FOUND,\r\n\r\n    PRODUCTION_EMPLOYEES_FOUND,\r\n    PRODUCTION_EMPLOYEES_NOT_FOUND,\r\n\r\n    DRIVER_EMPLOYEES_FOUND,\r\n    DRIVER_EMPLOYEES_NOT_FOUND,\r\n    \r\n    ACCOUNT_MANAGER_EMPLOYEES_FOUND,\r\n    ACCOUNT_MANAGER_EMPLOYEES_NOT_FOUND,\r\n\r\n    OWNER_EMPLOYEES_FOUND,\r\n    OWNER_EMPLOYEES_NOT_FOUND,\r\n} from \"../_actions/types\";\r\n\r\nconst initialState = {\r\n    allUsers : null,\r\n    productionEmployees: null,\r\n    driverEmployees: null,\r\n    accountManagers: null,\r\n    owners: null,\r\n}\r\n// eslint-disable-next-line \r\nexport default function (state = initialState, action) {\r\n    const { type, payload } = action;\r\n    switch(type)\r\n    {\r\n        case PRODUCTION_EMPLOYEES_FOUND:\r\n            return {\r\n                ...state,\r\n                productionEmployees: payload.userAccounts,\r\n            };\r\n        case PRODUCTION_EMPLOYEES_NOT_FOUND:\r\n            return {\r\n                ...state,\r\n                prouctionEmployees: null,\r\n            }\r\n        case DRIVER_EMPLOYEES_FOUND:\r\n            return {\r\n                ...state,\r\n                driverEmployees: payload.userAccounts\r\n            }\r\n        case DRIVER_EMPLOYEES_NOT_FOUND:\r\n            return {\r\n                ...state,\r\n                driverEmployees: null\r\n            }\r\n        case OWNER_EMPLOYEES_FOUND:\r\n            return {\r\n                ...state,\r\n                owners: payload.userAccounts,\r\n            }\r\n        case OWNER_EMPLOYEES_NOT_FOUND:\r\n            return {\r\n                ...state,\r\n                owners: null,\r\n            }\r\n        case ACCOUNT_MANAGER_EMPLOYEES_FOUND:\r\n            // console.log(\"WORKING! \", payload.userAccounts);\r\n            return {\r\n                ...state,\r\n                accountManagers:  payload.userAccounts,\r\n            }\r\n        case ACCOUNT_MANAGER_EMPLOYEES_NOT_FOUND:\r\n            return {\r\n                ...state,\r\n                accountManagers: null,\r\n            }\r\n        default:\r\n            return state;\r\n    }\r\n}","import { combineReducers } from \"redux\";\r\nimport auth from \"./auth\";\r\nimport message from \"./message\";\r\nimport quotation from \"./quotation\";\r\nimport jobOrder from \"./jobOrder\";\r\nimport users from './users';\r\n\r\nconst rootReducer = combineReducers({\r\n    auth,\r\n    message,\r\n    quotation,\r\n    jobOrder,\r\n    users,\r\n});\r\nexport default rootReducer;","import { createStore, applyMiddleware } from \"redux\";\r\nimport thunk from \"redux-thunk\";\r\nimport rootReducer from \"./_reducers\";\r\n\r\nconst middleware = [thunk];\r\n\r\nconst store = createStore(\r\n    rootReducer,\r\n    applyMiddleware(...middleware)\r\n);\r\n\r\nexport default store;","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport { BrowserRouter } from 'react-router-dom';\r\nimport * as serviceWorker from './serviceWorker';\r\nimport App from './App';\r\nimport axios from 'axios';\r\nimport \"react-toastify/dist/ReactToastify.css\";\r\nimport { Provider } from \"react-redux\";\r\nimport store from \"./store\";\r\n\r\n// axios configuration\r\naxios.defaults.xsrfCookieName = 'csrftoken'\r\naxios.defaults.xsrfHeaderName = 'X-CSRFToken'\r\n// React stuff\r\nReactDOM.render((\r\n  <Provider store={store}>\r\n    <BrowserRouter>\r\n      <App />\r\n    </BrowserRouter>\r\n  </Provider>\r\n), document.getElementById('root'));\r\n\r\nserviceWorker.unregister();\r\n"],"sourceRoot":""}